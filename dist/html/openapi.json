{
  "openapi": "3.1.0",
  "info": {
    "description": "\n# Presenting: Your First Rate APIs\n\nPowered by Core 2.0\n\nWe are pleased to announce that your performance reporting and data can now be accessed through a bespoke API organized around REST. Choose any data from individual data points to the full OnPoint data sets, in addition to audit reports, statistics, logs and more, all delivered on demand when and where you need it! Access the full capability and functionality of Core 2.0 to create the interface you need to power your dashboards, reports, portals, and apps.\n\n# Demo API Reference\n\nWe created this Demo API to demonstrate how simple it can be to retrieve comprehensive data sets for many of our most popular reports including account demographics, composite and portfolio allocation and performance, holdings, transactions, top performance, and more!  \n\nVisit our [Demo API Reference](http://apisandbox.prod.ops.lan) to learn more about how we can help you to define your own API to seamlessly integrate our extensive data sets and calculations into your applications, dashboards, and workflows.\n\n## Host URLS & Resources\n\nBelow are the host URLs for our current demo and development environments.\n\n| Products Dev Environment | Host/Resource URL                                                                  |\n| ------------------------ | ---------------------------------------------------------------------------------- |\n| API Docs                 | [https://apisandbox.prod.ops.lan](https://apisandbox.prod.ops.lan)                 |\n| API Gateway              | [https://apisandbox.prod.ops.lan:8443](https://apisandbox.prod.ops.lan:8443/hello) |\n| API Reference            | [http://apisandbox.prod.ops.lan](http://apisandbox.prod.ops.lan)                   |\n\n| First Rate Demo Environment | Host/Resource URL |\n| --------------------------- | ----------------- |\n| API Docs                    | [TBD](#)          |\n| API Gateway                 | [TBD](#)          |\n| API Reference               | [TBD](#)          |\n\n\n## Request & Response Structure\n\nAPI requests take JSON-encoded payloads, query, and path parameters and provide standard JSON-encoded responses.\nAll GET and DELETE API requests take path and/or query parameters, while POST API requests accept a JSON-encoded body.\nPlease note that there might be some exceptions which will be detailed in the API Docs.\nFor some endpoint responses, the JSON body will be presented in a table structure format.\n\n## Headers\n\nBelow are the headers that are supported for the Demo API calls:\n\n| Header        | Mandatory | Description                                    | Example          |\n| ------------- | --------- | ---------------------------------------------- | ---------------- |\n| x-api-key     | Yes       | API key                                        | secret_test_key  |\n| x-api-version | No        | API version                                    | 1.0              |\n| Cache-Control | No        | Send with value as no-cache to get latest data | no-cache         |\n| Content-Type  | No        | The content type being sent in the request     | application/json |\n\n## JSON Structure\n\nAPIs with volumetric data will send JSON responses back in the form of a table or sheet structure.\nThis structure mimics a database table or a spreadsheet. This allows API users to send/receive data in a very simple JSON format.\n\n## POST for GET\n\nAt First Rate, we take data security very seriously. To ensure the utmost protection for this data we've implemented a specific design choice: passing all parameters within the request body instead of listing query parameters or path variables in the URL.\n\n### How does this help?\n\n* **Reduced Logging Risk:** By placing this data in the request body, it becomes less likely to be logged by intermediary servers. Many systems only log request URLs and headers, omitting the request body. This significantly reduces the chance of accidental data exposure.\n* **Enhanced Security:** Data within the request body benefits from additional security measures compared to url-based query parameters or path variables.\n\n\n## Versioning\n\nWe follow the globally recognized semantic versioning for our API.  Below is an example.\n\n| Type  | Compatibility                                       | Current Version | New Version |\n| ----- | --------------------------------------------------- | --------------- | ----------- |\n| Major | Backward-non compatible                             | 1.0.0           | 2.0.0       |\n| Minor | New functionality added, backward compatible        | 2.0.0           | 2.1.0       |\n| Patch | Bug-fix in the current version, backward compatible | 2.1.0           | 2.1.1       |\n\n### Specifying the API Version\n\nSandbox APIs are always on the latest version and previous versions are inaccessible. However, in some APIs, by specifying a version in a request, you can get responses as per the specified version of the API. This can be done via the `x-api-version` header.\n\n> üëçAPI requests without any version specified will use to the latest stable version.\n\n### Deprecation\n\nAPI deprecation is the practice of gradually retiring an API. This typically happens when major changes are introduced, rendering the previous version less optimal. Once deprecated, the older version is no longer actively maintained. Developers are encouraged to migrate to the newer version or explore alternative APIs suggested in the changelogs.\n\n### Discontinuation\n\nThe deprecated APIs are eventually discontinued in a planned manner. Post the dates communicated, the API will no longer work and you'll get Service Unavailable responses on the same. The dates will be communicated in the changelogs, via emails as well on the API Reference pages.\n\n# Authentication\n\nIf we enforced authentication in this demo environment, it would be API key-based authentication.  In this demo environment, please use the key below when necessary\n\n## API key authentication\n\nAPI key-based authentication involves sending an API key along with the request. The API key is a unique identifier that authorizes access to a specific region and is used to identify and track API usage.\n\nTo authenticate with an API key, the user or application needs only to include the API key as a query parameter or as a header in your request.\n\nHere's how to authenticate with a query parameter using cURL:\n\n```bash {{ title: 'API Key as a query parameter' }}\ncurl https://apisandbox.prod.ops.lan:8443/hello \\\n  -d x-api-key='secret_test_key'\n```\n\nPassing the API key in the request header using cURL:\n\n```bash {{ title: 'API Key as a header' }}\ncurl https://apisandbox.prod.ops.lan:8443/hello \\\n  -H \"x-api-key: secret_test_key\"\n```\n\nAll API requests must be made over HTTPS. Calls made over plain HTTP will fail. API requests without authentication will also fail in UAT and Production environments.",
    "version": "1.0.0",
    "title": "Demo API Sandbox",
    "contact": {
      "name": "API Support",
      "email": "phd@firstrate.com",
      "url": "https://apisandbox.prod.ops.lan"
    },
    "x-logo": {
      "url": "https://firstrate.com/assets/images/logos/fr-logo.png",
      "altText": "First Rate logo"
    }
  },
  "servers": [
    {
      "url": "https://apisandbox.prod.ops.lan:8443",
      "description": "Development API gateway"
    }
  ],
  "security": [
    {
      "x-api-key": []
    }
  ],
  "paths": {
    "/reports/composite-allocation": {
      "post": {
        "summary": "Composite Allocation",
        "description": "This report returns market values, accruals, and allocations for the specified composite and its underlying constituents.",
        "operationId": "compositeAllocation",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "compositeId": {
                        "type": "string",
                        "example": "AUTHORSCIEN",
                        "description": "The unique identifier for the composite. All constituents share this ID. \nThis ID is derived from the composite account's unique account ID by removing the 'AGG' or 'AGE' prefix.\n"
                      },
                      "compositeName": {
                        "type": "string",
                        "example": "Authors and Scientists Composite",
                        "description": "The name or title assigned to the composite."
                      },
                      "compositeInceptionDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2011-10-15",
                        "description": "The date when the composite was established, in YYYY-MM-DD format."
                      },
                      "accountId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 14,
                        "example": "AGGAUTHORSCIEN",
                        "description": "The unique identifier for the underlying constituent account.  \nThe composite account can also be included and is identified as the accountId matching the user input accountId (or without the AGG/AGE prefix being equal to the compositeId).  \n"
                      },
                      "accountName": {
                        "type": "string",
                        "minLength": 0,
                        "maxLength": 100,
                        "example": "Model Portfolio A",
                        "description": "The name or title assigned to the constituent account.  Standard account names can be up to 50 characters.  Alternate reporting account names can be used (based on system settings) and can be up to 100 characters."
                      },
                      "accountInceptionDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2012-01-01",
                        "description": "The date when the constituent account was established, in YYYY-MM-DD format."
                      },
                      "asOfDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-01-31",
                        "description": "The reporting date, in YYYY-MM-DD format, reflecting the date specified in the request."
                      },
                      "market": {
                        "type": "number",
                        "format": "float",
                        "example": 2634780.85,
                        "description": "The sum of the account's asset values as of the specified date."
                      },
                      "accrual": {
                        "type": "number",
                        "format": "float",
                        "example": 3647.6,
                        "description": "The sum of the account's asset accrued earnings as of the specified date."
                      },
                      "marketValue": {
                        "type": "number",
                        "format": "float",
                        "example": 2638428.45,
                        "description": "The sum of the account's asset values including any accrued earnings as of the specified date."
                      },
                      "allocation": {
                        "type": "number",
                        "format": "float",
                        "example": 1.734406,
                        "description": "The percentage of the account within the composite as of the specified date."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 The request was unacceptable, often due to missing a required parameter.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400,
                      "description": "For some errors that could be handled programmatically, a short string indicating the error code reported."
                    },
                    "name": {
                      "type": "string",
                      "example": "Bad Request",
                      "description": "A short error name or error class or type."
                    },
                    "message": {
                      "type": "string",
                      "example": "The request was unacceptable, often due to an incorrect or missing parameter.",
                      "description": "A human-readable message providing more details about the error."
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "requestBody": {
          "description": "A CompositeAllocationRequest JSON object containing the request parameters.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "account": {
                    "description": "A unique composite account identifier. All composite accounts begin with either 'AGG' or 'AGE'.",
                    "type": "string",
                    "pattern": "^(AGG|AGE)[A-Z0-9-_.]{1,11}$",
                    "example": "AGGAUTHORSCIEN"
                  },
                  "asOfDate": {
                    "type": "string",
                    "format": "date",
                    "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
                    "example": "20121031",
                    "description": "The 'as of' date for the reporting period in YYYYMMDD format. For the current processing month use the date of the last data load, otherwise use the end-of-month date."
                  }
                },
                "required": [
                  "composite",
                  "asOfDate"
                ]
              }
            }
          }
        }
      }
    },
    "/reports/composite-performance": {
      "post": {
        "summary": "Composite Performance",
        "description": "This report lists composite and constituent performance and allocation, as well as inception dates for the composite and its constituents.",
        "operationId": "compositePerformance",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "compositeId": {
                        "type": "string",
                        "example": "AUTHORSCIEN",
                        "description": "The unique identifier for the composite. All constituents share this ID. \nThis ID is derived from the composite account's unique account ID by removing the 'AGG' or 'AGE' prefix.\n"
                      },
                      "compositeName": {
                        "type": "string",
                        "example": "Authors and Scientists Composite",
                        "description": "The name or title assigned to the composite."
                      },
                      "compositeInceptionDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2011-10-15",
                        "description": "The date when the composite was established, in YYYY-MM-DD format."
                      },
                      "accountId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 14,
                        "example": "AGGAUTHORSCIEN",
                        "description": "The unique identifier for the underlying constituent account.  \nThe composite account can also be included and is identified as the accountId matching the user input accountId (or without the AGG/AGE prefix being equal to the compositeId).  \n"
                      },
                      "accountName": {
                        "type": "string",
                        "minLength": 0,
                        "maxLength": 100,
                        "example": "Model Portfolio A",
                        "description": "The name or title assigned to the constituent account.  Standard account names can be up to 50 characters.  Alternate reporting account names can be used (based on system settings) and can be up to 100 characters."
                      },
                      "accountInceptionDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2012-01-01",
                        "description": "The date when the constituent account was established, in YYYY-MM-DD format."
                      },
                      "asOfDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-01-31",
                        "description": "The reporting date, in YYYY-MM-DD format, reflecting the date specified in the request."
                      },
                      "segmentId": {
                        "type": "string",
                        "example": "TF",
                        "description": "The identifier for the segment. A segment can be either a benchmark, sector, or groups of sectors(asset class)"
                      },
                      "segmentName": {
                        "type": "string",
                        "example": "Total Fund",
                        "description": "The benchmark or sector name assigned to the segment."
                      },
                      "segmentType": {
                        "type": "string",
                        "enum": [
                          "benchmark",
                          "sector"
                        ],
                        "example": "sector",
                        "description": "Indicates whether the data record represents a benchmark or a sector."
                      },
                      "sectorMarket": {
                        "type": "string",
                        "pattern": "^-?\\d*\\.?\\d{0,2}$",
                        "example": "2634780.85",
                        "description": "The sum of the sector's asset values as of the specified date. If the segment is a benchmark, this value is <code>null</code>."
                      },
                      "sectorAccrual": {
                        "type": "string",
                        "pattern": "^-?\\d*\\.?\\d{0,2}$",
                        "example": "3647.65",
                        "description": "The accrued earnings of the sector as of the specified date. If the segment is a benchmark, this value is <code>null</code>."
                      },
                      "sectorMarketValue": {
                        "type": "string",
                        "pattern": "^-?\\d*\\.?\\d{0,2}$",
                        "example": "2638428.45",
                        "description": "The sum of the sector's asset values and accrued earnings as of the specified date. If the segment is a benchmark, this value is <code>null</code>."
                      },
                      "sectorAllocation": {
                        "type": "string",
                        "pattern": "^-?\\d*\\.?\\d{0,6}$",
                        "example": "1.734406",
                        "description": "The allocation percentage of the sector as of the specified date. If the segment is a benchmark, this value is <code>null</code>."
                      },
                      "periodIndex": {
                        "type": "string",
                        "pattern": "^[1-9]\\d*$",
                        "example": "1",
                        "description": "The index of the current period from the list provided in the input parameter <strong>periods</strong>. \nFor example, if the periods provided are ['YTD', 'ITD'], the indexes will be 1 and 2, respectively.\n"
                      },
                      "period": {
                        "type": "string",
                        "example": "ITD",
                        "description": "The period identifier from the input parameter <strong>periods</strong>, representing the defined start and end dates for the data record."
                      },
                      "periodFromDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2012-10-01",
                        "description": "The start date of the period, in YYYY-MM-DD format."
                      },
                      "periodToDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2012-10-31",
                        "description": "The end date of the period, in YYYY-MM-DD format."
                      },
                      "periodFromDateAdjusted": {
                        "type": "string",
                        "enum": [
                          "N",
                          "Y"
                        ],
                        "example": "N",
                        "description": "If <code>Y</code>, this indicates that the period's start date (<strong>fromDate</strong>) \nwas adjusted forward to match the account's inception date.\n"
                      },
                      "periodTotalUVR": {
                        "type": "string",
                        "pattern": "^-?\\d*\\.?\\d{0,6}$",
                        "example": "0.981646",
                        "description": "The segment's rate of return for the period, expressed as a unit value ratio (UVR)."
                      },
                      "periodTotalROR": {
                        "type": "string",
                        "pattern": "^-?\\d*\\.?\\d{0,4}$",
                        "example": "-1.8400",
                        "description": "The segment's annualized rate of return for the period, expressed as a percentage (%)."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 The request was unacceptable, often due to missing a required parameter.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400,
                      "description": "For some errors that could be handled programmatically, a short string indicating the error code reported."
                    },
                    "name": {
                      "type": "string",
                      "example": "Bad Request",
                      "description": "A short error name or error class or type."
                    },
                    "message": {
                      "type": "string",
                      "example": "The request was unacceptable, often due to an incorrect or missing parameter.",
                      "description": "A human-readable message providing more details about the error."
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "requestBody": {
          "description": "A CompositePerformanceRequest JSON object containing the request parameters.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "account": {
                    "description": "A unique composite account identifier. All composite accounts begin with either 'AGG' or 'AGE'.",
                    "type": "string",
                    "pattern": "^(AGG|AGE)[A-Z0-9-_.]{1,11}$",
                    "example": "AGGAUTHORSCIEN"
                  },
                  "asOfDate": {
                    "type": "string",
                    "format": "date",
                    "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
                    "example": "20121031",
                    "description": "The 'as of' date for the reporting period in YYYYMMDD format. For the current processing month use the date of the last data load, otherwise use the end-of-month date."
                  },
                  "periods": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "pattern": "^(?:(?:[1-9][0-9]{0,2})|(?:QTR[1-9][0-9]{0,2})|(?:CMP(?:[1-9]|1[0-2]))|(?:MPP[1-9][0-9]{0,2})|(?:FMP(?:[1-9]|1[0-2]))|(?:APP[1-9][0-9]{0,2})|(?:FAP[1-9][0-9]{0,2})|(?:MTD)|(?:YTD)|(?:FTD)|(?:FQD)|(?:FQD[1-9][0-9]{0,2})|(?:QTD)|(?:QTD[1-9][0-9]{0,2})|(?:ITD)|(?:PTP)|(?:SPD)|(?:ICM)|(?:CON))$"
                    },
                    "default": [
                      "1"
                    ],
                    "example": [
                      "1",
                      "ITD"
                    ],
                    "description": "A list of valid periods to report on. Valid period values include:\n- <code>`1-999`</code>\n- <code>`QTR1-999`</code>\n- <code>`CMP1-12`</code>\n- <code>`MPP1-999`</code>\n- <code>`FMP1-12`</code>\n- <code>`APP1-999`</code>\n- <code>`FAP1-999`</code>\n- <code>`MTD`</code>\n- <code>`YTD`</code>\n- <code>`FTD`</code>\n- <code>`FQD`</code>\n- <code>`FQD1-999`</code>\n- <code>`QTD`</code>\n- <code>`QTD1-999`</code>\n- <code>`ITD`</code>\n- <code>`PTP`</code>\n- <code>`SPD`</code>\n- <code>`ICM`</code>\n- <code>`CON`</code>\n"
                  },
                  "segments": {
                    "description": "A list of sectors identifiers for which to retrieve data.",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "pattern": "^[A-Z0-9]{1,4}$"
                    },
                    "example": [
                      "EQ",
                      "01"
                    ]
                  },
                  "benchmarks": {
                    "description": "An optional list of benchmark identifiers.",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "pattern": "^[A-Z0-9]{1,4}$"
                    },
                    "example": [
                      "01",
                      "42"
                    ]
                  }
                },
                "required": [
                  "account",
                  "asOfDate"
                ]
              }
            }
          }
        }
      }
    },
    "/reports/demographics": {
      "post": {
        "summary": "Portfolio Demographics",
        "description": "This report lists values for requested portfolio demographics fields as of the specified date.",
        "operationId": "demographics",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "accountId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 14,
                        "example": "AGGAUTHORSCIEN",
                        "description": "The unique identifier for the underlying constituent account.  \nThe composite account can also be included and is identified as the accountId matching the user input accountId (or without the AGG/AGE prefix being equal to the compositeId).  \n"
                      },
                      "fieldId": {
                        "type": "string",
                        "example": "ACCT",
                        "description": "The unique identifier for the demographic field."
                      },
                      "fieldName": {
                        "type": "string",
                        "example": "ACCT",
                        "description": "The name of the demographic field."
                      },
                      "fieldDescription": {
                        "type": "string",
                        "example": "Account ID",
                        "description": "The description of the demographic field."
                      },
                      "value": {
                        "type": "string",
                        "example": "AGGAUTHORSCIEN",
                        "description": "The value of the demographic field."
                      },
                      "valueDescription": {
                        "type": "string",
                        "example": "Composite AGGAUTHORSCIEN",
                        "description": "The description of the demographic field, if any."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 The request was unacceptable, often due to missing a required parameter.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400,
                      "description": "For some errors that could be handled programmatically, a short string indicating the error code reported."
                    },
                    "name": {
                      "type": "string",
                      "example": "Bad Request",
                      "description": "A short error name or error class or type."
                    },
                    "message": {
                      "type": "string",
                      "example": "The request was unacceptable, often due to an incorrect or missing parameter.",
                      "description": "A human-readable message providing more details about the error."
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "requestBody": {
          "description": "A DemographicsRequest JSON object containing the request parameters.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "accounts": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "pattern": "^[A-Z0-9-_.]{1,14}$",
                      "example": "AGGAUTHORSCIEN"
                    },
                    "description": "A list of one or more unique account identifiers."
                  },
                  "asOfDate": {
                    "type": "string",
                    "format": "date",
                    "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
                    "example": "20121031",
                    "description": "The 'as of' date for the reporting period in YYYYMMDD format. For the current processing month use the date of the last data load, otherwise use the end-of-month date."
                  },
                  "demographics": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "ACCT",
                        "ACCTBASE",
                        "ACCTCURR",
                        "ACCTFLD",
                        "ACECDATE",
                        "ACTIVE",
                        "ADM",
                        "AGGFEATR",
                        "AGGOWNER",
                        "AGGTYP",
                        "APXDATE",
                        "BNK",
                        "CEINDX",
                        "CMPRPIND",
                        "EQINDX",
                        "EQPOL",
                        "FREQX",
                        "FXINDX",
                        "FXPOL",
                        "FYE",
                        "GLOBALFL",
                        "ICPDATED",
                        "ICPDATED_ALT",
                        "INDXPKG",
                        "IPPICP",
                        "MR_IND",
                        "MRACTVRN",
                        "MRLFRPDT",
                        "MRLFRRDT",
                        "MRLPRCDT",
                        "MRLRPDT",
                        "MRRPTFRQ",
                        "MVI_ACC",
                        "NAME",
                        "OBJ",
                        "OFFN",
                        "PCOLOR",
                        "PF_TIER",
                        "PWR",
                        "RCFREQ",
                        "RCTOL",
                        "REPTPKG",
                        "RPTDATE",
                        "RPTINGNAME",
                        "RULEPKG",
                        "SECPKG",
                        "SECTPKG",
                        "SMACPYFR",
                        "SMACPYTO",
                        "SMARPLEV",
                        "SMASORT",
                        "SMASRCE",
                        "STATEID",
                        "STATUS",
                        "TOLERPKG",
                        "TXFDONLY",
                        "TXRATE1",
                        "TXRATE2",
                        "TXRATE3",
                        "TXRATE4",
                        "TXRATE5",
                        "TXRATE6",
                        "TYP",
                        "UDA101",
                        "UDA102",
                        "UDA103",
                        "UDA104",
                        "UDA105",
                        "UDA106",
                        "UDA107",
                        "UDA108",
                        "UDA109",
                        "UDA110",
                        "UDA111",
                        "UDA112",
                        "UDA113",
                        "UDA114",
                        "UDA115",
                        "UDA301",
                        "UDA302",
                        "UDA303",
                        "UDA304",
                        "UDA305",
                        "UDA306",
                        "UDA307",
                        "UDA308",
                        "UDA309",
                        "UDA310",
                        "UDA311",
                        "UDA312",
                        "UDA313",
                        "UDA314",
                        "UDA315",
                        "UDDATE1",
                        "UDDATE2",
                        "UDDATE3",
                        "UDDATE4",
                        "UDDATE5",
                        "UDDATE6",
                        "UDDATE7",
                        "UDDATE8",
                        "UDDATE9",
                        "UDDATE10",
                        "UDDATE11",
                        "UDDATE12",
                        "UDDATE13",
                        "UDDATE14",
                        "UDDATE15",
                        "UDN1",
                        "UDN2",
                        "UDN3",
                        "UDN4",
                        "UDN5",
                        "UDN6",
                        "UDN7",
                        "UDN8",
                        "UDN9",
                        "UDN10",
                        "UDN11",
                        "UDN12",
                        "UDN13",
                        "UDN14",
                        "UDN15",
                        "USERDEF",
                        "USERDEF2",
                        "USERDEF3",
                        "USERDEF4",
                        "WTDINDX"
                      ]
                    },
                    "uniqueItems": true,
                    "default": [
                      "ACCT",
                      "NAME",
                      "MVI_ACC",
                      "ICPDATED",
                      "BNK",
                      "ACCTCURR",
                      "UDA101"
                    ],
                    "example": [
                      "ACCT",
                      "NAME",
                      "MVI_ACC",
                      "ICPDATED",
                      "BNK",
                      "ACCTCURR",
                      "UDA101"
                    ],
                    "description": "A list of demographic field identifiers to retrieve."
                  }
                },
                "required": [
                  "accounts"
                ]
              }
            }
          }
        }
      }
    },
    "/reports/fixed-income": {
      "post": {
        "summary": "Fixed Income Details",
        "description": "This report displays characteristic averages of fixed income securities including coupons, yields, maturities, durations, in addition to market values, accruals and other values.",
        "operationId": "fixedIncome",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "accountId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 14,
                        "example": "AGGAUTHORSCIEN",
                        "description": "The unique identifier for the account."
                      },
                      "accountName": {
                        "type": "string",
                        "minLength": 0,
                        "maxLength": 100,
                        "example": "Model Portfolio A",
                        "description": "The name or title assigned to the constituent account.  Standard account names can be up to 50 characters.  Alternate reporting account names can be used (based on system settings) and can be up to 100 characters."
                      },
                      "accountInceptionDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2012-01-01",
                        "description": "The date when the constituent account was established, in YYYY-MM-DD format."
                      },
                      "classId": {
                        "type": "string",
                        "pattern": "^[A-Z0-9]{1,4}$",
                        "example": "FX",
                        "description": "The identifier of the asset class."
                      },
                      "className": {
                        "type": "string",
                        "example": "Fixed Income",
                        "description": "The name assigned to the asset class."
                      },
                      "segmentId": {
                        "type": "string",
                        "pattern": "^[A-Z0-9]{1,4}$",
                        "example": "01",
                        "description": "The identifier of the sector or category."
                      },
                      "segmentName": {
                        "type": "string",
                        "example": "Total Fund",
                        "description": "The name assigned to the sector or category."
                      },
                      "assetId": {
                        "type": "string",
                        "example": "1845402H4",
                        "description": "The unique identifier for the asset."
                      },
                      "acquisitionDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-01-31",
                        "description": "The acquisition date in YYYY-MM-DD format."
                      },
                      "periodIndex": {
                        "type": "string",
                        "pattern": "^[1-9]\\d*$",
                        "example": "1",
                        "description": "The index of the current period from the list provided in the input parameter <strong>periods</strong>. \nFor example, if the periods provided are ['YTD', 'ITD'], the indexes will be 1 and 2, respectively.\n"
                      },
                      "periodFromDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2012-10-01",
                        "description": "The start date of the period, in YYYY-MM-DD format."
                      },
                      "periodToDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2012-10-31",
                        "description": "The end date of the period, in YYYY-MM-DD format."
                      },
                      "periodFromDateAdjusted": {
                        "type": "string",
                        "enum": [
                          "N",
                          "Y"
                        ],
                        "example": "N",
                        "description": "If <code>Y</code>, this indicates that the period's start date (<strong>fromDate</strong>) \nwas adjusted forward to match the account's inception date.\n"
                      },
                      "price": {
                        "type": "string",
                        "pattern": "^-?\\d*\\.?\\d{0,6}$",
                        "example": "108.537",
                        "description": "The unit price of the asset not including any accrued income."
                      },
                      "units": {
                        "type": "string",
                        "pattern": "^-?\\d*\\.?\\d{0,4}$",
                        "example": "45.15",
                        "description": "The number of shares held."
                      },
                      "principal": {
                        "type": "string",
                        "pattern": "^-?\\d*\\.?\\d{0,2}$",
                        "example": "99.99",
                        "description": "The principal or market value of the asset not including any accrued income."
                      },
                      "accrual": {
                        "type": "string",
                        "pattern": "^-?\\d*\\.?\\d{0,2}$",
                        "example": "15.25",
                        "description": "Income that has been accrued but not yet been paid."
                      },
                      "coupon": {
                        "type": "string",
                        "pattern": "^-?\\d*\\.?\\d{0,6}$",
                        "example": "4.125",
                        "description": "A coupon or coupon payment is the annual interest rate paid on a bond,\nexpressed as a percentage of the face value and paid from issue date until maturity.\n"
                      },
                      "cost": {
                        "type": "string",
                        "pattern": "^-?\\d*\\.?\\d{0,2}$",
                        "example": "4999.5",
                        "description": "The initial cost of the asset."
                      },
                      "daysToMaturity": {
                        "type": "string",
                        "pattern": "\\d",
                        "example": "1322",
                        "description": "The number of days until maturity."
                      },
                      "maturityDescription": {
                        "type": "string",
                        "example": "Short (1-5 Years)",
                        "description": "The maturity description or category of the asset."
                      },
                      "maturityDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-01-31",
                        "description": "The maturity date in YYYY-MM-DD format."
                      },
                      "yieldToMaturity": {
                        "type": "string",
                        "pattern": "^-?\\d*\\.?\\d{0,6}$",
                        "example": "1.634",
                        "description": "The initial cost of the asset."
                      },
                      "duration": {
                        "type": "string",
                        "pattern": "^-?\\d*\\.?\\d{0,6}$",
                        "example": "3.378",
                        "description": "The initial cost of the asset."
                      },
                      "quality": {
                        "type": "string",
                        "example": "AAA",
                        "description": "The rating or quality of the asset."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 The request was unacceptable, often due to missing a required parameter.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400,
                      "description": "For some errors that could be handled programmatically, a short string indicating the error code reported."
                    },
                    "name": {
                      "type": "string",
                      "example": "Bad Request",
                      "description": "A short error name or error class or type."
                    },
                    "message": {
                      "type": "string",
                      "example": "The request was unacceptable, often due to an incorrect or missing parameter.",
                      "description": "A human-readable message providing more details about the error."
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "requestBody": {
          "description": "A JSON object containing the request parameters.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "account": {
                    "type": "string",
                    "pattern": "^[A-Z0-9-_.]{1,14}$",
                    "example": "AGGAUTHORSCIEN",
                    "description": "A unique account identifier."
                  },
                  "asOfDate": {
                    "type": "string",
                    "format": "date",
                    "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
                    "example": "20121031",
                    "description": "The 'as of' date for the reporting period in YYYYMMDD format. For the current processing month use the date of the last data load, otherwise use the end-of-month date."
                  },
                  "periods": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "pattern": "^(?:(?:[1-9][0-9]{0,2})|(?:QTR[1-9][0-9]{0,2})|(?:CMP(?:[1-9]|1[0-2]))|(?:MPP[1-9][0-9]{0,2})|(?:FMP(?:[1-9]|1[0-2]))|(?:APP[1-9][0-9]{0,2})|(?:FAP[1-9][0-9]{0,2})|(?:MTD)|(?:YTD)|(?:FTD)|(?:FQD)|(?:FQD[1-9][0-9]{0,2})|(?:QTD)|(?:QTD[1-9][0-9]{0,2})|(?:ITD)|(?:PTP)|(?:SPD)|(?:ICM)|(?:CON))$"
                    },
                    "default": [
                      "1"
                    ],
                    "example": [
                      "1",
                      "ITD"
                    ],
                    "description": "A list of valid periods to report on. Valid period values include:\n- <code>`1-999`</code>\n- <code>`QTR1-999`</code>\n- <code>`CMP1-12`</code>\n- <code>`MPP1-999`</code>\n- <code>`FMP1-12`</code>\n- <code>`APP1-999`</code>\n- <code>`FAP1-999`</code>\n- <code>`MTD`</code>\n- <code>`YTD`</code>\n- <code>`FTD`</code>\n- <code>`FQD`</code>\n- <code>`FQD1-999`</code>\n- <code>`QTD`</code>\n- <code>`QTD1-999`</code>\n- <code>`ITD`</code>\n- <code>`PTP`</code>\n- <code>`SPD`</code>\n- <code>`ICM`</code>\n- <code>`CON`</code>\n"
                  }
                },
                "required": [
                  "account",
                  "asOfDate"
                ]
              }
            }
          }
        }
      }
    },
    "/reports/holdings": {
      "post": {
        "summary": "Holdings Listing",
        "description": "Lists the asset-level financial data as of the specified date.  Data returnd includes asset names, ids, units, accuals and market values.",
        "operationId": "holdings",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "accountId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 14,
                        "example": "AGGAUTHORSCIEN",
                        "description": "The unique identifier for the account."
                      },
                      "accountName": {
                        "type": "string",
                        "minLength": 0,
                        "maxLength": 100,
                        "example": "Model Portfolio A",
                        "description": "The name or title assigned to the constituent account.  Standard account names can be up to 50 characters.  Alternate reporting account names can be used (based on system settings) and can be up to 100 characters."
                      },
                      "accountInceptionDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2012-01-01",
                        "description": "The date when the constituent account was established, in YYYY-MM-DD format."
                      },
                      "asOfDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-01-31",
                        "description": "The reporting date, in YYYY-MM-DD format, reflecting the date specified in the request."
                      },
                      "toDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2012-10-31",
                        "description": "The end date of the period, in YYYY-MM-DD format."
                      },
                      "fromDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2012-10-01",
                        "description": "The start date of the period, in YYYY-MM-DD format."
                      },
                      "fromDateAdjusted": {
                        "type": "string",
                        "enum": [
                          "N",
                          "Y"
                        ],
                        "example": "N",
                        "description": "If <code>Y</code>, this indicates that the period's start date (<strong>fromDate</strong>) \nwas adjusted forward to match the account's inception date.\n"
                      },
                      "classId": {
                        "type": "string",
                        "pattern": "^[A-Z0-9]{1,4}$",
                        "example": "FX",
                        "description": "The identifier of the asset class."
                      },
                      "className": {
                        "type": "string",
                        "example": "Fixed Income",
                        "description": "The name assigned to the asset class."
                      },
                      "segmentId": {
                        "type": "string",
                        "pattern": "^[A-Z0-9]{1,4}$",
                        "example": "01",
                        "description": "The identifier of the sector or category."
                      },
                      "segmentName": {
                        "type": "string",
                        "example": "Total Fund",
                        "description": "The name assigned to the sector or category."
                      },
                      "assetId": {
                        "type": "string",
                        "example": "1845402H4",
                        "description": "The unique identifier for the asset."
                      },
                      "assetName": {
                        "type": "string",
                        "example": "CLEAR CRK ISD-REF 2.5 2/15/2021",
                        "description": "The name assigned to the asset."
                      },
                      "ticker": {
                        "type": "string",
                        "example": "1845402H4",
                        "description": "The ticker symbol assigned to the asset.  \nA ticker symbol or stock symbol is an abbreviation used to uniquely identify publicly traded shares of a particular stock on a particular stock market\n"
                      },
                      "cusip": {
                        "type": "string",
                        "example": "1845402H4",
                        "description": "The CUSIP value assigned to the assetId.  CUSIP stands for Committee on Uniform Securities Identification Procedures1. \nThe Cusip is a unique identification number assigned to all stocks and registered bonds in the United States and Canada.\n"
                      },
                      "units": {
                        "type": "string",
                        "pattern": "^-?\\d*\\.?\\d{0,4}$",
                        "example": "45.15",
                        "description": "The number of shares held."
                      },
                      "principal": {
                        "type": "string",
                        "pattern": "^-?\\d*\\.?\\d{0,2}$",
                        "example": "99.99",
                        "description": "The principal or market value of the asset not including any accrued income."
                      },
                      "accrual": {
                        "type": "string",
                        "pattern": "^-?\\d*\\.?\\d{0,2}$",
                        "example": "15.25",
                        "description": "Income that has been accrued but not yet been paid."
                      },
                      "marketValue": {
                        "type": "string",
                        "pattern": "^-?\\d*\\.?\\d{0,2}$",
                        "example": "99.99",
                        "description": "The market or principal value of the asset including any accrued income."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 The request was unacceptable, often due to missing a required parameter.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400,
                      "description": "For some errors that could be handled programmatically, a short string indicating the error code reported."
                    },
                    "name": {
                      "type": "string",
                      "example": "Bad Request",
                      "description": "A short error name or error class or type."
                    },
                    "message": {
                      "type": "string",
                      "example": "The request was unacceptable, often due to an incorrect or missing parameter.",
                      "description": "A human-readable message providing more details about the error."
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "requestBody": {
          "description": "A FixedIncomeRequest JSON object containing the request parameters.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "account": {
                    "type": "string",
                    "pattern": "^[A-Z0-9-_.]{1,14}$",
                    "example": "AGGAUTHORSCIEN",
                    "description": "A unique account identifier."
                  },
                  "asOfDate": {
                    "type": "string",
                    "format": "date",
                    "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
                    "example": "20121031",
                    "description": "The 'as of' date for the reporting period in YYYYMMDD format. For the current processing month use the date of the last data load, otherwise use the end-of-month date."
                  },
                  "schema": {
                    "type": "string",
                    "enum": [
                      "1",
                      "2",
                      "3"
                    ],
                    "example": "1",
                    "description": "Selects segment schema 1, 2, or 3. Defaults to 1."
                  }
                },
                "required": [
                  "account",
                  "asOfDate"
                ]
              }
            }
          }
        }
      }
    },
    "/reports/investment-summary": {
      "post": {
        "summary": "Investment Summary",
        "description": "Financial information for the selected sectors and period.  Data points include beginning portfolio value, contributions/withdrawals, fees, income, and gains and losses.",
        "operationId": "investmentSummary",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "accountId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 14,
                        "example": "AGGAUTHORSCIEN",
                        "description": "The unique identifier for the account."
                      },
                      "accountName": {
                        "type": "string",
                        "minLength": 0,
                        "maxLength": 100,
                        "example": "Model Portfolio A",
                        "description": "The name or title assigned to the constituent account.  Standard account names can be up to 50 characters.  Alternate reporting account names can be used (based on system settings) and can be up to 100 characters."
                      },
                      "accountInceptionDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2012-01-01",
                        "description": "The date when the constituent account was established, in YYYY-MM-DD format."
                      },
                      "asOfDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-01-31",
                        "description": "The reporting date, in YYYY-MM-DD format, reflecting the date specified in the request."
                      },
                      "segmentId": {
                        "type": "string",
                        "example": "TF",
                        "description": "The identifier for the segment. A segment can be either a benchmark, sector, or groups of sectors(asset class)"
                      },
                      "segmentName": {
                        "type": "string",
                        "example": "Total Fund",
                        "description": "The benchmark or sector name assigned to the segment."
                      },
                      "segmentTFsec": {
                        "type": "string",
                        "example": "T",
                        "description": "Identifies special characteristics of the sector.  The value <code>T<code> indicates that the sector is a total fund sector."
                      },
                      "period": {
                        "type": "string",
                        "example": "ITD",
                        "description": "The period identifier from the input parameter <strong>periods</strong>, representing the defined start and end dates for the data record."
                      },
                      "periodFromDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2012-10-01",
                        "description": "The start date of the period, in YYYY-MM-DD format."
                      },
                      "periodToDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2012-10-31",
                        "description": "The end date of the period, in YYYY-MM-DD format."
                      },
                      "periodFromDateAdjusted": {
                        "type": "string",
                        "enum": [
                          "N",
                          "Y"
                        ],
                        "example": "N",
                        "description": "If <code>Y</code>, this indicates that the period's start date (<strong>fromDate</strong>) \nwas adjusted forward to match the account's inception date.\n"
                      },
                      "beginMarket": {
                        "type": "string",
                        "pattern": "^-?\\d*\\.?\\d{0,2}$",
                        "example": "2634780.85",
                        "description": "The sum of the sector's asset values as of the end of the month prior to the period start date."
                      },
                      "beginAccrual": {
                        "type": "string",
                        "pattern": "^-?\\d*\\.?\\d{0,2}$",
                        "example": "2634780.85",
                        "description": "The sum of the sector's asset accrued values as of the end of the month prior to the period start date."
                      },
                      "beginNAV": {
                        "type": "string",
                        "pattern": "^-?\\d*\\.?\\d{0,2}$",
                        "example": "2634780.85",
                        "description": "The sum of the sector's asset values as of the end of the month prior to the period start date (periodBeginMarket) and the sum of the sector's asset accrued values as of the end of the month prior to the period start date (periodBeginAccrual)."
                      },
                      "fees": {
                        "type": "string",
                        "pattern": "^-?\\d*\\.?\\d{0,2}$",
                        "example": "2634780.85",
                        "description": "Account level fees for the period. If the segment is not a total fund sector then this value is <code>null</code>."
                      },
                      "contributions": {
                        "type": "string",
                        "pattern": "^-?\\d*\\.?\\d{0,2}$",
                        "example": "2634780.85",
                        "description": "The sum of the transactions identified as contributions for the sector and period."
                      },
                      "withdrawals": {
                        "type": "string",
                        "pattern": "^-?\\d*\\.?\\d{0,2}$",
                        "example": "2634780.85",
                        "description": "The sum of the transactions identified as withdrawals for the sector and period."
                      },
                      "withdrawalsLessFees": {
                        "type": "string",
                        "pattern": "^-?\\d*\\.?\\d{0,2}$",
                        "example": "2634780.85",
                        "description": "Period withdrawals less period fees.  This is calculated as (periodWithdrawals) - (periodFees).  If the segment is not a total fund sector then this value is <code>null</code>."
                      },
                      "netContributionsWithdrawals": {
                        "type": "string",
                        "pattern": "^-?\\d*\\.?\\d{0,2}$",
                        "example": "2634780.85",
                        "description": "Net contributions and withdrawls.  This is calculated as (periodContributions) - (periodWithdrawals)."
                      },
                      "netContributionsWithdrawalsLessFees": {
                        "type": "string",
                        "pattern": "^-?\\d*\\.?\\d{0,2}$",
                        "example": "2634780.85",
                        "description": "Net contributions and withdrawals less fees. This is calculated as (periodNetContributionsWithdrawals) - (periodFees).  If the segment is not a total fund sector then this value is <code>null</code>."
                      },
                      "income": {
                        "type": "string",
                        "pattern": "^-?\\d*\\.?\\d{0,2}$",
                        "example": "2634780.85",
                        "description": "The sum of the transactions identied as income received for the sector and period."
                      },
                      "incomeEarned": {
                        "type": "string",
                        "pattern": "^-?\\d*\\.?\\d{0,2}$",
                        "example": "2634780.85",
                        "description": "Income earned for the sector and period.  This is calculatd as (periodNetAccrual) + (periodIncome)."
                      },
                      "incomeDividends": {
                        "type": "string",
                        "pattern": "^-?\\d*\\.?\\d{0,2}$",
                        "example": "2634780.85",
                        "description": "The sum of transactions identified as dividend income for the account and period.  If the segment is not a total fund sector then this value is <code>null</code>."
                      },
                      "incomeInterest": {
                        "type": "string",
                        "pattern": "^-?\\d*\\.?\\d{0,2}$",
                        "example": "2634780.85",
                        "description": "The sum of transactions identified as interest income for the account and period.  If the segment is not a total fund sector then this value is <code>null</code>."
                      },
                      "incomeShortTerm": {
                        "type": "string",
                        "pattern": "^-?\\d*\\.?\\d{0,2}$",
                        "example": "2634780.85",
                        "description": "The sum of transactions identified as short term interest income for the account and period.  If the segment is not a total fund sector then this value is <code>null</code>."
                      },
                      "incomeOther": {
                        "type": "string",
                        "pattern": "^-?\\d*\\.?\\d{0,2}$",
                        "example": "2634780.85",
                        "description": "The sum of transactions identified as other income received (not dividend or short term interest) for the account and period.  If the segment is not a total fund sector then this value is <code>null</code>."
                      },
                      "endMarket": {
                        "type": "string",
                        "pattern": "^-?\\d*\\.?\\d{0,2}$",
                        "example": "2634780.85",
                        "description": "The sum of the sector's asset values at the end of the period."
                      },
                      "endAccrual": {
                        "type": "string",
                        "pattern": "^-?\\d*\\.?\\d{0,2}$",
                        "example": "2634780.85",
                        "description": "The sum of the sector's asset accrued values at the end of the period."
                      },
                      "netAccrual": {
                        "type": "string",
                        "pattern": "^-?\\d*\\.?\\d{0,2}$",
                        "example": "2634780.85",
                        "description": "Net accruals for the sector and period. This is calculated as (periodEndAccrual - (periodBeginAccrual)."
                      },
                      "endNAV": {
                        "type": "string",
                        "pattern": "^-?\\d*\\.?\\d{0,2}$",
                        "example": "2634780.85",
                        "description": "The sum of the sector's asset values at the end of the period (periodEndMarket) and the sum of the sector's asset accrued values at the end of the period (periodEndAccrual)."
                      },
                      "gainLoss": {
                        "type": "string",
                        "pattern": "^-?\\d*\\.?\\d{0,2}$",
                        "example": "2634780.85",
                        "description": "The change in market value, excluding accruals, for the period."
                      },
                      "gainLossWithAccrual": {
                        "type": "string",
                        "pattern": "^-?\\d*\\.?\\d{0,2}$",
                        "example": "2634780.85",
                        "description": "The change in market value and accruals over the period."
                      },
                      "shortRealizedGainLoss": {
                        "type": "string",
                        "pattern": "^-?\\d*\\.?\\d{0,2}$",
                        "example": "2634780.85",
                        "description": "Short term realized capital gains and losses for the period.  Short-term capital gains (losses) are profits (losses) realized from the sale of personal or investment property that has been held for one year or less.  If the segment is not a total fund sector then this value is <code>null</code>."
                      },
                      "longRealizedGainLoss": {
                        "type": "string",
                        "pattern": "^-?\\d*\\.?\\d{0,2}$",
                        "example": "2634780.85",
                        "description": "Long term realized capital gains and losses for the period.  Long-term capital gains (losses) are profits (losses) realized from the sale of personal or investment property that has been held for more than one year.  If the segment is not a total fund sector then this value is <code>null</code>."
                      },
                      "totalRealizedGainLoss": {
                        "type": "string",
                        "pattern": "^-?\\d*\\.?\\d{0,2}$",
                        "example": "2634780.85",
                        "description": "Realized capital gains and losses for the period.  This is calculated as (periodShortRealizedGainLoss) - (periodLongRealizedGainLoss). If the segment is not a total fund sector then this value is <code>null</code>."
                      },
                      "totalInvestmentReturn": {
                        "type": "string",
                        "pattern": "^-?\\d*\\.?\\d{0,2}$",
                        "example": "2634780.85",
                        "description": "Total Investment Return.  This is calculated as (GainLossWithAccrual) + (periodIncome)."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 The request was unacceptable, often due to missing a required parameter.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400,
                      "description": "For some errors that could be handled programmatically, a short string indicating the error code reported."
                    },
                    "name": {
                      "type": "string",
                      "example": "Bad Request",
                      "description": "A short error name or error class or type."
                    },
                    "message": {
                      "type": "string",
                      "example": "The request was unacceptable, often due to an incorrect or missing parameter.",
                      "description": "A human-readable message providing more details about the error."
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "requestBody": {
          "description": "A InvestmentSummaryRequest JSON object containing the request parameters.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "account": {
                    "type": "string",
                    "pattern": "^[A-Z0-9-_.]{1,14}$",
                    "example": "AGGAUTHORSCIEN",
                    "description": "A unique account identifier."
                  },
                  "asOfDate": {
                    "type": "string",
                    "format": "date",
                    "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
                    "example": "20121031",
                    "description": "The 'as of' date for the reporting period in YYYYMMDD format. For the current processing month use the date of the last data load, otherwise use the end-of-month date."
                  },
                  "period": {
                    "type": "string",
                    "pattern": "^(?:(?:[1-9][0-9]{0,2})|(?:QTR[1-9][0-9]{0,2})|(?:CMP(?:[1-9]|1[0-2]))|(?:MPP[1-9][0-9]{0,2})|(?:FMP(?:[1-9]|1[0-2]))|(?:APP[1-9][0-9]{0,2})|(?:FAP[1-9][0-9]{0,2})|(?:MTD)|(?:YTD)|(?:FTD)|(?:FQD)|(?:FQD[1-9][0-9]{0,2})|(?:QTD)|(?:QTD[1-9][0-9]{0,2})|(?:ITD)|(?:PTP)|(?:SPD)|(?:ICM))$",
                    "default": 1,
                    "example": "YTD",
                    "description": "A valid period to report on. Valid period values include:\n  - <code>`1-999`</code>\n  - <code>`QTR1-999`</code>\n  - <code>`CMP1-12`</code>\n  - <code>`MPP1-999`</code>\n  - <code>`FMP1-12`</code>\n  - <code>`APP1-999`</code>\n  - <code>`FAP1-999`</code>\n  - <code>`MTD`</code>\n  - <code>`YTD`</code>\n  - <code>`FTD`</code>\n  - <code>`FQD`</code>\n  - <code>`FQD1-999`</code>\n  - <code>`QTD`</code>\n  - <code>`QTD1-999`</code>\n  - <code>`ITD`</code>\n  - <code>`PTP`</code>\n  - <code>`SPD`</code>\n  - <code>`ICM`</code>\n"
                  },
                  "segment": {
                    "type": "string",
                    "pattern": "^[A-Z0-9]{1,4}$",
                    "default": "01",
                    "example": "01",
                    "description": "The identifier of the model sector for the report."
                  }
                },
                "required": [
                  "account",
                  "asOfDate"
                ]
              }
            }
          }
        }
      }
    },
    "/reports/largest-holdings": {
      "post": {
        "summary": "Largest Holdings",
        "description": "Lists the largest assets by market value on the specified date.",
        "operationId": "largestHoldings",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "accountId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 14,
                        "example": "AGGAUTHORSCIEN",
                        "description": "The unique identifier for the account."
                      },
                      "accountName": {
                        "type": "string",
                        "minLength": 0,
                        "maxLength": 100,
                        "example": "Model Portfolio A",
                        "description": "The name or title assigned to the constituent account.  Standard account names can be up to 50 characters.  Alternate reporting account names can be used (based on system settings) and can be up to 100 characters."
                      },
                      "accountInceptionDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2012-01-01",
                        "description": "The date when the constituent account was established, in YYYY-MM-DD format."
                      },
                      "asOfDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-01-31",
                        "description": "The reporting date, in YYYY-MM-DD format, reflecting the date specified in the request."
                      },
                      "assetId": {
                        "type": "string",
                        "example": "1845402H4",
                        "description": "The unique identifier for the asset."
                      },
                      "assetName": {
                        "type": "string",
                        "example": "CLEAR CRK ISD-REF 2.5 2/15/2021",
                        "description": "The name assigned to the asset."
                      },
                      "ticker": {
                        "type": "string",
                        "example": "1845402H4",
                        "description": "The ticker symbol assigned to the asset.  \nA ticker symbol or stock symbol is an abbreviation used to uniquely identify publicly traded shares of a particular stock on a particular stock market\n"
                      },
                      "cusip": {
                        "type": "string",
                        "example": "1845402H4",
                        "description": "The CUSIP value assigned to the assetId.  CUSIP stands for Committee on Uniform Securities Identification Procedures1. \nThe Cusip is a unique identification number assigned to all stocks and registered bonds in the United States and Canada.\n"
                      },
                      "periodIndex": {
                        "type": "string",
                        "pattern": "^[1-9]\\d*$",
                        "example": "1",
                        "description": "The index of the current period from the list provided in the input parameter <strong>periods</strong>. \nFor example, if the periods provided are ['YTD', 'ITD'], the indexes will be 1 and 2, respectively.\n"
                      },
                      "period": {
                        "type": "string",
                        "example": "ITD",
                        "description": "The period identifier from the input parameter <strong>periods</strong>, representing the defined start and end dates for the data record."
                      },
                      "periodFromDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2012-10-01",
                        "description": "The start date of the period, in YYYY-MM-DD format."
                      },
                      "periodToDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2012-10-31",
                        "description": "The end date of the period, in YYYY-MM-DD format."
                      },
                      "periodFromDateAdjusted": {
                        "type": "string",
                        "enum": [
                          "N",
                          "Y"
                        ],
                        "example": "N",
                        "description": "If <code>Y</code>, this indicates that the period's start date (<strong>fromDate</strong>) \nwas adjusted forward to match the account's inception date.\n"
                      },
                      "marketValue": {
                        "type": "number",
                        "format": "float",
                        "example": 26877.69,
                        "description": "The asset's market value including any accrued earnings as of the specified date."
                      },
                      "allocation": {
                        "type": "number",
                        "format": "float",
                        "example": 1.734406,
                        "description": "The allocation percentage of the asset as of the specified date."
                      },
                      "totalUVR": {
                        "type": "number",
                        "format": "float",
                        "example": 1.007632,
                        "description": "The asset's rate of return for the period, expressed as a unit value ratio (UVR)."
                      },
                      "totalROR": {
                        "type": "number",
                        "format": "float",
                        "example": 0.76,
                        "description": "The asset's annualized rate of return for the period, expressed as a percentage (%)."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 The request was unacceptable, often due to missing a required parameter.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400,
                      "description": "For some errors that could be handled programmatically, a short string indicating the error code reported."
                    },
                    "name": {
                      "type": "string",
                      "example": "Bad Request",
                      "description": "A short error name or error class or type."
                    },
                    "message": {
                      "type": "string",
                      "example": "The request was unacceptable, often due to an incorrect or missing parameter.",
                      "description": "A human-readable message providing more details about the error."
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "requestBody": {
          "description": "A LargestHoldingsRequest JSON object containing the request parameters.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "account": {
                    "type": "string",
                    "pattern": "^[A-Z0-9-_.]{1,14}$",
                    "example": "AGGAUTHORSCIEN",
                    "description": "A unique account identifier."
                  },
                  "asOfDate": {
                    "type": "string",
                    "format": "date",
                    "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
                    "example": "20121031",
                    "description": "The 'as of' date for the reporting period in YYYYMMDD format. For the current processing month use the date of the last data load, otherwise use the end-of-month date."
                  },
                  "period": {
                    "type": "string",
                    "pattern": "^(?:(?:[1-9][0-9]{0,2})|(?:QTR[1-9][0-9]{0,2})|(?:CMP(?:[1-9]|1[0-2]))|(?:MPP[1-9][0-9]{0,2})|(?:FMP(?:[1-9]|1[0-2]))|(?:APP[1-9][0-9]{0,2})|(?:FAP[1-9][0-9]{0,2})|(?:MTD)|(?:YTD)|(?:FTD)|(?:FQD)|(?:FQD[1-9][0-9]{0,2})|(?:QTD)|(?:QTD[1-9][0-9]{0,2})|(?:ITD)|(?:PTP)|(?:SPD)|(?:ICM))$",
                    "default": 1,
                    "example": "YTD",
                    "description": "A valid period to report on. Valid period values include:\n  - <code>`1-999`</code>\n  - <code>`QTR1-999`</code>\n  - <code>`CMP1-12`</code>\n  - <code>`MPP1-999`</code>\n  - <code>`FMP1-12`</code>\n  - <code>`APP1-999`</code>\n  - <code>`FAP1-999`</code>\n  - <code>`MTD`</code>\n  - <code>`YTD`</code>\n  - <code>`FTD`</code>\n  - <code>`FQD`</code>\n  - <code>`FQD1-999`</code>\n  - <code>`QTD`</code>\n  - <code>`QTD1-999`</code>\n  - <code>`ITD`</code>\n  - <code>`PTP`</code>\n  - <code>`SPD`</code>\n  - <code>`ICM`</code>\n"
                  },
                  "recordLimit": {
                    "default": 10,
                    "type": "string",
                    "pattern": "^[1-9]\\d*$",
                    "example": "10",
                    "description": "The maximum number of records to return. Assign 0 for no record limit."
                  }
                },
                "required": [
                  "accounts",
                  "asOfDate"
                ]
              }
            }
          }
        }
      }
    },
    "/reports/risk-statistics": {
      "post": {
        "summary": "Risk Statistics",
        "description": "This report shows risk measurements for the selected portfolios. The report includes risk measurements for a model sector or category compared with a model benchmark.",
        "operationId": "riskStatistics",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "accountId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 14,
                        "example": "AGGAUTHORSCIEN",
                        "description": "The unique identifier for the account."
                      },
                      "accountName": {
                        "type": "string",
                        "minLength": 0,
                        "maxLength": 100,
                        "example": "Model Portfolio A",
                        "description": "The name or title assigned to the constituent account.  Standard account names can be up to 50 characters.  Alternate reporting account names can be used (based on system settings) and can be up to 100 characters."
                      },
                      "accountInceptionDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2012-01-01",
                        "description": "The date when the constituent account was established, in YYYY-MM-DD format."
                      },
                      "asOfDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-01-31",
                        "description": "The reporting date, in YYYY-MM-DD format, reflecting the date specified in the request."
                      },
                      "fromDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2012-10-01",
                        "description": "The start date of the period, in YYYY-MM-DD format."
                      },
                      "toDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2012-10-31",
                        "description": "The end date of the period, in YYYY-MM-DD format."
                      },
                      "segmentFromDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2012-10-01",
                        "description": "<code>?</code>Selected time period start date. If the start date of the specified period preceeds the account's inception then this reflects the inception date."
                      },
                      "segmentId": {
                        "type": "string",
                        "example": "TF",
                        "description": "The identifier for the segment. A segment can be either a benchmark, sector, or groups of sectors(asset class)"
                      },
                      "segmentName": {
                        "type": "string",
                        "example": "Total Fund",
                        "description": "The benchmark or sector name assigned to the segment."
                      },
                      "segmentType": {
                        "type": "string",
                        "enum": [
                          "benchmark",
                          "sector"
                        ],
                        "example": "sector",
                        "description": "Indicates whether the data record represents a benchmark or a sector."
                      },
                      "statisticType": {
                        "type": "string",
                        "example": "BETA",
                        "description": "A unique indicator for the risk statistic returned."
                      },
                      "statisticDescription": {
                        "type": "string",
                        "example": "Beta",
                        "description": "The name or description of the risk statistic."
                      },
                      "statisticValue": {
                        "type": "number",
                        "format": "float",
                        "example": 0.8,
                        "description": "The value of the risk statistic."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 The request was unacceptable, often due to missing a required parameter.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400,
                      "description": "For some errors that could be handled programmatically, a short string indicating the error code reported."
                    },
                    "name": {
                      "type": "string",
                      "example": "Bad Request",
                      "description": "A short error name or error class or type."
                    },
                    "message": {
                      "type": "string",
                      "example": "The request was unacceptable, often due to an incorrect or missing parameter.",
                      "description": "A human-readable message providing more details about the error."
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "requestBody": {
          "description": "A RiskStatisticsRequest JSON object containing the request parameters.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "account": {
                    "type": "string",
                    "pattern": "^[A-Z0-9-_.]{1,14}$",
                    "example": "AGGAUTHORSCIEN",
                    "description": "A unique account identifier."
                  },
                  "asOfDate": {
                    "type": "string",
                    "format": "date",
                    "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
                    "example": "20121031",
                    "description": "The 'as of' date for the reporting period in YYYYMMDD format. For the current processing month use the date of the last data load, otherwise use the end-of-month date."
                  },
                  "period": {
                    "type": "string",
                    "pattern": "^(?:(?:[1-9][0-9]{0,2})|(?:QTR[1-9][0-9]{0,2})|(?:CMP(?:[1-9]|1[0-2]))|(?:MPP[1-9][0-9]{0,2})|(?:FMP(?:[1-9]|1[0-2]))|(?:APP[1-9][0-9]{0,2})|(?:FAP[1-9][0-9]{0,2})|(?:MTD)|(?:YTD)|(?:FTD)|(?:FQD)|(?:FQD[1-9][0-9]{0,2})|(?:QTD)|(?:QTD[1-9][0-9]{0,2})|(?:ITD)|(?:PTP)|(?:SPD)|(?:ICM))$",
                    "default": 1,
                    "example": "YTD",
                    "description": "A valid period to report on. Valid period values include:\n  - <code>`1-999`</code>\n  - <code>`QTR1-999`</code>\n  - <code>`CMP1-12`</code>\n  - <code>`MPP1-999`</code>\n  - <code>`FMP1-12`</code>\n  - <code>`APP1-999`</code>\n  - <code>`FAP1-999`</code>\n  - <code>`MTD`</code>\n  - <code>`YTD`</code>\n  - <code>`FTD`</code>\n  - <code>`FQD`</code>\n  - <code>`FQD1-999`</code>\n  - <code>`QTD`</code>\n  - <code>`QTD1-999`</code>\n  - <code>`ITD`</code>\n  - <code>`PTP`</code>\n  - <code>`SPD`</code>\n  - <code>`ICM`</code>\n"
                  },
                  "segment": {
                    "type": "string",
                    "pattern": "^[A-Z0-9]{1,4}$",
                    "default": "01",
                    "example": "01",
                    "description": "The identifier of the model sector for the report."
                  },
                  "benchmark": {
                    "type": "string",
                    "pattern": "^[A-Z0-9]{1,4}$",
                    "example": "01",
                    "description": "The identifier of the benchmark to compare with the selected model sector."
                  },
                  "benchmarkRiskFree": {
                    "type": "string",
                    "pattern": "^[A-Z0-9]{1,4}$",
                    "example": "42",
                    "description": "A benchmark representing the risk-free rate of return, used in the Sharpe and Treynor ratio calculations."
                  }
                },
                "required": [
                  "accounts",
                  "asOfDate",
                  "segment",
                  "benchmark",
                  "benchmarkRiskFree"
                ]
              }
            }
          }
        }
      }
    },
    "/reports/sector-allocation": {
      "post": {
        "summary": "Sector Allocation",
        "description": "This report lists the portfolio's market values and allocations by asset class and/or sector.",
        "operationId": "sectorAllocation",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "accountId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 14,
                        "example": "AGGAUTHORSCIEN",
                        "description": "The unique identifier for the account."
                      },
                      "accountName": {
                        "type": "string",
                        "minLength": 0,
                        "maxLength": 100,
                        "example": "Model Portfolio A",
                        "description": "The name or title assigned to the constituent account.  Standard account names can be up to 50 characters.  Alternate reporting account names can be used (based on system settings) and can be up to 100 characters."
                      },
                      "accountInceptionDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2012-01-01",
                        "description": "The date when the constituent account was established, in YYYY-MM-DD format."
                      },
                      "asOfDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-01-31",
                        "description": "The reporting date, in YYYY-MM-DD format, reflecting the date specified in the request."
                      },
                      "segmentId": {
                        "type": "string",
                        "example": "TF",
                        "description": "The identifier for the segment. A segment can be either a benchmark, sector, or groups of sectors(asset class)"
                      },
                      "segmentName": {
                        "type": "string",
                        "example": "Total Fund",
                        "description": "The benchmark or sector name assigned to the segment."
                      },
                      "periodIndex": {
                        "type": "string",
                        "pattern": "^[1-9]\\d*$",
                        "example": "1",
                        "description": "The index of the current period from the list provided in the input parameter <strong>periods</strong>. \nFor example, if the periods provided are ['YTD', 'ITD'], the indexes will be 1 and 2, respectively.\n"
                      },
                      "period": {
                        "type": "string",
                        "example": "ITD",
                        "description": "The period identifier from the input parameter <strong>periods</strong>, representing the defined start and end dates for the data record."
                      },
                      "periodFromDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2012-10-01",
                        "description": "The start date of the period, in YYYY-MM-DD format."
                      },
                      "periodFromDateAdjusted": {
                        "type": "string",
                        "enum": [
                          "N",
                          "Y"
                        ],
                        "example": "N",
                        "description": "If <code>Y</code>, this indicates that the period's start date (<strong>fromDate</strong>) \nwas adjusted forward to match the account's inception date.\n"
                      },
                      "periodTotalUVR": {
                        "type": "string",
                        "pattern": "^-?\\d*\\.?\\d{0,6}$",
                        "example": "0.981646",
                        "description": "The segment's rate of return for the period, expressed as a unit value ratio (UVR)."
                      },
                      "periodTotalROR": {
                        "type": "string",
                        "pattern": "^-?\\d*\\.?\\d{0,4}$",
                        "example": "-1.8400",
                        "description": "The segment's annualized rate of return for the period, expressed as a percentage (%)."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 The request was unacceptable, often due to missing a required parameter.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400,
                      "description": "For some errors that could be handled programmatically, a short string indicating the error code reported."
                    },
                    "name": {
                      "type": "string",
                      "example": "Bad Request",
                      "description": "A short error name or error class or type."
                    },
                    "message": {
                      "type": "string",
                      "example": "The request was unacceptable, often due to an incorrect or missing parameter.",
                      "description": "A human-readable message providing more details about the error."
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "requestBody": {
          "description": "A SectorAllocationRequest JSON object containing the request parameters.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "account": {
                    "type": "string",
                    "pattern": "^[A-Z0-9-_.]{1,14}$",
                    "example": "AGGAUTHORSCIEN",
                    "description": "A unique account identifier."
                  },
                  "asOfDate": {
                    "type": "string",
                    "format": "date",
                    "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
                    "example": "20121031",
                    "description": "The 'as of' date for the reporting period in YYYYMMDD format. For the current processing month use the date of the last data load, otherwise use the end-of-month date."
                  },
                  "periods": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "pattern": "^(?:(?:[1-9][0-9]{0,2})|(?:QTR[1-9][0-9]{0,2})|(?:CMP(?:[1-9]|1[0-2]))|(?:MPP[1-9][0-9]{0,2})|(?:FMP(?:[1-9]|1[0-2]))|(?:APP[1-9][0-9]{0,2})|(?:FAP[1-9][0-9]{0,2})|(?:MTD)|(?:YTD)|(?:FTD)|(?:FQD)|(?:FQD[1-9][0-9]{0,2})|(?:QTD)|(?:QTD[1-9][0-9]{0,2})|(?:ITD)|(?:PTP)|(?:SPD)|(?:ICM)|(?:CON))$"
                    },
                    "default": [
                      "1"
                    ],
                    "example": [
                      "1",
                      "ITD"
                    ],
                    "description": "A list of valid periods to report on. Valid period values include:\n- <code>`1-999`</code>\n- <code>`QTR1-999`</code>\n- <code>`CMP1-12`</code>\n- <code>`MPP1-999`</code>\n- <code>`FMP1-12`</code>\n- <code>`APP1-999`</code>\n- <code>`FAP1-999`</code>\n- <code>`MTD`</code>\n- <code>`YTD`</code>\n- <code>`FTD`</code>\n- <code>`FQD`</code>\n- <code>`FQD1-999`</code>\n- <code>`QTD`</code>\n- <code>`QTD1-999`</code>\n- <code>`ITD`</code>\n- <code>`PTP`</code>\n- <code>`SPD`</code>\n- <code>`ICM`</code>\n- <code>`CON`</code>\n"
                  },
                  "segments": {
                    "description": "A list of sectors identifiers for which to retrieve data.",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "pattern": "^[A-Z0-9]{1,4}$"
                    },
                    "example": [
                      "EQ",
                      "01"
                    ]
                  }
                },
                "required": [
                  "account",
                  "asOfDate",
                  "segments"
                ]
              }
            }
          }
        }
      }
    },
    "/reports/sector-inception": {
      "post": {
        "summary": "Sector Inception SPP",
        "description": "The Sector Inception Selected Period Performance report lists the market values and rates of return for selected sectors and benchmarks for the specified periods, including inception-to-date performance for sectors and benchmarks.",
        "operationId": "sectorInception",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "accountId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 14,
                        "example": "AGGAUTHORSCIEN",
                        "description": "The unique identifier for the underlying constituent account.  \nThe composite account can also be included and is identified as the accountId matching the user input accountId (or without the AGG/AGE prefix being equal to the compositeId).  \n"
                      },
                      "accountName": {
                        "type": "string",
                        "minLength": 0,
                        "maxLength": 100,
                        "example": "Model Portfolio A",
                        "description": "The name or title assigned to the constituent account.  Standard account names can be up to 50 characters.  Alternate reporting account names can be used (based on system settings) and can be up to 100 characters."
                      },
                      "accountInceptionDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2012-01-01",
                        "description": "The date when the constituent account was established, in YYYY-MM-DD format."
                      },
                      "asOfDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-01-31",
                        "description": "The reporting date, in YYYY-MM-DD format, reflecting the date specified in the request."
                      },
                      "segmentId": {
                        "type": "string",
                        "example": "TF",
                        "description": "The identifier for the segment. A segment can be either a benchmark, sector, or groups of sectors(asset class)"
                      },
                      "segmentName": {
                        "type": "string",
                        "example": "Total Fund",
                        "description": "The benchmark or sector name assigned to the segment."
                      },
                      "segmentType": {
                        "type": "string",
                        "enum": [
                          "benchmark",
                          "sector"
                        ],
                        "example": "sector",
                        "description": "Indicates whether the data record represents a benchmark or a sector."
                      },
                      "segmentInceptionDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-01-31",
                        "description": "The inception date of the segment in YYYY-MM-DD format."
                      },
                      "sectorMarketValue": {
                        "type": "string",
                        "pattern": "^-?\\d*\\.?\\d{0,2}$",
                        "example": "2638428.45",
                        "description": "The sum of the sector's asset values and accrued earnings as of the specified date. If the segment is a benchmark, this value is <code>null</code>."
                      },
                      "periodIndex": {
                        "type": "string",
                        "pattern": "^[1-9]\\d*$",
                        "example": "1",
                        "description": "The index of the current period from the list provided in the input parameter <strong>periods</strong>. \nFor example, if the periods provided are ['YTD', 'ITD'], the indexes will be 1 and 2, respectively.\n"
                      },
                      "period": {
                        "type": "string",
                        "example": "ITD",
                        "description": "The period identifier from the input parameter <strong>periods</strong>, representing the defined start and end dates for the data record."
                      },
                      "periodFromDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2012-10-01",
                        "description": "The start date of the period, in YYYY-MM-DD format."
                      },
                      "periodToDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2012-10-31",
                        "description": "The end date of the period, in YYYY-MM-DD format."
                      },
                      "periodFromDateAdjusted": {
                        "type": "string",
                        "enum": [
                          "N",
                          "Y"
                        ],
                        "example": "N",
                        "description": "If <code>Y</code>, this indicates that the period's start date (<strong>fromDate</strong>) \nwas adjusted forward to match the account's inception date.\n"
                      },
                      "periodTotalUVR": {
                        "type": "string",
                        "pattern": "^-?\\d*\\.?\\d{0,6}$",
                        "example": "0.981646",
                        "description": "The segment's rate of return for the period, expressed as a unit value ratio (UVR)."
                      },
                      "periodTotalROR": {
                        "type": "string",
                        "pattern": "^-?\\d*\\.?\\d{0,4}$",
                        "example": "-1.8400",
                        "description": "The segment's annualized rate of return for the period, expressed as a percentage (%)."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 The request was unacceptable, often due to missing a required parameter.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400,
                      "description": "For some errors that could be handled programmatically, a short string indicating the error code reported."
                    },
                    "name": {
                      "type": "string",
                      "example": "Bad Request",
                      "description": "A short error name or error class or type."
                    },
                    "message": {
                      "type": "string",
                      "example": "The request was unacceptable, often due to an incorrect or missing parameter.",
                      "description": "A human-readable message providing more details about the error."
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "requestBody": {
          "description": "A SectorInceptionRequest JSON object containing the request parameters.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "account": {
                    "type": "string",
                    "pattern": "^[A-Z0-9-_.]{1,14}$",
                    "example": "AGGAUTHORSCIEN",
                    "description": "A unique account identifier."
                  },
                  "asOfDate": {
                    "type": "string",
                    "format": "date",
                    "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
                    "example": "20121031",
                    "description": "The 'as of' date for the reporting period in YYYYMMDD format. For the current processing month use the date of the last data load, otherwise use the end-of-month date."
                  },
                  "periods": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "pattern": "^(?:(?:[1-9][0-9]{0,2})|(?:QTR[1-9][0-9]{0,2})|(?:CMP(?:[1-9]|1[0-2]))|(?:MPP[1-9][0-9]{0,2})|(?:FMP(?:[1-9]|1[0-2]))|(?:APP[1-9][0-9]{0,2})|(?:FAP[1-9][0-9]{0,2})|(?:MTD)|(?:YTD)|(?:FTD)|(?:FQD)|(?:FQD[1-9][0-9]{0,2})|(?:QTD)|(?:QTD[1-9][0-9]{0,2})|(?:ITD)|(?:PTP)|(?:SPD)|(?:ICM)|(?:CON))$"
                    },
                    "default": [
                      "1"
                    ],
                    "example": [
                      "1",
                      "ITD"
                    ],
                    "description": "A list of valid periods to report on. Valid period values include:\n- <code>`1-999`</code>\n- <code>`QTR1-999`</code>\n- <code>`CMP1-12`</code>\n- <code>`MPP1-999`</code>\n- <code>`FMP1-12`</code>\n- <code>`APP1-999`</code>\n- <code>`FAP1-999`</code>\n- <code>`MTD`</code>\n- <code>`YTD`</code>\n- <code>`FTD`</code>\n- <code>`FQD`</code>\n- <code>`FQD1-999`</code>\n- <code>`QTD`</code>\n- <code>`QTD1-999`</code>\n- <code>`ITD`</code>\n- <code>`PTP`</code>\n- <code>`SPD`</code>\n- <code>`ICM`</code>\n- <code>`CON`</code>\n"
                  },
                  "segments": {
                    "description": "A list of sectors identifiers for which to retrieve data.",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "pattern": "^[A-Z0-9]{1,4}$"
                    },
                    "example": [
                      "EQ",
                      "01"
                    ]
                  },
                  "benchmarks": {
                    "description": "An optional list of benchmark identifiers.",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "pattern": "^[A-Z0-9]{1,4}$"
                    },
                    "example": [
                      "01",
                      "42"
                    ]
                  }
                },
                "required": [
                  "account",
                  "asOfDate"
                ]
              }
            }
          }
        }
      }
    },
    "/reports/top-performers": {
      "post": {
        "summary": "Top Performing Assets",
        "description": "This report lists the top holdings for the selected portfolio or composite for the specified date. Assets mapped to non-performing sectors are excluded.",
        "operationId": "topPerformers",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "accountId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 14,
                        "example": "AGGAUTHORSCIEN",
                        "description": "The unique identifier for the account."
                      },
                      "accountName": {
                        "type": "string",
                        "minLength": 0,
                        "maxLength": 100,
                        "example": "Model Portfolio A",
                        "description": "The name or title assigned to the constituent account.  Standard account names can be up to 50 characters.  Alternate reporting account names can be used (based on system settings) and can be up to 100 characters."
                      },
                      "accountInceptionDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2012-01-01",
                        "description": "The date when the constituent account was established, in YYYY-MM-DD format."
                      },
                      "asOfDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-01-31",
                        "description": "The reporting date, in YYYY-MM-DD format, reflecting the date specified in the request."
                      },
                      "assetId": {
                        "type": "string",
                        "example": "1845402H4",
                        "description": "The unique identifier for the asset."
                      },
                      "assetName": {
                        "type": "string",
                        "example": "CLEAR CRK ISD-REF 2.5 2/15/2021",
                        "description": "The name assigned to the asset."
                      },
                      "ticker": {
                        "type": "string",
                        "example": "1845402H4",
                        "description": "The ticker symbol assigned to the asset.  \nA ticker symbol or stock symbol is an abbreviation used to uniquely identify publicly traded shares of a particular stock on a particular stock market\n"
                      },
                      "cusip": {
                        "type": "string",
                        "example": "1845402H4",
                        "description": "The CUSIP value assigned to the assetId.  CUSIP stands for Committee on Uniform Securities Identification Procedures1. \nThe Cusip is a unique identification number assigned to all stocks and registered bonds in the United States and Canada.\n"
                      },
                      "periodIndex": {
                        "type": "string",
                        "pattern": "^[1-9]\\d*$",
                        "example": "1",
                        "description": "The index of the current period from the list provided in the input parameter <strong>periods</strong>. \nFor example, if the periods provided are ['YTD', 'ITD'], the indexes will be 1 and 2, respectively.\n"
                      },
                      "period": {
                        "type": "string",
                        "example": "ITD",
                        "description": "The period identifier from the input parameter <strong>periods</strong>, representing the defined start and end dates for the data record."
                      },
                      "periodFromDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2012-10-01",
                        "description": "The start date of the period, in YYYY-MM-DD format."
                      },
                      "periodToDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2012-10-31",
                        "description": "The end date of the period, in YYYY-MM-DD format."
                      },
                      "periodFromDateAdjusted": {
                        "type": "string",
                        "enum": [
                          "N",
                          "Y"
                        ],
                        "example": "N",
                        "description": "If <code>Y</code>, this indicates that the period's start date (<strong>fromDate</strong>) \nwas adjusted forward to match the account's inception date.\n"
                      },
                      "marketValue": {
                        "type": "string",
                        "pattern": "^-?\\d*\\.?\\d{0,2}$",
                        "example": "26877.69",
                        "description": "The asset's market value including any accrued earnings as of the specified date."
                      },
                      "allocation": {
                        "type": "string",
                        "pattern": "^-?\\d*\\.?\\d{0,6}$",
                        "example": "1.734406",
                        "description": "The allocation of the asset as of the specified date, expressed as a percentage (%)."
                      },
                      "totalUVR": {
                        "type": "string",
                        "pattern": "^-?\\d*\\.?\\d{0,6}$",
                        "example": "1.007632",
                        "description": "The asset's rate of return for the period, expressed as a unit value ratio (UVR)."
                      },
                      "totalROR": {
                        "type": "string",
                        "pattern": "^-?\\d*\\.?\\d{0,4}$",
                        "example": "0.76",
                        "description": "The asset's annualized rate of return for the period, expressed as a percentage (%)."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 The request was unacceptable, often due to missing a required parameter.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400,
                      "description": "For some errors that could be handled programmatically, a short string indicating the error code reported."
                    },
                    "name": {
                      "type": "string",
                      "example": "Bad Request",
                      "description": "A short error name or error class or type."
                    },
                    "message": {
                      "type": "string",
                      "example": "The request was unacceptable, often due to an incorrect or missing parameter.",
                      "description": "A human-readable message providing more details about the error."
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "requestBody": {
          "description": "A TopPerformersRequest JSON object containing the request parameters.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "account": {
                    "type": "string",
                    "pattern": "^[A-Z0-9-_.]{1,14}$",
                    "example": "AGGAUTHORSCIEN",
                    "description": "A unique account identifier."
                  },
                  "asOfDate": {
                    "type": "string",
                    "format": "date",
                    "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
                    "example": "20121031",
                    "description": "The 'as of' date for the reporting period in YYYYMMDD format. For the current processing month use the date of the last data load, otherwise use the end-of-month date."
                  },
                  "period": {
                    "type": "string",
                    "pattern": "^(?:(?:[1-9][0-9]{0,2})|(?:QTR[1-9][0-9]{0,2})|(?:CMP(?:[1-9]|1[0-2]))|(?:MPP[1-9][0-9]{0,2})|(?:FMP(?:[1-9]|1[0-2]))|(?:APP[1-9][0-9]{0,2})|(?:FAP[1-9][0-9]{0,2})|(?:MTD)|(?:YTD)|(?:FTD)|(?:FQD)|(?:FQD[1-9][0-9]{0,2})|(?:QTD)|(?:QTD[1-9][0-9]{0,2})|(?:ITD)|(?:PTP)|(?:SPD)|(?:ICM))$",
                    "default": 1,
                    "example": "YTD",
                    "description": "A valid period to report on. Valid period values include:\n  - <code>`1-999`</code>\n  - <code>`QTR1-999`</code>\n  - <code>`CMP1-12`</code>\n  - <code>`MPP1-999`</code>\n  - <code>`FMP1-12`</code>\n  - <code>`APP1-999`</code>\n  - <code>`FAP1-999`</code>\n  - <code>`MTD`</code>\n  - <code>`YTD`</code>\n  - <code>`FTD`</code>\n  - <code>`FQD`</code>\n  - <code>`FQD1-999`</code>\n  - <code>`QTD`</code>\n  - <code>`QTD1-999`</code>\n  - <code>`ITD`</code>\n  - <code>`PTP`</code>\n  - <code>`SPD`</code>\n  - <code>`ICM`</code>\n"
                  },
                  "recordLimit": {
                    "default": 10,
                    "type": "string",
                    "pattern": "^[1-9]\\d*$",
                    "example": "10",
                    "description": "The maximum number of records to return. Assign 0 for no record limit."
                  }
                },
                "required": [
                  "accounts",
                  "asOfDate"
                ]
              }
            }
          }
        }
      }
    },
    "/reports/transactions": {
      "post": {
        "summary": "Transaction Listing",
        "description": "This report shows asset-level transaction details for individual portfolios or composite constituents.",
        "operationId": "transactions",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "accountId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 14,
                        "example": "AGGAUTHORSCIEN",
                        "description": "The unique identifier for the account."
                      },
                      "accountName": {
                        "type": "string",
                        "minLength": 0,
                        "maxLength": 100,
                        "example": "Model Portfolio A",
                        "description": "The name or title assigned to the constituent account.  Standard account names can be up to 50 characters.  Alternate reporting account names can be used (based on system settings) and can be up to 100 characters."
                      },
                      "accountInceptionDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2012-01-01",
                        "description": "The date when the constituent account was established, in YYYY-MM-DD format."
                      },
                      "asOfDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-01-31",
                        "description": "The reporting date, in YYYY-MM-DD format, reflecting the date specified in the request."
                      },
                      "toDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2012-10-31",
                        "description": "The end date of the period, in YYYY-MM-DD format."
                      },
                      "fromDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2012-10-01",
                        "description": "The start date of the period, in YYYY-MM-DD format."
                      },
                      "fromDateAdjusted": {
                        "type": "string",
                        "enum": [
                          "N",
                          "Y"
                        ],
                        "example": "N",
                        "description": "If <code>Y</code>, this indicates that the period's start date (<strong>fromDate</strong>) \nwas adjusted forward to match the account's inception date.\n"
                      },
                      "classId": {
                        "type": "string",
                        "pattern": "^[A-Z0-9]{1,4}$",
                        "example": "FX",
                        "description": "The identifier of the asset class."
                      },
                      "className": {
                        "type": "string",
                        "example": "Fixed Income",
                        "description": "The name assigned to the asset class."
                      },
                      "segmentId": {
                        "type": "string",
                        "pattern": "^[A-Z0-9]{1,4}$",
                        "example": "01",
                        "description": "The identifier of the sector or category."
                      },
                      "segmentName": {
                        "type": "string",
                        "example": "Total Fund",
                        "description": "The name assigned to the sector or category."
                      },
                      "assetId": {
                        "type": "string",
                        "example": "1845402H4",
                        "description": "The unique identifier for the asset."
                      },
                      "assetName": {
                        "type": "string",
                        "example": "CLEAR CRK ISD-REF 2.5 2/15/2021",
                        "description": "The name assigned to the asset."
                      },
                      "ticker": {
                        "type": "string",
                        "example": "1845402H4",
                        "description": "The ticker symbol assigned to the asset.  \nA ticker symbol or stock symbol is an abbreviation used to uniquely identify publicly traded shares of a particular stock on a particular stock market\n"
                      },
                      "cusip": {
                        "type": "string",
                        "example": "1845402H4",
                        "description": "The CUSIP value assigned to the assetId.  CUSIP stands for Committee on Uniform Securities Identification Procedures1. \nThe Cusip is a unique identification number assigned to all stocks and registered bonds in the United States and Canada.\n"
                      },
                      "transactionDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-01-31",
                        "description": "The transaction or trade date in YYYY-MM-DD format."
                      },
                      "transactionCategoryId": {
                        "type": "string",
                        "example": "02",
                        "description": "The transaction category identifier that identifies the category of transaction.\nExamples include:<br><br>\n<code>02</code>  Income Received<br>\n<code>20</code>  Deliver Long<br><br>\nValid values are defined by the Client.\n"
                      },
                      "transactionCategory": {
                        "type": "string",
                        "example": "Income Received",
                        "description": "The name assigned to the transaction category corresponding to the <code>transactionCategoryId</code>"
                      },
                      "transactionCode": {
                        "type": "string",
                        "example": "47",
                        "description": "The transaction identifier that identifies the type of transaction.<br><br>\nExamples include:<br>\n<code>FRBUY</code>  Purchase<br>\n<code>FRPIN</code>  Income<br><br>\nValid values are defined by the Client.\n"
                      },
                      "transactionCodeDescription": {
                        "type": "string",
                        "example": "INTEREST",
                        "description": "The description associated with the <code>transactionCode</code>"
                      },
                      "transactionUnits": {
                        "type": "string",
                        "pattern": "^-?\\d*\\.?\\d{0,4}$",
                        "example": "50",
                        "description": "The absolute value of the number of shares in the transaction."
                      },
                      "transactionUnitPrice": {
                        "type": "string",
                        "pattern": "^-?\\d*\\.?\\d{0,6}$",
                        "example": "99.99",
                        "description": "The price per unit assigned to the transaction."
                      },
                      "transactionPrincipal": {
                        "type": "string",
                        "pattern": "^-?\\d*\\.?\\d{0,2}$",
                        "example": "4999.5",
                        "description": "The principal value of the transaction."
                      },
                      "transactionIncome": {
                        "type": "string",
                        "pattern": "^-?\\d*\\.?\\d{0,2}$",
                        "example": "123.45",
                        "description": "Cash income received (or purchased)"
                      },
                      "transactionFees": {
                        "type": "string",
                        "pattern": "^-?\\d*\\.?\\d{0,2}$",
                        "example": "9.95",
                        "description": "Transaction fees associated with the transaction."
                      },
                      "transactionStory": {
                        "type": "string",
                        "example": "Free receipt to open account.",
                        "description": "Freeform text notes or description of the transaction."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 The request was unacceptable, often due to missing a required parameter.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400,
                      "description": "For some errors that could be handled programmatically, a short string indicating the error code reported."
                    },
                    "name": {
                      "type": "string",
                      "example": "Bad Request",
                      "description": "A short error name or error class or type."
                    },
                    "message": {
                      "type": "string",
                      "example": "The request was unacceptable, often due to an incorrect or missing parameter.",
                      "description": "A human-readable message providing more details about the error."
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "requestBody": {
          "description": "A TransactionsRequest JSON object containing the request parameters.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "account": {
                    "type": "string",
                    "pattern": "^[A-Z0-9-_.]{1,14}$",
                    "example": "AGGAUTHORSCIEN",
                    "description": "A unique account identifier."
                  },
                  "asOfDate": {
                    "type": "string",
                    "format": "date",
                    "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
                    "example": "20121031",
                    "description": "The 'as of' date for the reporting period in YYYYMMDD format. For the current processing month use the date of the last data load, otherwise use the end-of-month date."
                  },
                  "period": {
                    "type": "string",
                    "pattern": "^(?:(?:[1-9][0-9]{0,2})|(?:QTR[1-9][0-9]{0,2})|(?:CMP(?:[1-9]|1[0-2]))|(?:MPP[1-9][0-9]{0,2})|(?:FMP(?:[1-9]|1[0-2]))|(?:APP[1-9][0-9]{0,2})|(?:FAP[1-9][0-9]{0,2})|(?:MTD)|(?:YTD)|(?:FTD)|(?:FQD)|(?:FQD[1-9][0-9]{0,2})|(?:QTD)|(?:QTD[1-9][0-9]{0,2})|(?:ITD)|(?:PTP)|(?:SPD)|(?:ICM))$",
                    "default": 1,
                    "example": "YTD",
                    "description": "A valid period to report on. Valid period values include:\n  - <code>`1-999`</code>\n  - <code>`QTR1-999`</code>\n  - <code>`CMP1-12`</code>\n  - <code>`MPP1-999`</code>\n  - <code>`FMP1-12`</code>\n  - <code>`APP1-999`</code>\n  - <code>`FAP1-999`</code>\n  - <code>`MTD`</code>\n  - <code>`YTD`</code>\n  - <code>`FTD`</code>\n  - <code>`FQD`</code>\n  - <code>`FQD1-999`</code>\n  - <code>`QTD`</code>\n  - <code>`QTD1-999`</code>\n  - <code>`ITD`</code>\n  - <code>`PTP`</code>\n  - <code>`SPD`</code>\n  - <code>`ICM`</code>\n"
                  }
                },
                "required": [
                  "account",
                  "asOfDate"
                ]
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CompositeAllocationRequest": {
        "type": "object",
        "properties": {
          "account": {
            "description": "A unique composite account identifier. All composite accounts begin with either 'AGG' or 'AGE'.",
            "type": "string",
            "pattern": "^(AGG|AGE)[A-Z0-9-_.]{1,11}$",
            "example": "AGGAUTHORSCIEN"
          },
          "asOfDate": {
            "type": "string",
            "format": "date",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "example": "20121031",
            "description": "The 'as of' date for the reporting period in YYYYMMDD format. For the current processing month use the date of the last data load, otherwise use the end-of-month date."
          }
        },
        "required": [
          "composite",
          "asOfDate"
        ]
      },
      "CompositeAllocationResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "compositeId": {
              "type": "string",
              "example": "AUTHORSCIEN",
              "description": "The unique identifier for the composite. All constituents share this ID. \nThis ID is derived from the composite account's unique account ID by removing the 'AGG' or 'AGE' prefix.\n"
            },
            "compositeName": {
              "type": "string",
              "example": "Authors and Scientists Composite",
              "description": "The name or title assigned to the composite."
            },
            "compositeInceptionDate": {
              "type": "string",
              "format": "date",
              "example": "2011-10-15",
              "description": "The date when the composite was established, in YYYY-MM-DD format."
            },
            "accountId": {
              "type": "string",
              "minLength": 1,
              "maxLength": 14,
              "example": "AGGAUTHORSCIEN",
              "description": "The unique identifier for the underlying constituent account.  \nThe composite account can also be included and is identified as the accountId matching the user input accountId (or without the AGG/AGE prefix being equal to the compositeId).  \n"
            },
            "accountName": {
              "type": "string",
              "minLength": 0,
              "maxLength": 100,
              "example": "Model Portfolio A",
              "description": "The name or title assigned to the constituent account.  Standard account names can be up to 50 characters.  Alternate reporting account names can be used (based on system settings) and can be up to 100 characters."
            },
            "accountInceptionDate": {
              "type": "string",
              "format": "date",
              "example": "2012-01-01",
              "description": "The date when the constituent account was established, in YYYY-MM-DD format."
            },
            "asOfDate": {
              "type": "string",
              "format": "date",
              "example": "2024-01-31",
              "description": "The reporting date, in YYYY-MM-DD format, reflecting the date specified in the request."
            },
            "market": {
              "type": "number",
              "format": "float",
              "example": 2634780.85,
              "description": "The sum of the account's asset values as of the specified date."
            },
            "accrual": {
              "type": "number",
              "format": "float",
              "example": 3647.6,
              "description": "The sum of the account's asset accrued earnings as of the specified date."
            },
            "marketValue": {
              "type": "number",
              "format": "float",
              "example": 2638428.45,
              "description": "The sum of the account's asset values including any accrued earnings as of the specified date."
            },
            "allocation": {
              "type": "number",
              "format": "float",
              "example": 1.734406,
              "description": "The percentage of the account within the composite as of the specified date."
            }
          }
        }
      },
      "CompositePerformanceRequest": {
        "type": "object",
        "properties": {
          "account": {
            "description": "A unique composite account identifier. All composite accounts begin with either 'AGG' or 'AGE'.",
            "type": "string",
            "pattern": "^(AGG|AGE)[A-Z0-9-_.]{1,11}$",
            "example": "AGGAUTHORSCIEN"
          },
          "asOfDate": {
            "type": "string",
            "format": "date",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "example": "20121031",
            "description": "The 'as of' date for the reporting period in YYYYMMDD format. For the current processing month use the date of the last data load, otherwise use the end-of-month date."
          },
          "periods": {
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^(?:(?:[1-9][0-9]{0,2})|(?:QTR[1-9][0-9]{0,2})|(?:CMP(?:[1-9]|1[0-2]))|(?:MPP[1-9][0-9]{0,2})|(?:FMP(?:[1-9]|1[0-2]))|(?:APP[1-9][0-9]{0,2})|(?:FAP[1-9][0-9]{0,2})|(?:MTD)|(?:YTD)|(?:FTD)|(?:FQD)|(?:FQD[1-9][0-9]{0,2})|(?:QTD)|(?:QTD[1-9][0-9]{0,2})|(?:ITD)|(?:PTP)|(?:SPD)|(?:ICM)|(?:CON))$"
            },
            "default": [
              "1"
            ],
            "example": [
              "1",
              "ITD"
            ],
            "description": "A list of valid periods to report on. Valid period values include:\n- <code>`1-999`</code>\n- <code>`QTR1-999`</code>\n- <code>`CMP1-12`</code>\n- <code>`MPP1-999`</code>\n- <code>`FMP1-12`</code>\n- <code>`APP1-999`</code>\n- <code>`FAP1-999`</code>\n- <code>`MTD`</code>\n- <code>`YTD`</code>\n- <code>`FTD`</code>\n- <code>`FQD`</code>\n- <code>`FQD1-999`</code>\n- <code>`QTD`</code>\n- <code>`QTD1-999`</code>\n- <code>`ITD`</code>\n- <code>`PTP`</code>\n- <code>`SPD`</code>\n- <code>`ICM`</code>\n- <code>`CON`</code>\n"
          },
          "segments": {
            "description": "A list of sectors identifiers for which to retrieve data.",
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^[A-Z0-9]{1,4}$"
            },
            "example": [
              "EQ",
              "01"
            ]
          },
          "benchmarks": {
            "description": "An optional list of benchmark identifiers.",
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^[A-Z0-9]{1,4}$"
            },
            "example": [
              "01",
              "42"
            ]
          }
        },
        "required": [
          "account",
          "asOfDate"
        ]
      },
      "CompositePerformanceResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "compositeId": {
              "type": "string",
              "example": "AUTHORSCIEN",
              "description": "The unique identifier for the composite. All constituents share this ID. \nThis ID is derived from the composite account's unique account ID by removing the 'AGG' or 'AGE' prefix.\n"
            },
            "compositeName": {
              "type": "string",
              "example": "Authors and Scientists Composite",
              "description": "The name or title assigned to the composite."
            },
            "compositeInceptionDate": {
              "type": "string",
              "format": "date",
              "example": "2011-10-15",
              "description": "The date when the composite was established, in YYYY-MM-DD format."
            },
            "accountId": {
              "type": "string",
              "minLength": 1,
              "maxLength": 14,
              "example": "AGGAUTHORSCIEN",
              "description": "The unique identifier for the underlying constituent account.  \nThe composite account can also be included and is identified as the accountId matching the user input accountId (or without the AGG/AGE prefix being equal to the compositeId).  \n"
            },
            "accountName": {
              "type": "string",
              "minLength": 0,
              "maxLength": 100,
              "example": "Model Portfolio A",
              "description": "The name or title assigned to the constituent account.  Standard account names can be up to 50 characters.  Alternate reporting account names can be used (based on system settings) and can be up to 100 characters."
            },
            "accountInceptionDate": {
              "type": "string",
              "format": "date",
              "example": "2012-01-01",
              "description": "The date when the constituent account was established, in YYYY-MM-DD format."
            },
            "asOfDate": {
              "type": "string",
              "format": "date",
              "example": "2024-01-31",
              "description": "The reporting date, in YYYY-MM-DD format, reflecting the date specified in the request."
            },
            "segmentId": {
              "type": "string",
              "example": "TF",
              "description": "The identifier for the segment. A segment can be either a benchmark, sector, or groups of sectors(asset class)"
            },
            "segmentName": {
              "type": "string",
              "example": "Total Fund",
              "description": "The benchmark or sector name assigned to the segment."
            },
            "segmentType": {
              "type": "string",
              "enum": [
                "benchmark",
                "sector"
              ],
              "example": "sector",
              "description": "Indicates whether the data record represents a benchmark or a sector."
            },
            "sectorMarket": {
              "type": "string",
              "pattern": "^-?\\d*\\.?\\d{0,2}$",
              "example": "2634780.85",
              "description": "The sum of the sector's asset values as of the specified date. If the segment is a benchmark, this value is <code>null</code>."
            },
            "sectorAccrual": {
              "type": "string",
              "pattern": "^-?\\d*\\.?\\d{0,2}$",
              "example": "3647.65",
              "description": "The accrued earnings of the sector as of the specified date. If the segment is a benchmark, this value is <code>null</code>."
            },
            "sectorMarketValue": {
              "type": "string",
              "pattern": "^-?\\d*\\.?\\d{0,2}$",
              "example": "2638428.45",
              "description": "The sum of the sector's asset values and accrued earnings as of the specified date. If the segment is a benchmark, this value is <code>null</code>."
            },
            "sectorAllocation": {
              "type": "string",
              "pattern": "^-?\\d*\\.?\\d{0,6}$",
              "example": "1.734406",
              "description": "The allocation percentage of the sector as of the specified date. If the segment is a benchmark, this value is <code>null</code>."
            },
            "periodIndex": {
              "type": "string",
              "pattern": "^[1-9]\\d*$",
              "example": "1",
              "description": "The index of the current period from the list provided in the input parameter <strong>periods</strong>. \nFor example, if the periods provided are ['YTD', 'ITD'], the indexes will be 1 and 2, respectively.\n"
            },
            "period": {
              "type": "string",
              "example": "ITD",
              "description": "The period identifier from the input parameter <strong>periods</strong>, representing the defined start and end dates for the data record."
            },
            "periodFromDate": {
              "type": "string",
              "format": "date",
              "example": "2012-10-01",
              "description": "The start date of the period, in YYYY-MM-DD format."
            },
            "periodToDate": {
              "type": "string",
              "format": "date",
              "example": "2012-10-31",
              "description": "The end date of the period, in YYYY-MM-DD format."
            },
            "periodFromDateAdjusted": {
              "type": "string",
              "enum": [
                "N",
                "Y"
              ],
              "example": "N",
              "description": "If <code>Y</code>, this indicates that the period's start date (<strong>fromDate</strong>) \nwas adjusted forward to match the account's inception date.\n"
            },
            "periodTotalUVR": {
              "type": "string",
              "pattern": "^-?\\d*\\.?\\d{0,6}$",
              "example": "0.981646",
              "description": "The segment's rate of return for the period, expressed as a unit value ratio (UVR)."
            },
            "periodTotalROR": {
              "type": "string",
              "pattern": "^-?\\d*\\.?\\d{0,4}$",
              "example": "-1.8400",
              "description": "The segment's annualized rate of return for the period, expressed as a percentage (%)."
            }
          }
        }
      },
      "DemographicsRequest": {
        "type": "object",
        "properties": {
          "accounts": {
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^[A-Z0-9-_.]{1,14}$",
              "example": "AGGAUTHORSCIEN"
            },
            "description": "A list of one or more unique account identifiers."
          },
          "asOfDate": {
            "type": "string",
            "format": "date",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "example": "20121031",
            "description": "The 'as of' date for the reporting period in YYYYMMDD format. For the current processing month use the date of the last data load, otherwise use the end-of-month date."
          },
          "demographics": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "ACCT",
                "ACCTBASE",
                "ACCTCURR",
                "ACCTFLD",
                "ACECDATE",
                "ACTIVE",
                "ADM",
                "AGGFEATR",
                "AGGOWNER",
                "AGGTYP",
                "APXDATE",
                "BNK",
                "CEINDX",
                "CMPRPIND",
                "EQINDX",
                "EQPOL",
                "FREQX",
                "FXINDX",
                "FXPOL",
                "FYE",
                "GLOBALFL",
                "ICPDATED",
                "ICPDATED_ALT",
                "INDXPKG",
                "IPPICP",
                "MR_IND",
                "MRACTVRN",
                "MRLFRPDT",
                "MRLFRRDT",
                "MRLPRCDT",
                "MRLRPDT",
                "MRRPTFRQ",
                "MVI_ACC",
                "NAME",
                "OBJ",
                "OFFN",
                "PCOLOR",
                "PF_TIER",
                "PWR",
                "RCFREQ",
                "RCTOL",
                "REPTPKG",
                "RPTDATE",
                "RPTINGNAME",
                "RULEPKG",
                "SECPKG",
                "SECTPKG",
                "SMACPYFR",
                "SMACPYTO",
                "SMARPLEV",
                "SMASORT",
                "SMASRCE",
                "STATEID",
                "STATUS",
                "TOLERPKG",
                "TXFDONLY",
                "TXRATE1",
                "TXRATE2",
                "TXRATE3",
                "TXRATE4",
                "TXRATE5",
                "TXRATE6",
                "TYP",
                "UDA101",
                "UDA102",
                "UDA103",
                "UDA104",
                "UDA105",
                "UDA106",
                "UDA107",
                "UDA108",
                "UDA109",
                "UDA110",
                "UDA111",
                "UDA112",
                "UDA113",
                "UDA114",
                "UDA115",
                "UDA301",
                "UDA302",
                "UDA303",
                "UDA304",
                "UDA305",
                "UDA306",
                "UDA307",
                "UDA308",
                "UDA309",
                "UDA310",
                "UDA311",
                "UDA312",
                "UDA313",
                "UDA314",
                "UDA315",
                "UDDATE1",
                "UDDATE2",
                "UDDATE3",
                "UDDATE4",
                "UDDATE5",
                "UDDATE6",
                "UDDATE7",
                "UDDATE8",
                "UDDATE9",
                "UDDATE10",
                "UDDATE11",
                "UDDATE12",
                "UDDATE13",
                "UDDATE14",
                "UDDATE15",
                "UDN1",
                "UDN2",
                "UDN3",
                "UDN4",
                "UDN5",
                "UDN6",
                "UDN7",
                "UDN8",
                "UDN9",
                "UDN10",
                "UDN11",
                "UDN12",
                "UDN13",
                "UDN14",
                "UDN15",
                "USERDEF",
                "USERDEF2",
                "USERDEF3",
                "USERDEF4",
                "WTDINDX"
              ]
            },
            "uniqueItems": true,
            "default": [
              "ACCT",
              "NAME",
              "MVI_ACC",
              "ICPDATED",
              "BNK",
              "ACCTCURR",
              "UDA101"
            ],
            "example": [
              "ACCT",
              "NAME",
              "MVI_ACC",
              "ICPDATED",
              "BNK",
              "ACCTCURR",
              "UDA101"
            ],
            "description": "A list of demographic field identifiers to retrieve."
          }
        },
        "required": [
          "accounts"
        ]
      },
      "DemographicsResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "accountId": {
              "type": "string",
              "minLength": 1,
              "maxLength": 14,
              "example": "AGGAUTHORSCIEN",
              "description": "The unique identifier for the underlying constituent account.  \nThe composite account can also be included and is identified as the accountId matching the user input accountId (or without the AGG/AGE prefix being equal to the compositeId).  \n"
            },
            "fieldId": {
              "type": "string",
              "example": "ACCT",
              "description": "The unique identifier for the demographic field."
            },
            "fieldName": {
              "type": "string",
              "example": "ACCT",
              "description": "The name of the demographic field."
            },
            "fieldDescription": {
              "type": "string",
              "example": "Account ID",
              "description": "The description of the demographic field."
            },
            "value": {
              "type": "string",
              "example": "AGGAUTHORSCIEN",
              "description": "The value of the demographic field."
            },
            "valueDescription": {
              "type": "string",
              "example": "Composite AGGAUTHORSCIEN",
              "description": "The description of the demographic field, if any."
            }
          }
        }
      },
      "FixedIncomeRequest": {
        "type": "object",
        "properties": {
          "account": {
            "type": "string",
            "pattern": "^[A-Z0-9-_.]{1,14}$",
            "example": "AGGAUTHORSCIEN",
            "description": "A unique account identifier."
          },
          "asOfDate": {
            "type": "string",
            "format": "date",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "example": "20121031",
            "description": "The 'as of' date for the reporting period in YYYYMMDD format. For the current processing month use the date of the last data load, otherwise use the end-of-month date."
          },
          "periods": {
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^(?:(?:[1-9][0-9]{0,2})|(?:QTR[1-9][0-9]{0,2})|(?:CMP(?:[1-9]|1[0-2]))|(?:MPP[1-9][0-9]{0,2})|(?:FMP(?:[1-9]|1[0-2]))|(?:APP[1-9][0-9]{0,2})|(?:FAP[1-9][0-9]{0,2})|(?:MTD)|(?:YTD)|(?:FTD)|(?:FQD)|(?:FQD[1-9][0-9]{0,2})|(?:QTD)|(?:QTD[1-9][0-9]{0,2})|(?:ITD)|(?:PTP)|(?:SPD)|(?:ICM)|(?:CON))$"
            },
            "default": [
              "1"
            ],
            "example": [
              "1",
              "ITD"
            ],
            "description": "A list of valid periods to report on. Valid period values include:\n- <code>`1-999`</code>\n- <code>`QTR1-999`</code>\n- <code>`CMP1-12`</code>\n- <code>`MPP1-999`</code>\n- <code>`FMP1-12`</code>\n- <code>`APP1-999`</code>\n- <code>`FAP1-999`</code>\n- <code>`MTD`</code>\n- <code>`YTD`</code>\n- <code>`FTD`</code>\n- <code>`FQD`</code>\n- <code>`FQD1-999`</code>\n- <code>`QTD`</code>\n- <code>`QTD1-999`</code>\n- <code>`ITD`</code>\n- <code>`PTP`</code>\n- <code>`SPD`</code>\n- <code>`ICM`</code>\n- <code>`CON`</code>\n"
          }
        },
        "required": [
          "account",
          "asOfDate"
        ]
      },
      "FixedIncomeResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "accountId": {
              "type": "string",
              "minLength": 1,
              "maxLength": 14,
              "example": "AGGAUTHORSCIEN",
              "description": "The unique identifier for the account."
            },
            "accountName": {
              "type": "string",
              "minLength": 0,
              "maxLength": 100,
              "example": "Model Portfolio A",
              "description": "The name or title assigned to the constituent account.  Standard account names can be up to 50 characters.  Alternate reporting account names can be used (based on system settings) and can be up to 100 characters."
            },
            "accountInceptionDate": {
              "type": "string",
              "format": "date",
              "example": "2012-01-01",
              "description": "The date when the constituent account was established, in YYYY-MM-DD format."
            },
            "classId": {
              "type": "string",
              "pattern": "^[A-Z0-9]{1,4}$",
              "example": "FX",
              "description": "The identifier of the asset class."
            },
            "className": {
              "type": "string",
              "example": "Fixed Income",
              "description": "The name assigned to the asset class."
            },
            "segmentId": {
              "type": "string",
              "pattern": "^[A-Z0-9]{1,4}$",
              "example": "01",
              "description": "The identifier of the sector or category."
            },
            "segmentName": {
              "type": "string",
              "example": "Total Fund",
              "description": "The name assigned to the sector or category."
            },
            "assetId": {
              "type": "string",
              "example": "1845402H4",
              "description": "The unique identifier for the asset."
            },
            "acquisitionDate": {
              "type": "string",
              "format": "date",
              "example": "2024-01-31",
              "description": "The acquisition date in YYYY-MM-DD format."
            },
            "periodIndex": {
              "type": "string",
              "pattern": "^[1-9]\\d*$",
              "example": "1",
              "description": "The index of the current period from the list provided in the input parameter <strong>periods</strong>. \nFor example, if the periods provided are ['YTD', 'ITD'], the indexes will be 1 and 2, respectively.\n"
            },
            "periodFromDate": {
              "type": "string",
              "format": "date",
              "example": "2012-10-01",
              "description": "The start date of the period, in YYYY-MM-DD format."
            },
            "periodToDate": {
              "type": "string",
              "format": "date",
              "example": "2012-10-31",
              "description": "The end date of the period, in YYYY-MM-DD format."
            },
            "periodFromDateAdjusted": {
              "type": "string",
              "enum": [
                "N",
                "Y"
              ],
              "example": "N",
              "description": "If <code>Y</code>, this indicates that the period's start date (<strong>fromDate</strong>) \nwas adjusted forward to match the account's inception date.\n"
            },
            "price": {
              "type": "string",
              "pattern": "^-?\\d*\\.?\\d{0,6}$",
              "example": "108.537",
              "description": "The unit price of the asset not including any accrued income."
            },
            "units": {
              "type": "string",
              "pattern": "^-?\\d*\\.?\\d{0,4}$",
              "example": "45.15",
              "description": "The number of shares held."
            },
            "principal": {
              "type": "string",
              "pattern": "^-?\\d*\\.?\\d{0,2}$",
              "example": "99.99",
              "description": "The principal or market value of the asset not including any accrued income."
            },
            "accrual": {
              "type": "string",
              "pattern": "^-?\\d*\\.?\\d{0,2}$",
              "example": "15.25",
              "description": "Income that has been accrued but not yet been paid."
            },
            "coupon": {
              "type": "string",
              "pattern": "^-?\\d*\\.?\\d{0,6}$",
              "example": "4.125",
              "description": "A coupon or coupon payment is the annual interest rate paid on a bond,\nexpressed as a percentage of the face value and paid from issue date until maturity.\n"
            },
            "cost": {
              "type": "string",
              "pattern": "^-?\\d*\\.?\\d{0,2}$",
              "example": "4999.5",
              "description": "The initial cost of the asset."
            },
            "daysToMaturity": {
              "type": "string",
              "pattern": "\\d",
              "example": "1322",
              "description": "The number of days until maturity."
            },
            "maturityDescription": {
              "type": "string",
              "example": "Short (1-5 Years)",
              "description": "The maturity description or category of the asset."
            },
            "maturityDate": {
              "type": "string",
              "format": "date",
              "example": "2024-01-31",
              "description": "The maturity date in YYYY-MM-DD format."
            },
            "yieldToMaturity": {
              "type": "string",
              "pattern": "^-?\\d*\\.?\\d{0,6}$",
              "example": "1.634",
              "description": "The initial cost of the asset."
            },
            "duration": {
              "type": "string",
              "pattern": "^-?\\d*\\.?\\d{0,6}$",
              "example": "3.378",
              "description": "The initial cost of the asset."
            },
            "quality": {
              "type": "string",
              "example": "AAA",
              "description": "The rating or quality of the asset."
            }
          }
        }
      },
      "HoldingsRequest": {
        "type": "object",
        "properties": {
          "account": {
            "type": "string",
            "pattern": "^[A-Z0-9-_.]{1,14}$",
            "example": "AGGAUTHORSCIEN",
            "description": "A unique account identifier."
          },
          "asOfDate": {
            "type": "string",
            "format": "date",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "example": "20121031",
            "description": "The 'as of' date for the reporting period in YYYYMMDD format. For the current processing month use the date of the last data load, otherwise use the end-of-month date."
          },
          "schema": {
            "type": "string",
            "enum": [
              "1",
              "2",
              "3"
            ],
            "example": "1",
            "description": "Selects segment schema 1, 2, or 3. Defaults to 1."
          }
        },
        "required": [
          "account",
          "asOfDate"
        ]
      },
      "HoldingsResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "accountId": {
              "type": "string",
              "minLength": 1,
              "maxLength": 14,
              "example": "AGGAUTHORSCIEN",
              "description": "The unique identifier for the account."
            },
            "accountName": {
              "type": "string",
              "minLength": 0,
              "maxLength": 100,
              "example": "Model Portfolio A",
              "description": "The name or title assigned to the constituent account.  Standard account names can be up to 50 characters.  Alternate reporting account names can be used (based on system settings) and can be up to 100 characters."
            },
            "accountInceptionDate": {
              "type": "string",
              "format": "date",
              "example": "2012-01-01",
              "description": "The date when the constituent account was established, in YYYY-MM-DD format."
            },
            "asOfDate": {
              "type": "string",
              "format": "date",
              "example": "2024-01-31",
              "description": "The reporting date, in YYYY-MM-DD format, reflecting the date specified in the request."
            },
            "toDate": {
              "type": "string",
              "format": "date",
              "example": "2012-10-31",
              "description": "The end date of the period, in YYYY-MM-DD format."
            },
            "fromDate": {
              "type": "string",
              "format": "date",
              "example": "2012-10-01",
              "description": "The start date of the period, in YYYY-MM-DD format."
            },
            "fromDateAdjusted": {
              "type": "string",
              "enum": [
                "N",
                "Y"
              ],
              "example": "N",
              "description": "If <code>Y</code>, this indicates that the period's start date (<strong>fromDate</strong>) \nwas adjusted forward to match the account's inception date.\n"
            },
            "classId": {
              "type": "string",
              "pattern": "^[A-Z0-9]{1,4}$",
              "example": "FX",
              "description": "The identifier of the asset class."
            },
            "className": {
              "type": "string",
              "example": "Fixed Income",
              "description": "The name assigned to the asset class."
            },
            "segmentId": {
              "type": "string",
              "pattern": "^[A-Z0-9]{1,4}$",
              "example": "01",
              "description": "The identifier of the sector or category."
            },
            "segmentName": {
              "type": "string",
              "example": "Total Fund",
              "description": "The name assigned to the sector or category."
            },
            "assetId": {
              "type": "string",
              "example": "1845402H4",
              "description": "The unique identifier for the asset."
            },
            "assetName": {
              "type": "string",
              "example": "CLEAR CRK ISD-REF 2.5 2/15/2021",
              "description": "The name assigned to the asset."
            },
            "ticker": {
              "type": "string",
              "example": "1845402H4",
              "description": "The ticker symbol assigned to the asset.  \nA ticker symbol or stock symbol is an abbreviation used to uniquely identify publicly traded shares of a particular stock on a particular stock market\n"
            },
            "cusip": {
              "type": "string",
              "example": "1845402H4",
              "description": "The CUSIP value assigned to the assetId.  CUSIP stands for Committee on Uniform Securities Identification Procedures1. \nThe Cusip is a unique identification number assigned to all stocks and registered bonds in the United States and Canada.\n"
            },
            "units": {
              "type": "string",
              "pattern": "^-?\\d*\\.?\\d{0,4}$",
              "example": "45.15",
              "description": "The number of shares held."
            },
            "principal": {
              "type": "string",
              "pattern": "^-?\\d*\\.?\\d{0,2}$",
              "example": "99.99",
              "description": "The principal or market value of the asset not including any accrued income."
            },
            "accrual": {
              "type": "string",
              "pattern": "^-?\\d*\\.?\\d{0,2}$",
              "example": "15.25",
              "description": "Income that has been accrued but not yet been paid."
            },
            "marketValue": {
              "type": "string",
              "pattern": "^-?\\d*\\.?\\d{0,2}$",
              "example": "99.99",
              "description": "The market or principal value of the asset including any accrued income."
            }
          }
        }
      },
      "InvestmentSummaryRequest": {
        "type": "object",
        "properties": {
          "account": {
            "type": "string",
            "pattern": "^[A-Z0-9-_.]{1,14}$",
            "example": "AGGAUTHORSCIEN",
            "description": "A unique account identifier."
          },
          "asOfDate": {
            "type": "string",
            "format": "date",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "example": "20121031",
            "description": "The 'as of' date for the reporting period in YYYYMMDD format. For the current processing month use the date of the last data load, otherwise use the end-of-month date."
          },
          "period": {
            "type": "string",
            "pattern": "^(?:(?:[1-9][0-9]{0,2})|(?:QTR[1-9][0-9]{0,2})|(?:CMP(?:[1-9]|1[0-2]))|(?:MPP[1-9][0-9]{0,2})|(?:FMP(?:[1-9]|1[0-2]))|(?:APP[1-9][0-9]{0,2})|(?:FAP[1-9][0-9]{0,2})|(?:MTD)|(?:YTD)|(?:FTD)|(?:FQD)|(?:FQD[1-9][0-9]{0,2})|(?:QTD)|(?:QTD[1-9][0-9]{0,2})|(?:ITD)|(?:PTP)|(?:SPD)|(?:ICM))$",
            "default": 1,
            "example": "YTD",
            "description": "A valid period to report on. Valid period values include:\n  - <code>`1-999`</code>\n  - <code>`QTR1-999`</code>\n  - <code>`CMP1-12`</code>\n  - <code>`MPP1-999`</code>\n  - <code>`FMP1-12`</code>\n  - <code>`APP1-999`</code>\n  - <code>`FAP1-999`</code>\n  - <code>`MTD`</code>\n  - <code>`YTD`</code>\n  - <code>`FTD`</code>\n  - <code>`FQD`</code>\n  - <code>`FQD1-999`</code>\n  - <code>`QTD`</code>\n  - <code>`QTD1-999`</code>\n  - <code>`ITD`</code>\n  - <code>`PTP`</code>\n  - <code>`SPD`</code>\n  - <code>`ICM`</code>\n"
          },
          "segment": {
            "type": "string",
            "pattern": "^[A-Z0-9]{1,4}$",
            "default": "01",
            "example": "01",
            "description": "The identifier of the model sector for the report."
          }
        },
        "required": [
          "account",
          "asOfDate"
        ]
      },
      "InvestmentSummaryResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "accountId": {
              "type": "string",
              "minLength": 1,
              "maxLength": 14,
              "example": "AGGAUTHORSCIEN",
              "description": "The unique identifier for the account."
            },
            "accountName": {
              "type": "string",
              "minLength": 0,
              "maxLength": 100,
              "example": "Model Portfolio A",
              "description": "The name or title assigned to the constituent account.  Standard account names can be up to 50 characters.  Alternate reporting account names can be used (based on system settings) and can be up to 100 characters."
            },
            "accountInceptionDate": {
              "type": "string",
              "format": "date",
              "example": "2012-01-01",
              "description": "The date when the constituent account was established, in YYYY-MM-DD format."
            },
            "asOfDate": {
              "type": "string",
              "format": "date",
              "example": "2024-01-31",
              "description": "The reporting date, in YYYY-MM-DD format, reflecting the date specified in the request."
            },
            "segmentId": {
              "type": "string",
              "example": "TF",
              "description": "The identifier for the segment. A segment can be either a benchmark, sector, or groups of sectors(asset class)"
            },
            "segmentName": {
              "type": "string",
              "example": "Total Fund",
              "description": "The benchmark or sector name assigned to the segment."
            },
            "segmentTFsec": {
              "type": "string",
              "example": "T",
              "description": "Identifies special characteristics of the sector.  The value <code>T<code> indicates that the sector is a total fund sector."
            },
            "period": {
              "type": "string",
              "example": "ITD",
              "description": "The period identifier from the input parameter <strong>periods</strong>, representing the defined start and end dates for the data record."
            },
            "periodFromDate": {
              "type": "string",
              "format": "date",
              "example": "2012-10-01",
              "description": "The start date of the period, in YYYY-MM-DD format."
            },
            "periodToDate": {
              "type": "string",
              "format": "date",
              "example": "2012-10-31",
              "description": "The end date of the period, in YYYY-MM-DD format."
            },
            "periodFromDateAdjusted": {
              "type": "string",
              "enum": [
                "N",
                "Y"
              ],
              "example": "N",
              "description": "If <code>Y</code>, this indicates that the period's start date (<strong>fromDate</strong>) \nwas adjusted forward to match the account's inception date.\n"
            },
            "beginMarket": {
              "type": "string",
              "pattern": "^-?\\d*\\.?\\d{0,2}$",
              "example": "2634780.85",
              "description": "The sum of the sector's asset values as of the end of the month prior to the period start date."
            },
            "beginAccrual": {
              "type": "string",
              "pattern": "^-?\\d*\\.?\\d{0,2}$",
              "example": "2634780.85",
              "description": "The sum of the sector's asset accrued values as of the end of the month prior to the period start date."
            },
            "beginNAV": {
              "type": "string",
              "pattern": "^-?\\d*\\.?\\d{0,2}$",
              "example": "2634780.85",
              "description": "The sum of the sector's asset values as of the end of the month prior to the period start date (periodBeginMarket) and the sum of the sector's asset accrued values as of the end of the month prior to the period start date (periodBeginAccrual)."
            },
            "fees": {
              "type": "string",
              "pattern": "^-?\\d*\\.?\\d{0,2}$",
              "example": "2634780.85",
              "description": "Account level fees for the period. If the segment is not a total fund sector then this value is <code>null</code>."
            },
            "contributions": {
              "type": "string",
              "pattern": "^-?\\d*\\.?\\d{0,2}$",
              "example": "2634780.85",
              "description": "The sum of the transactions identified as contributions for the sector and period."
            },
            "withdrawals": {
              "type": "string",
              "pattern": "^-?\\d*\\.?\\d{0,2}$",
              "example": "2634780.85",
              "description": "The sum of the transactions identified as withdrawals for the sector and period."
            },
            "withdrawalsLessFees": {
              "type": "string",
              "pattern": "^-?\\d*\\.?\\d{0,2}$",
              "example": "2634780.85",
              "description": "Period withdrawals less period fees.  This is calculated as (periodWithdrawals) - (periodFees).  If the segment is not a total fund sector then this value is <code>null</code>."
            },
            "netContributionsWithdrawals": {
              "type": "string",
              "pattern": "^-?\\d*\\.?\\d{0,2}$",
              "example": "2634780.85",
              "description": "Net contributions and withdrawls.  This is calculated as (periodContributions) - (periodWithdrawals)."
            },
            "netContributionsWithdrawalsLessFees": {
              "type": "string",
              "pattern": "^-?\\d*\\.?\\d{0,2}$",
              "example": "2634780.85",
              "description": "Net contributions and withdrawals less fees. This is calculated as (periodNetContributionsWithdrawals) - (periodFees).  If the segment is not a total fund sector then this value is <code>null</code>."
            },
            "income": {
              "type": "string",
              "pattern": "^-?\\d*\\.?\\d{0,2}$",
              "example": "2634780.85",
              "description": "The sum of the transactions identied as income received for the sector and period."
            },
            "incomeEarned": {
              "type": "string",
              "pattern": "^-?\\d*\\.?\\d{0,2}$",
              "example": "2634780.85",
              "description": "Income earned for the sector and period.  This is calculatd as (periodNetAccrual) + (periodIncome)."
            },
            "incomeDividends": {
              "type": "string",
              "pattern": "^-?\\d*\\.?\\d{0,2}$",
              "example": "2634780.85",
              "description": "The sum of transactions identified as dividend income for the account and period.  If the segment is not a total fund sector then this value is <code>null</code>."
            },
            "incomeInterest": {
              "type": "string",
              "pattern": "^-?\\d*\\.?\\d{0,2}$",
              "example": "2634780.85",
              "description": "The sum of transactions identified as interest income for the account and period.  If the segment is not a total fund sector then this value is <code>null</code>."
            },
            "incomeShortTerm": {
              "type": "string",
              "pattern": "^-?\\d*\\.?\\d{0,2}$",
              "example": "2634780.85",
              "description": "The sum of transactions identified as short term interest income for the account and period.  If the segment is not a total fund sector then this value is <code>null</code>."
            },
            "incomeOther": {
              "type": "string",
              "pattern": "^-?\\d*\\.?\\d{0,2}$",
              "example": "2634780.85",
              "description": "The sum of transactions identified as other income received (not dividend or short term interest) for the account and period.  If the segment is not a total fund sector then this value is <code>null</code>."
            },
            "endMarket": {
              "type": "string",
              "pattern": "^-?\\d*\\.?\\d{0,2}$",
              "example": "2634780.85",
              "description": "The sum of the sector's asset values at the end of the period."
            },
            "endAccrual": {
              "type": "string",
              "pattern": "^-?\\d*\\.?\\d{0,2}$",
              "example": "2634780.85",
              "description": "The sum of the sector's asset accrued values at the end of the period."
            },
            "netAccrual": {
              "type": "string",
              "pattern": "^-?\\d*\\.?\\d{0,2}$",
              "example": "2634780.85",
              "description": "Net accruals for the sector and period. This is calculated as (periodEndAccrual - (periodBeginAccrual)."
            },
            "endNAV": {
              "type": "string",
              "pattern": "^-?\\d*\\.?\\d{0,2}$",
              "example": "2634780.85",
              "description": "The sum of the sector's asset values at the end of the period (periodEndMarket) and the sum of the sector's asset accrued values at the end of the period (periodEndAccrual)."
            },
            "gainLoss": {
              "type": "string",
              "pattern": "^-?\\d*\\.?\\d{0,2}$",
              "example": "2634780.85",
              "description": "The change in market value, excluding accruals, for the period."
            },
            "gainLossWithAccrual": {
              "type": "string",
              "pattern": "^-?\\d*\\.?\\d{0,2}$",
              "example": "2634780.85",
              "description": "The change in market value and accruals over the period."
            },
            "shortRealizedGainLoss": {
              "type": "string",
              "pattern": "^-?\\d*\\.?\\d{0,2}$",
              "example": "2634780.85",
              "description": "Short term realized capital gains and losses for the period.  Short-term capital gains (losses) are profits (losses) realized from the sale of personal or investment property that has been held for one year or less.  If the segment is not a total fund sector then this value is <code>null</code>."
            },
            "longRealizedGainLoss": {
              "type": "string",
              "pattern": "^-?\\d*\\.?\\d{0,2}$",
              "example": "2634780.85",
              "description": "Long term realized capital gains and losses for the period.  Long-term capital gains (losses) are profits (losses) realized from the sale of personal or investment property that has been held for more than one year.  If the segment is not a total fund sector then this value is <code>null</code>."
            },
            "totalRealizedGainLoss": {
              "type": "string",
              "pattern": "^-?\\d*\\.?\\d{0,2}$",
              "example": "2634780.85",
              "description": "Realized capital gains and losses for the period.  This is calculated as (periodShortRealizedGainLoss) - (periodLongRealizedGainLoss). If the segment is not a total fund sector then this value is <code>null</code>."
            },
            "totalInvestmentReturn": {
              "type": "string",
              "pattern": "^-?\\d*\\.?\\d{0,2}$",
              "example": "2634780.85",
              "description": "Total Investment Return.  This is calculated as (GainLossWithAccrual) + (periodIncome)."
            }
          }
        }
      },
      "LargestHoldingsRequest": {
        "type": "object",
        "properties": {
          "account": {
            "type": "string",
            "pattern": "^[A-Z0-9-_.]{1,14}$",
            "example": "AGGAUTHORSCIEN",
            "description": "A unique account identifier."
          },
          "asOfDate": {
            "type": "string",
            "format": "date",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "example": "20121031",
            "description": "The 'as of' date for the reporting period in YYYYMMDD format. For the current processing month use the date of the last data load, otherwise use the end-of-month date."
          },
          "period": {
            "type": "string",
            "pattern": "^(?:(?:[1-9][0-9]{0,2})|(?:QTR[1-9][0-9]{0,2})|(?:CMP(?:[1-9]|1[0-2]))|(?:MPP[1-9][0-9]{0,2})|(?:FMP(?:[1-9]|1[0-2]))|(?:APP[1-9][0-9]{0,2})|(?:FAP[1-9][0-9]{0,2})|(?:MTD)|(?:YTD)|(?:FTD)|(?:FQD)|(?:FQD[1-9][0-9]{0,2})|(?:QTD)|(?:QTD[1-9][0-9]{0,2})|(?:ITD)|(?:PTP)|(?:SPD)|(?:ICM))$",
            "default": 1,
            "example": "YTD",
            "description": "A valid period to report on. Valid period values include:\n  - <code>`1-999`</code>\n  - <code>`QTR1-999`</code>\n  - <code>`CMP1-12`</code>\n  - <code>`MPP1-999`</code>\n  - <code>`FMP1-12`</code>\n  - <code>`APP1-999`</code>\n  - <code>`FAP1-999`</code>\n  - <code>`MTD`</code>\n  - <code>`YTD`</code>\n  - <code>`FTD`</code>\n  - <code>`FQD`</code>\n  - <code>`FQD1-999`</code>\n  - <code>`QTD`</code>\n  - <code>`QTD1-999`</code>\n  - <code>`ITD`</code>\n  - <code>`PTP`</code>\n  - <code>`SPD`</code>\n  - <code>`ICM`</code>\n"
          },
          "recordLimit": {
            "default": 10,
            "type": "string",
            "pattern": "^[1-9]\\d*$",
            "example": "10",
            "description": "The maximum number of records to return. Assign 0 for no record limit."
          }
        },
        "required": [
          "accounts",
          "asOfDate"
        ]
      },
      "LargestHoldingsResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "accountId": {
              "type": "string",
              "minLength": 1,
              "maxLength": 14,
              "example": "AGGAUTHORSCIEN",
              "description": "The unique identifier for the account."
            },
            "accountName": {
              "type": "string",
              "minLength": 0,
              "maxLength": 100,
              "example": "Model Portfolio A",
              "description": "The name or title assigned to the constituent account.  Standard account names can be up to 50 characters.  Alternate reporting account names can be used (based on system settings) and can be up to 100 characters."
            },
            "accountInceptionDate": {
              "type": "string",
              "format": "date",
              "example": "2012-01-01",
              "description": "The date when the constituent account was established, in YYYY-MM-DD format."
            },
            "asOfDate": {
              "type": "string",
              "format": "date",
              "example": "2024-01-31",
              "description": "The reporting date, in YYYY-MM-DD format, reflecting the date specified in the request."
            },
            "assetId": {
              "type": "string",
              "example": "1845402H4",
              "description": "The unique identifier for the asset."
            },
            "assetName": {
              "type": "string",
              "example": "CLEAR CRK ISD-REF 2.5 2/15/2021",
              "description": "The name assigned to the asset."
            },
            "ticker": {
              "type": "string",
              "example": "1845402H4",
              "description": "The ticker symbol assigned to the asset.  \nA ticker symbol or stock symbol is an abbreviation used to uniquely identify publicly traded shares of a particular stock on a particular stock market\n"
            },
            "cusip": {
              "type": "string",
              "example": "1845402H4",
              "description": "The CUSIP value assigned to the assetId.  CUSIP stands for Committee on Uniform Securities Identification Procedures1. \nThe Cusip is a unique identification number assigned to all stocks and registered bonds in the United States and Canada.\n"
            },
            "periodIndex": {
              "type": "string",
              "pattern": "^[1-9]\\d*$",
              "example": "1",
              "description": "The index of the current period from the list provided in the input parameter <strong>periods</strong>. \nFor example, if the periods provided are ['YTD', 'ITD'], the indexes will be 1 and 2, respectively.\n"
            },
            "period": {
              "type": "string",
              "example": "ITD",
              "description": "The period identifier from the input parameter <strong>periods</strong>, representing the defined start and end dates for the data record."
            },
            "periodFromDate": {
              "type": "string",
              "format": "date",
              "example": "2012-10-01",
              "description": "The start date of the period, in YYYY-MM-DD format."
            },
            "periodToDate": {
              "type": "string",
              "format": "date",
              "example": "2012-10-31",
              "description": "The end date of the period, in YYYY-MM-DD format."
            },
            "periodFromDateAdjusted": {
              "type": "string",
              "enum": [
                "N",
                "Y"
              ],
              "example": "N",
              "description": "If <code>Y</code>, this indicates that the period's start date (<strong>fromDate</strong>) \nwas adjusted forward to match the account's inception date.\n"
            },
            "marketValue": {
              "type": "number",
              "format": "float",
              "example": 26877.69,
              "description": "The asset's market value including any accrued earnings as of the specified date."
            },
            "allocation": {
              "type": "number",
              "format": "float",
              "example": 1.734406,
              "description": "The allocation percentage of the asset as of the specified date."
            },
            "totalUVR": {
              "type": "number",
              "format": "float",
              "example": 1.007632,
              "description": "The asset's rate of return for the period, expressed as a unit value ratio (UVR)."
            },
            "totalROR": {
              "type": "number",
              "format": "float",
              "example": 0.76,
              "description": "The asset's annualized rate of return for the period, expressed as a percentage (%)."
            }
          }
        }
      },
      "RiskStatisticsRequest": {
        "type": "object",
        "properties": {
          "account": {
            "type": "string",
            "pattern": "^[A-Z0-9-_.]{1,14}$",
            "example": "AGGAUTHORSCIEN",
            "description": "A unique account identifier."
          },
          "asOfDate": {
            "type": "string",
            "format": "date",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "example": "20121031",
            "description": "The 'as of' date for the reporting period in YYYYMMDD format. For the current processing month use the date of the last data load, otherwise use the end-of-month date."
          },
          "period": {
            "type": "string",
            "pattern": "^(?:(?:[1-9][0-9]{0,2})|(?:QTR[1-9][0-9]{0,2})|(?:CMP(?:[1-9]|1[0-2]))|(?:MPP[1-9][0-9]{0,2})|(?:FMP(?:[1-9]|1[0-2]))|(?:APP[1-9][0-9]{0,2})|(?:FAP[1-9][0-9]{0,2})|(?:MTD)|(?:YTD)|(?:FTD)|(?:FQD)|(?:FQD[1-9][0-9]{0,2})|(?:QTD)|(?:QTD[1-9][0-9]{0,2})|(?:ITD)|(?:PTP)|(?:SPD)|(?:ICM))$",
            "default": 1,
            "example": "YTD",
            "description": "A valid period to report on. Valid period values include:\n  - <code>`1-999`</code>\n  - <code>`QTR1-999`</code>\n  - <code>`CMP1-12`</code>\n  - <code>`MPP1-999`</code>\n  - <code>`FMP1-12`</code>\n  - <code>`APP1-999`</code>\n  - <code>`FAP1-999`</code>\n  - <code>`MTD`</code>\n  - <code>`YTD`</code>\n  - <code>`FTD`</code>\n  - <code>`FQD`</code>\n  - <code>`FQD1-999`</code>\n  - <code>`QTD`</code>\n  - <code>`QTD1-999`</code>\n  - <code>`ITD`</code>\n  - <code>`PTP`</code>\n  - <code>`SPD`</code>\n  - <code>`ICM`</code>\n"
          },
          "segment": {
            "type": "string",
            "pattern": "^[A-Z0-9]{1,4}$",
            "default": "01",
            "example": "01",
            "description": "The identifier of the model sector for the report."
          },
          "benchmark": {
            "type": "string",
            "pattern": "^[A-Z0-9]{1,4}$",
            "example": "01",
            "description": "The identifier of the benchmark to compare with the selected model sector."
          },
          "benchmarkRiskFree": {
            "type": "string",
            "pattern": "^[A-Z0-9]{1,4}$",
            "example": "42",
            "description": "A benchmark representing the risk-free rate of return, used in the Sharpe and Treynor ratio calculations."
          }
        },
        "required": [
          "accounts",
          "asOfDate",
          "segment",
          "benchmark",
          "benchmarkRiskFree"
        ]
      },
      "RiskStatisticsResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "accountId": {
              "type": "string",
              "minLength": 1,
              "maxLength": 14,
              "example": "AGGAUTHORSCIEN",
              "description": "The unique identifier for the account."
            },
            "accountName": {
              "type": "string",
              "minLength": 0,
              "maxLength": 100,
              "example": "Model Portfolio A",
              "description": "The name or title assigned to the constituent account.  Standard account names can be up to 50 characters.  Alternate reporting account names can be used (based on system settings) and can be up to 100 characters."
            },
            "accountInceptionDate": {
              "type": "string",
              "format": "date",
              "example": "2012-01-01",
              "description": "The date when the constituent account was established, in YYYY-MM-DD format."
            },
            "asOfDate": {
              "type": "string",
              "format": "date",
              "example": "2024-01-31",
              "description": "The reporting date, in YYYY-MM-DD format, reflecting the date specified in the request."
            },
            "fromDate": {
              "type": "string",
              "format": "date",
              "example": "2012-10-01",
              "description": "The start date of the period, in YYYY-MM-DD format."
            },
            "toDate": {
              "type": "string",
              "format": "date",
              "example": "2012-10-31",
              "description": "The end date of the period, in YYYY-MM-DD format."
            },
            "segmentFromDate": {
              "type": "string",
              "format": "date",
              "example": "2012-10-01",
              "description": "<code>?</code>Selected time period start date. If the start date of the specified period preceeds the account's inception then this reflects the inception date."
            },
            "segmentId": {
              "type": "string",
              "example": "TF",
              "description": "The identifier for the segment. A segment can be either a benchmark, sector, or groups of sectors(asset class)"
            },
            "segmentName": {
              "type": "string",
              "example": "Total Fund",
              "description": "The benchmark or sector name assigned to the segment."
            },
            "segmentType": {
              "type": "string",
              "enum": [
                "benchmark",
                "sector"
              ],
              "example": "sector",
              "description": "Indicates whether the data record represents a benchmark or a sector."
            },
            "statisticType": {
              "type": "string",
              "example": "BETA",
              "description": "A unique indicator for the risk statistic returned."
            },
            "statisticDescription": {
              "type": "string",
              "example": "Beta",
              "description": "The name or description of the risk statistic."
            },
            "statisticValue": {
              "type": "number",
              "format": "float",
              "example": 0.8,
              "description": "The value of the risk statistic."
            }
          }
        }
      },
      "SectorAllocationRequest": {
        "type": "object",
        "properties": {
          "account": {
            "type": "string",
            "pattern": "^[A-Z0-9-_.]{1,14}$",
            "example": "AGGAUTHORSCIEN",
            "description": "A unique account identifier."
          },
          "asOfDate": {
            "type": "string",
            "format": "date",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "example": "20121031",
            "description": "The 'as of' date for the reporting period in YYYYMMDD format. For the current processing month use the date of the last data load, otherwise use the end-of-month date."
          },
          "periods": {
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^(?:(?:[1-9][0-9]{0,2})|(?:QTR[1-9][0-9]{0,2})|(?:CMP(?:[1-9]|1[0-2]))|(?:MPP[1-9][0-9]{0,2})|(?:FMP(?:[1-9]|1[0-2]))|(?:APP[1-9][0-9]{0,2})|(?:FAP[1-9][0-9]{0,2})|(?:MTD)|(?:YTD)|(?:FTD)|(?:FQD)|(?:FQD[1-9][0-9]{0,2})|(?:QTD)|(?:QTD[1-9][0-9]{0,2})|(?:ITD)|(?:PTP)|(?:SPD)|(?:ICM)|(?:CON))$"
            },
            "default": [
              "1"
            ],
            "example": [
              "1",
              "ITD"
            ],
            "description": "A list of valid periods to report on. Valid period values include:\n- <code>`1-999`</code>\n- <code>`QTR1-999`</code>\n- <code>`CMP1-12`</code>\n- <code>`MPP1-999`</code>\n- <code>`FMP1-12`</code>\n- <code>`APP1-999`</code>\n- <code>`FAP1-999`</code>\n- <code>`MTD`</code>\n- <code>`YTD`</code>\n- <code>`FTD`</code>\n- <code>`FQD`</code>\n- <code>`FQD1-999`</code>\n- <code>`QTD`</code>\n- <code>`QTD1-999`</code>\n- <code>`ITD`</code>\n- <code>`PTP`</code>\n- <code>`SPD`</code>\n- <code>`ICM`</code>\n- <code>`CON`</code>\n"
          },
          "segments": {
            "description": "A list of sectors identifiers for which to retrieve data.",
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^[A-Z0-9]{1,4}$"
            },
            "example": [
              "EQ",
              "01"
            ]
          }
        },
        "required": [
          "account",
          "asOfDate",
          "segments"
        ]
      },
      "SectorAllocationResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "accountId": {
              "type": "string",
              "minLength": 1,
              "maxLength": 14,
              "example": "AGGAUTHORSCIEN",
              "description": "The unique identifier for the account."
            },
            "accountName": {
              "type": "string",
              "minLength": 0,
              "maxLength": 100,
              "example": "Model Portfolio A",
              "description": "The name or title assigned to the constituent account.  Standard account names can be up to 50 characters.  Alternate reporting account names can be used (based on system settings) and can be up to 100 characters."
            },
            "accountInceptionDate": {
              "type": "string",
              "format": "date",
              "example": "2012-01-01",
              "description": "The date when the constituent account was established, in YYYY-MM-DD format."
            },
            "asOfDate": {
              "type": "string",
              "format": "date",
              "example": "2024-01-31",
              "description": "The reporting date, in YYYY-MM-DD format, reflecting the date specified in the request."
            },
            "segmentId": {
              "type": "string",
              "example": "TF",
              "description": "The identifier for the segment. A segment can be either a benchmark, sector, or groups of sectors(asset class)"
            },
            "segmentName": {
              "type": "string",
              "example": "Total Fund",
              "description": "The benchmark or sector name assigned to the segment."
            },
            "periodIndex": {
              "type": "string",
              "pattern": "^[1-9]\\d*$",
              "example": "1",
              "description": "The index of the current period from the list provided in the input parameter <strong>periods</strong>. \nFor example, if the periods provided are ['YTD', 'ITD'], the indexes will be 1 and 2, respectively.\n"
            },
            "period": {
              "type": "string",
              "example": "ITD",
              "description": "The period identifier from the input parameter <strong>periods</strong>, representing the defined start and end dates for the data record."
            },
            "periodFromDate": {
              "type": "string",
              "format": "date",
              "example": "2012-10-01",
              "description": "The start date of the period, in YYYY-MM-DD format."
            },
            "periodFromDateAdjusted": {
              "type": "string",
              "enum": [
                "N",
                "Y"
              ],
              "example": "N",
              "description": "If <code>Y</code>, this indicates that the period's start date (<strong>fromDate</strong>) \nwas adjusted forward to match the account's inception date.\n"
            },
            "periodTotalUVR": {
              "type": "string",
              "pattern": "^-?\\d*\\.?\\d{0,6}$",
              "example": "0.981646",
              "description": "The segment's rate of return for the period, expressed as a unit value ratio (UVR)."
            },
            "periodTotalROR": {
              "type": "string",
              "pattern": "^-?\\d*\\.?\\d{0,4}$",
              "example": "-1.8400",
              "description": "The segment's annualized rate of return for the period, expressed as a percentage (%)."
            }
          }
        }
      },
      "SectorInceptionRequest": {
        "type": "object",
        "properties": {
          "account": {
            "type": "string",
            "pattern": "^[A-Z0-9-_.]{1,14}$",
            "example": "AGGAUTHORSCIEN",
            "description": "A unique account identifier."
          },
          "asOfDate": {
            "type": "string",
            "format": "date",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "example": "20121031",
            "description": "The 'as of' date for the reporting period in YYYYMMDD format. For the current processing month use the date of the last data load, otherwise use the end-of-month date."
          },
          "periods": {
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^(?:(?:[1-9][0-9]{0,2})|(?:QTR[1-9][0-9]{0,2})|(?:CMP(?:[1-9]|1[0-2]))|(?:MPP[1-9][0-9]{0,2})|(?:FMP(?:[1-9]|1[0-2]))|(?:APP[1-9][0-9]{0,2})|(?:FAP[1-9][0-9]{0,2})|(?:MTD)|(?:YTD)|(?:FTD)|(?:FQD)|(?:FQD[1-9][0-9]{0,2})|(?:QTD)|(?:QTD[1-9][0-9]{0,2})|(?:ITD)|(?:PTP)|(?:SPD)|(?:ICM)|(?:CON))$"
            },
            "default": [
              "1"
            ],
            "example": [
              "1",
              "ITD"
            ],
            "description": "A list of valid periods to report on. Valid period values include:\n- <code>`1-999`</code>\n- <code>`QTR1-999`</code>\n- <code>`CMP1-12`</code>\n- <code>`MPP1-999`</code>\n- <code>`FMP1-12`</code>\n- <code>`APP1-999`</code>\n- <code>`FAP1-999`</code>\n- <code>`MTD`</code>\n- <code>`YTD`</code>\n- <code>`FTD`</code>\n- <code>`FQD`</code>\n- <code>`FQD1-999`</code>\n- <code>`QTD`</code>\n- <code>`QTD1-999`</code>\n- <code>`ITD`</code>\n- <code>`PTP`</code>\n- <code>`SPD`</code>\n- <code>`ICM`</code>\n- <code>`CON`</code>\n"
          },
          "segments": {
            "description": "A list of sectors identifiers for which to retrieve data.",
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^[A-Z0-9]{1,4}$"
            },
            "example": [
              "EQ",
              "01"
            ]
          },
          "benchmarks": {
            "description": "An optional list of benchmark identifiers.",
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^[A-Z0-9]{1,4}$"
            },
            "example": [
              "01",
              "42"
            ]
          }
        },
        "required": [
          "account",
          "asOfDate"
        ]
      },
      "SectorInceptionResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "accountId": {
              "type": "string",
              "minLength": 1,
              "maxLength": 14,
              "example": "AGGAUTHORSCIEN",
              "description": "The unique identifier for the underlying constituent account.  \nThe composite account can also be included and is identified as the accountId matching the user input accountId (or without the AGG/AGE prefix being equal to the compositeId).  \n"
            },
            "accountName": {
              "type": "string",
              "minLength": 0,
              "maxLength": 100,
              "example": "Model Portfolio A",
              "description": "The name or title assigned to the constituent account.  Standard account names can be up to 50 characters.  Alternate reporting account names can be used (based on system settings) and can be up to 100 characters."
            },
            "accountInceptionDate": {
              "type": "string",
              "format": "date",
              "example": "2012-01-01",
              "description": "The date when the constituent account was established, in YYYY-MM-DD format."
            },
            "asOfDate": {
              "type": "string",
              "format": "date",
              "example": "2024-01-31",
              "description": "The reporting date, in YYYY-MM-DD format, reflecting the date specified in the request."
            },
            "segmentId": {
              "type": "string",
              "example": "TF",
              "description": "The identifier for the segment. A segment can be either a benchmark, sector, or groups of sectors(asset class)"
            },
            "segmentName": {
              "type": "string",
              "example": "Total Fund",
              "description": "The benchmark or sector name assigned to the segment."
            },
            "segmentType": {
              "type": "string",
              "enum": [
                "benchmark",
                "sector"
              ],
              "example": "sector",
              "description": "Indicates whether the data record represents a benchmark or a sector."
            },
            "segmentInceptionDate": {
              "type": "string",
              "format": "date",
              "example": "2024-01-31",
              "description": "The inception date of the segment in YYYY-MM-DD format."
            },
            "sectorMarketValue": {
              "type": "string",
              "pattern": "^-?\\d*\\.?\\d{0,2}$",
              "example": "2638428.45",
              "description": "The sum of the sector's asset values and accrued earnings as of the specified date. If the segment is a benchmark, this value is <code>null</code>."
            },
            "periodIndex": {
              "type": "string",
              "pattern": "^[1-9]\\d*$",
              "example": "1",
              "description": "The index of the current period from the list provided in the input parameter <strong>periods</strong>. \nFor example, if the periods provided are ['YTD', 'ITD'], the indexes will be 1 and 2, respectively.\n"
            },
            "period": {
              "type": "string",
              "example": "ITD",
              "description": "The period identifier from the input parameter <strong>periods</strong>, representing the defined start and end dates for the data record."
            },
            "periodFromDate": {
              "type": "string",
              "format": "date",
              "example": "2012-10-01",
              "description": "The start date of the period, in YYYY-MM-DD format."
            },
            "periodToDate": {
              "type": "string",
              "format": "date",
              "example": "2012-10-31",
              "description": "The end date of the period, in YYYY-MM-DD format."
            },
            "periodFromDateAdjusted": {
              "type": "string",
              "enum": [
                "N",
                "Y"
              ],
              "example": "N",
              "description": "If <code>Y</code>, this indicates that the period's start date (<strong>fromDate</strong>) \nwas adjusted forward to match the account's inception date.\n"
            },
            "periodTotalUVR": {
              "type": "string",
              "pattern": "^-?\\d*\\.?\\d{0,6}$",
              "example": "0.981646",
              "description": "The segment's rate of return for the period, expressed as a unit value ratio (UVR)."
            },
            "periodTotalROR": {
              "type": "string",
              "pattern": "^-?\\d*\\.?\\d{0,4}$",
              "example": "-1.8400",
              "description": "The segment's annualized rate of return for the period, expressed as a percentage (%)."
            }
          }
        }
      },
      "TopPerformersRequest": {
        "type": "object",
        "properties": {
          "account": {
            "type": "string",
            "pattern": "^[A-Z0-9-_.]{1,14}$",
            "example": "AGGAUTHORSCIEN",
            "description": "A unique account identifier."
          },
          "asOfDate": {
            "type": "string",
            "format": "date",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "example": "20121031",
            "description": "The 'as of' date for the reporting period in YYYYMMDD format. For the current processing month use the date of the last data load, otherwise use the end-of-month date."
          },
          "period": {
            "type": "string",
            "pattern": "^(?:(?:[1-9][0-9]{0,2})|(?:QTR[1-9][0-9]{0,2})|(?:CMP(?:[1-9]|1[0-2]))|(?:MPP[1-9][0-9]{0,2})|(?:FMP(?:[1-9]|1[0-2]))|(?:APP[1-9][0-9]{0,2})|(?:FAP[1-9][0-9]{0,2})|(?:MTD)|(?:YTD)|(?:FTD)|(?:FQD)|(?:FQD[1-9][0-9]{0,2})|(?:QTD)|(?:QTD[1-9][0-9]{0,2})|(?:ITD)|(?:PTP)|(?:SPD)|(?:ICM))$",
            "default": 1,
            "example": "YTD",
            "description": "A valid period to report on. Valid period values include:\n  - <code>`1-999`</code>\n  - <code>`QTR1-999`</code>\n  - <code>`CMP1-12`</code>\n  - <code>`MPP1-999`</code>\n  - <code>`FMP1-12`</code>\n  - <code>`APP1-999`</code>\n  - <code>`FAP1-999`</code>\n  - <code>`MTD`</code>\n  - <code>`YTD`</code>\n  - <code>`FTD`</code>\n  - <code>`FQD`</code>\n  - <code>`FQD1-999`</code>\n  - <code>`QTD`</code>\n  - <code>`QTD1-999`</code>\n  - <code>`ITD`</code>\n  - <code>`PTP`</code>\n  - <code>`SPD`</code>\n  - <code>`ICM`</code>\n"
          },
          "recordLimit": {
            "default": 10,
            "type": "string",
            "pattern": "^[1-9]\\d*$",
            "example": "10",
            "description": "The maximum number of records to return. Assign 0 for no record limit."
          }
        },
        "required": [
          "accounts",
          "asOfDate"
        ]
      },
      "TopPerformersResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "accountId": {
              "type": "string",
              "minLength": 1,
              "maxLength": 14,
              "example": "AGGAUTHORSCIEN",
              "description": "The unique identifier for the account."
            },
            "accountName": {
              "type": "string",
              "minLength": 0,
              "maxLength": 100,
              "example": "Model Portfolio A",
              "description": "The name or title assigned to the constituent account.  Standard account names can be up to 50 characters.  Alternate reporting account names can be used (based on system settings) and can be up to 100 characters."
            },
            "accountInceptionDate": {
              "type": "string",
              "format": "date",
              "example": "2012-01-01",
              "description": "The date when the constituent account was established, in YYYY-MM-DD format."
            },
            "asOfDate": {
              "type": "string",
              "format": "date",
              "example": "2024-01-31",
              "description": "The reporting date, in YYYY-MM-DD format, reflecting the date specified in the request."
            },
            "assetId": {
              "type": "string",
              "example": "1845402H4",
              "description": "The unique identifier for the asset."
            },
            "assetName": {
              "type": "string",
              "example": "CLEAR CRK ISD-REF 2.5 2/15/2021",
              "description": "The name assigned to the asset."
            },
            "ticker": {
              "type": "string",
              "example": "1845402H4",
              "description": "The ticker symbol assigned to the asset.  \nA ticker symbol or stock symbol is an abbreviation used to uniquely identify publicly traded shares of a particular stock on a particular stock market\n"
            },
            "cusip": {
              "type": "string",
              "example": "1845402H4",
              "description": "The CUSIP value assigned to the assetId.  CUSIP stands for Committee on Uniform Securities Identification Procedures1. \nThe Cusip is a unique identification number assigned to all stocks and registered bonds in the United States and Canada.\n"
            },
            "periodIndex": {
              "type": "string",
              "pattern": "^[1-9]\\d*$",
              "example": "1",
              "description": "The index of the current period from the list provided in the input parameter <strong>periods</strong>. \nFor example, if the periods provided are ['YTD', 'ITD'], the indexes will be 1 and 2, respectively.\n"
            },
            "period": {
              "type": "string",
              "example": "ITD",
              "description": "The period identifier from the input parameter <strong>periods</strong>, representing the defined start and end dates for the data record."
            },
            "periodFromDate": {
              "type": "string",
              "format": "date",
              "example": "2012-10-01",
              "description": "The start date of the period, in YYYY-MM-DD format."
            },
            "periodToDate": {
              "type": "string",
              "format": "date",
              "example": "2012-10-31",
              "description": "The end date of the period, in YYYY-MM-DD format."
            },
            "periodFromDateAdjusted": {
              "type": "string",
              "enum": [
                "N",
                "Y"
              ],
              "example": "N",
              "description": "If <code>Y</code>, this indicates that the period's start date (<strong>fromDate</strong>) \nwas adjusted forward to match the account's inception date.\n"
            },
            "marketValue": {
              "type": "string",
              "pattern": "^-?\\d*\\.?\\d{0,2}$",
              "example": "26877.69",
              "description": "The asset's market value including any accrued earnings as of the specified date."
            },
            "allocation": {
              "type": "string",
              "pattern": "^-?\\d*\\.?\\d{0,6}$",
              "example": "1.734406",
              "description": "The allocation of the asset as of the specified date, expressed as a percentage (%)."
            },
            "totalUVR": {
              "type": "string",
              "pattern": "^-?\\d*\\.?\\d{0,6}$",
              "example": "1.007632",
              "description": "The asset's rate of return for the period, expressed as a unit value ratio (UVR)."
            },
            "totalROR": {
              "type": "string",
              "pattern": "^-?\\d*\\.?\\d{0,4}$",
              "example": "0.76",
              "description": "The asset's annualized rate of return for the period, expressed as a percentage (%)."
            }
          }
        }
      },
      "TransactionsRequest": {
        "type": "object",
        "properties": {
          "account": {
            "type": "string",
            "pattern": "^[A-Z0-9-_.]{1,14}$",
            "example": "AGGAUTHORSCIEN",
            "description": "A unique account identifier."
          },
          "asOfDate": {
            "type": "string",
            "format": "date",
            "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
            "example": "20121031",
            "description": "The 'as of' date for the reporting period in YYYYMMDD format. For the current processing month use the date of the last data load, otherwise use the end-of-month date."
          },
          "period": {
            "type": "string",
            "pattern": "^(?:(?:[1-9][0-9]{0,2})|(?:QTR[1-9][0-9]{0,2})|(?:CMP(?:[1-9]|1[0-2]))|(?:MPP[1-9][0-9]{0,2})|(?:FMP(?:[1-9]|1[0-2]))|(?:APP[1-9][0-9]{0,2})|(?:FAP[1-9][0-9]{0,2})|(?:MTD)|(?:YTD)|(?:FTD)|(?:FQD)|(?:FQD[1-9][0-9]{0,2})|(?:QTD)|(?:QTD[1-9][0-9]{0,2})|(?:ITD)|(?:PTP)|(?:SPD)|(?:ICM))$",
            "default": 1,
            "example": "YTD",
            "description": "A valid period to report on. Valid period values include:\n  - <code>`1-999`</code>\n  - <code>`QTR1-999`</code>\n  - <code>`CMP1-12`</code>\n  - <code>`MPP1-999`</code>\n  - <code>`FMP1-12`</code>\n  - <code>`APP1-999`</code>\n  - <code>`FAP1-999`</code>\n  - <code>`MTD`</code>\n  - <code>`YTD`</code>\n  - <code>`FTD`</code>\n  - <code>`FQD`</code>\n  - <code>`FQD1-999`</code>\n  - <code>`QTD`</code>\n  - <code>`QTD1-999`</code>\n  - <code>`ITD`</code>\n  - <code>`PTP`</code>\n  - <code>`SPD`</code>\n  - <code>`ICM`</code>\n"
          }
        },
        "required": [
          "account",
          "asOfDate"
        ]
      },
      "TransactionsResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "accountId": {
              "type": "string",
              "minLength": 1,
              "maxLength": 14,
              "example": "AGGAUTHORSCIEN",
              "description": "The unique identifier for the account."
            },
            "accountName": {
              "type": "string",
              "minLength": 0,
              "maxLength": 100,
              "example": "Model Portfolio A",
              "description": "The name or title assigned to the constituent account.  Standard account names can be up to 50 characters.  Alternate reporting account names can be used (based on system settings) and can be up to 100 characters."
            },
            "accountInceptionDate": {
              "type": "string",
              "format": "date",
              "example": "2012-01-01",
              "description": "The date when the constituent account was established, in YYYY-MM-DD format."
            },
            "asOfDate": {
              "type": "string",
              "format": "date",
              "example": "2024-01-31",
              "description": "The reporting date, in YYYY-MM-DD format, reflecting the date specified in the request."
            },
            "toDate": {
              "type": "string",
              "format": "date",
              "example": "2012-10-31",
              "description": "The end date of the period, in YYYY-MM-DD format."
            },
            "fromDate": {
              "type": "string",
              "format": "date",
              "example": "2012-10-01",
              "description": "The start date of the period, in YYYY-MM-DD format."
            },
            "fromDateAdjusted": {
              "type": "string",
              "enum": [
                "N",
                "Y"
              ],
              "example": "N",
              "description": "If <code>Y</code>, this indicates that the period's start date (<strong>fromDate</strong>) \nwas adjusted forward to match the account's inception date.\n"
            },
            "classId": {
              "type": "string",
              "pattern": "^[A-Z0-9]{1,4}$",
              "example": "FX",
              "description": "The identifier of the asset class."
            },
            "className": {
              "type": "string",
              "example": "Fixed Income",
              "description": "The name assigned to the asset class."
            },
            "segmentId": {
              "type": "string",
              "pattern": "^[A-Z0-9]{1,4}$",
              "example": "01",
              "description": "The identifier of the sector or category."
            },
            "segmentName": {
              "type": "string",
              "example": "Total Fund",
              "description": "The name assigned to the sector or category."
            },
            "assetId": {
              "type": "string",
              "example": "1845402H4",
              "description": "The unique identifier for the asset."
            },
            "assetName": {
              "type": "string",
              "example": "CLEAR CRK ISD-REF 2.5 2/15/2021",
              "description": "The name assigned to the asset."
            },
            "ticker": {
              "type": "string",
              "example": "1845402H4",
              "description": "The ticker symbol assigned to the asset.  \nA ticker symbol or stock symbol is an abbreviation used to uniquely identify publicly traded shares of a particular stock on a particular stock market\n"
            },
            "cusip": {
              "type": "string",
              "example": "1845402H4",
              "description": "The CUSIP value assigned to the assetId.  CUSIP stands for Committee on Uniform Securities Identification Procedures1. \nThe Cusip is a unique identification number assigned to all stocks and registered bonds in the United States and Canada.\n"
            },
            "transactionDate": {
              "type": "string",
              "format": "date",
              "example": "2024-01-31",
              "description": "The transaction or trade date in YYYY-MM-DD format."
            },
            "transactionCategoryId": {
              "type": "string",
              "example": "02",
              "description": "The transaction category identifier that identifies the category of transaction.\nExamples include:<br><br>\n<code>02</code>  Income Received<br>\n<code>20</code>  Deliver Long<br><br>\nValid values are defined by the Client.\n"
            },
            "transactionCategory": {
              "type": "string",
              "example": "Income Received",
              "description": "The name assigned to the transaction category corresponding to the <code>transactionCategoryId</code>"
            },
            "transactionCode": {
              "type": "string",
              "example": "47",
              "description": "The transaction identifier that identifies the type of transaction.<br><br>\nExamples include:<br>\n<code>FRBUY</code>  Purchase<br>\n<code>FRPIN</code>  Income<br><br>\nValid values are defined by the Client.\n"
            },
            "transactionCodeDescription": {
              "type": "string",
              "example": "INTEREST",
              "description": "The description associated with the <code>transactionCode</code>"
            },
            "transactionUnits": {
              "type": "string",
              "pattern": "^-?\\d*\\.?\\d{0,4}$",
              "example": "50",
              "description": "The absolute value of the number of shares in the transaction."
            },
            "transactionUnitPrice": {
              "type": "string",
              "pattern": "^-?\\d*\\.?\\d{0,6}$",
              "example": "99.99",
              "description": "The price per unit assigned to the transaction."
            },
            "transactionPrincipal": {
              "type": "string",
              "pattern": "^-?\\d*\\.?\\d{0,2}$",
              "example": "4999.5",
              "description": "The principal value of the transaction."
            },
            "transactionIncome": {
              "type": "string",
              "pattern": "^-?\\d*\\.?\\d{0,2}$",
              "example": "123.45",
              "description": "Cash income received (or purchased)"
            },
            "transactionFees": {
              "type": "string",
              "pattern": "^-?\\d*\\.?\\d{0,2}$",
              "example": "9.95",
              "description": "Transaction fees associated with the transaction."
            },
            "transactionStory": {
              "type": "string",
              "example": "Free receipt to open account.",
              "description": "Freeform text notes or description of the transaction."
            }
          }
        }
      },
      "BadRequest": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "example": 400,
            "description": "For some errors that could be handled programmatically, a short string indicating the error code reported."
          },
          "name": {
            "type": "string",
            "example": "Bad Request",
            "description": "A short error name or error class or type."
          },
          "message": {
            "type": "string",
            "example": "The request was unacceptable, often due to an incorrect or missing parameter.",
            "description": "A human-readable message providing more details about the error."
          }
        }
      },
      "ErrorModel400": {
        "type": "object",
        "required": [
          "code",
          "message"
        ],
        "properties": {
          "code": {
            "type": "integer",
            "enum": [
              200,
              400,
              401,
              402,
              403,
              404,
              429
            ],
            "example": 400,
            "description": "For some errors that could be handled programmatically, a short string indicating the error code reported."
          },
          "name": {
            "type": "string",
            "example": "Bad Request",
            "description": "A short error name or error class or type."
          },
          "message": {
            "type": "string",
            "example": "The request was unacceptable, often due to an incorrect or missing parameter.",
            "description": "A human-readable message providing more details about the error."
          }
        }
      },
      "Composite": {
        "description": "A unique composite account identifier. All composite accounts begin with either 'AGG' or 'AGE'.",
        "type": "string",
        "pattern": "^(AGG|AGE)[A-Z0-9-_.]{1,11}$",
        "example": "AGGAUTHORSCIEN"
      },
      "AsOfDateEOM": {
        "type": "string",
        "format": "date",
        "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
        "example": "20121031",
        "description": "The 'as of' date for the reporting period in YYYYMMDD format. For the current processing month use the date of the last data load, otherwise use the end-of-month date."
      },
      "CompositeID": {
        "type": "string",
        "example": "AUTHORSCIEN",
        "description": "The unique identifier for the composite. All constituents share this ID. \nThis ID is derived from the composite account's unique account ID by removing the 'AGG' or 'AGE' prefix.\n"
      },
      "CompositeName": {
        "type": "string",
        "example": "Authors and Scientists Composite",
        "description": "The name or title assigned to the composite."
      },
      "CompositeInceptionDate": {
        "type": "string",
        "format": "date",
        "example": "2011-10-15",
        "description": "The date when the composite was established, in YYYY-MM-DD format."
      },
      "AccountIDCompositeConstituent": {
        "type": "string",
        "minLength": 1,
        "maxLength": 14,
        "example": "AGGAUTHORSCIEN",
        "description": "The unique identifier for the underlying constituent account.  \nThe composite account can also be included and is identified as the accountId matching the user input accountId (or without the AGG/AGE prefix being equal to the compositeId).  \n"
      },
      "AccountName": {
        "type": "string",
        "minLength": 0,
        "maxLength": 100,
        "example": "Model Portfolio A",
        "description": "The name or title assigned to the constituent account.  Standard account names can be up to 50 characters.  Alternate reporting account names can be used (based on system settings) and can be up to 100 characters."
      },
      "AccountInceptionDate": {
        "type": "string",
        "format": "date",
        "example": "2012-01-01",
        "description": "The date when the constituent account was established, in YYYY-MM-DD format."
      },
      "AsOfDate": {
        "type": "string",
        "format": "date",
        "example": "2024-01-31",
        "description": "The reporting date, in YYYY-MM-DD format, reflecting the date specified in the request."
      },
      "Periods": {
        "type": "array",
        "items": {
          "type": "string",
          "pattern": "^(?:(?:[1-9][0-9]{0,2})|(?:QTR[1-9][0-9]{0,2})|(?:CMP(?:[1-9]|1[0-2]))|(?:MPP[1-9][0-9]{0,2})|(?:FMP(?:[1-9]|1[0-2]))|(?:APP[1-9][0-9]{0,2})|(?:FAP[1-9][0-9]{0,2})|(?:MTD)|(?:YTD)|(?:FTD)|(?:FQD)|(?:FQD[1-9][0-9]{0,2})|(?:QTD)|(?:QTD[1-9][0-9]{0,2})|(?:ITD)|(?:PTP)|(?:SPD)|(?:ICM)|(?:CON))$"
        },
        "default": [
          "1"
        ],
        "example": [
          "1",
          "ITD"
        ],
        "description": "A list of valid periods to report on. Valid period values include:\n- <code>`1-999`</code>\n- <code>`QTR1-999`</code>\n- <code>`CMP1-12`</code>\n- <code>`MPP1-999`</code>\n- <code>`FMP1-12`</code>\n- <code>`APP1-999`</code>\n- <code>`FAP1-999`</code>\n- <code>`MTD`</code>\n- <code>`YTD`</code>\n- <code>`FTD`</code>\n- <code>`FQD`</code>\n- <code>`FQD1-999`</code>\n- <code>`QTD`</code>\n- <code>`QTD1-999`</code>\n- <code>`ITD`</code>\n- <code>`PTP`</code>\n- <code>`SPD`</code>\n- <code>`ICM`</code>\n- <code>`CON`</code>\n"
      },
      "Segments": {
        "description": "A list of sectors identifiers for which to retrieve data.",
        "type": "array",
        "items": {
          "type": "string",
          "pattern": "^[A-Z0-9]{1,4}$"
        },
        "example": [
          "EQ",
          "01"
        ]
      },
      "Benchmarks": {
        "description": "An optional list of benchmark identifiers.",
        "type": "array",
        "items": {
          "type": "string",
          "pattern": "^[A-Z0-9]{1,4}$"
        },
        "example": [
          "01",
          "42"
        ]
      },
      "SegmentID": {
        "type": "string",
        "example": "TF",
        "description": "The identifier for the segment. A segment can be either a benchmark, sector, or groups of sectors(asset class)"
      },
      "SegmentName": {
        "type": "string",
        "example": "Total Fund",
        "description": "The benchmark or sector name assigned to the segment."
      },
      "SegmentType": {
        "type": "string",
        "enum": [
          "benchmark",
          "sector"
        ],
        "example": "sector",
        "description": "Indicates whether the data record represents a benchmark or a sector."
      },
      "SectorMarket": {
        "type": "string",
        "pattern": "^-?\\d*\\.?\\d{0,2}$",
        "example": "2634780.85",
        "description": "The sum of the sector's asset values as of the specified date. If the segment is a benchmark, this value is <code>null</code>."
      },
      "SectorAccrual": {
        "type": "string",
        "pattern": "^-?\\d*\\.?\\d{0,2}$",
        "example": "3647.65",
        "description": "The accrued earnings of the sector as of the specified date. If the segment is a benchmark, this value is <code>null</code>."
      },
      "SectorMarketValue": {
        "type": "string",
        "pattern": "^-?\\d*\\.?\\d{0,2}$",
        "example": "2638428.45",
        "description": "The sum of the sector's asset values and accrued earnings as of the specified date. If the segment is a benchmark, this value is <code>null</code>."
      },
      "SectorAllocation": {
        "type": "string",
        "pattern": "^-?\\d*\\.?\\d{0,6}$",
        "example": "1.734406",
        "description": "The allocation percentage of the sector as of the specified date. If the segment is a benchmark, this value is <code>null</code>."
      },
      "PeriodIndex": {
        "type": "string",
        "pattern": "^[1-9]\\d*$",
        "example": "1",
        "description": "The index of the current period from the list provided in the input parameter <strong>periods</strong>. \nFor example, if the periods provided are ['YTD', 'ITD'], the indexes will be 1 and 2, respectively.\n"
      },
      "PeriodSTP": {
        "type": "string",
        "example": "ITD",
        "description": "The period identifier from the input parameter <strong>periods</strong>, representing the defined start and end dates for the data record."
      },
      "FromDate": {
        "type": "string",
        "format": "date",
        "example": "2012-10-01",
        "description": "The start date of the period, in YYYY-MM-DD format."
      },
      "ToDate": {
        "type": "string",
        "format": "date",
        "example": "2012-10-31",
        "description": "The end date of the period, in YYYY-MM-DD format."
      },
      "FromDateAdjusted": {
        "type": "string",
        "enum": [
          "N",
          "Y"
        ],
        "example": "N",
        "description": "If <code>Y</code>, this indicates that the period's start date (<strong>fromDate</strong>) \nwas adjusted forward to match the account's inception date.\n"
      },
      "PeriodTotalUVR": {
        "type": "string",
        "pattern": "^-?\\d*\\.?\\d{0,6}$",
        "example": "0.981646",
        "description": "The segment's rate of return for the period, expressed as a unit value ratio (UVR)."
      },
      "PeriodTotalROR": {
        "type": "string",
        "pattern": "^-?\\d*\\.?\\d{0,4}$",
        "example": "-1.8400",
        "description": "The segment's annualized rate of return for the period, expressed as a percentage (%)."
      },
      "Accounts": {
        "type": "array",
        "items": {
          "type": "string",
          "pattern": "^[A-Z0-9-_.]{1,14}$",
          "example": "AGGAUTHORSCIEN"
        },
        "description": "A list of one or more unique account identifiers."
      },
      "Account": {
        "type": "string",
        "pattern": "^[A-Z0-9-_.]{1,14}$",
        "example": "AGGAUTHORSCIEN",
        "description": "A unique account identifier."
      },
      "AccountID": {
        "type": "string",
        "minLength": 1,
        "maxLength": 14,
        "example": "AGGAUTHORSCIEN",
        "description": "The unique identifier for the account."
      },
      "ClassId": {
        "type": "string",
        "pattern": "^[A-Z0-9]{1,4}$",
        "example": "FX",
        "description": "The identifier of the asset class."
      },
      "ClassName": {
        "type": "string",
        "example": "Fixed Income",
        "description": "The name assigned to the asset class."
      },
      "SectorId": {
        "type": "string",
        "pattern": "^[A-Z0-9]{1,4}$",
        "example": "01",
        "description": "The identifier of the sector or category."
      },
      "SectorName": {
        "type": "string",
        "example": "Total Fund",
        "description": "The name assigned to the sector or category."
      },
      "AssetID": {
        "type": "string",
        "example": "1845402H4",
        "description": "The unique identifier for the asset."
      },
      "AcquisitionDate": {
        "type": "string",
        "format": "date",
        "example": "2024-01-31",
        "description": "The acquisition date in YYYY-MM-DD format."
      },
      "AssetPrice": {
        "type": "string",
        "pattern": "^-?\\d*\\.?\\d{0,6}$",
        "example": "108.537",
        "description": "The unit price of the asset not including any accrued income."
      },
      "Units": {
        "type": "string",
        "pattern": "^-?\\d*\\.?\\d{0,4}$",
        "example": "45.15",
        "description": "The number of shares held."
      },
      "AssetPrincipal": {
        "type": "string",
        "pattern": "^-?\\d*\\.?\\d{0,2}$",
        "example": "99.99",
        "description": "The principal or market value of the asset not including any accrued income."
      },
      "AssetAccrual": {
        "type": "string",
        "pattern": "^-?\\d*\\.?\\d{0,2}$",
        "example": "15.25",
        "description": "Income that has been accrued but not yet been paid."
      },
      "Schema": {
        "type": "string",
        "enum": [
          "1",
          "2",
          "3"
        ],
        "example": "1",
        "description": "Selects segment schema 1, 2, or 3. Defaults to 1."
      },
      "AssetName": {
        "type": "string",
        "example": "CLEAR CRK ISD-REF 2.5 2/15/2021",
        "description": "The name assigned to the asset."
      },
      "AssetTicker": {
        "type": "string",
        "example": "1845402H4",
        "description": "The ticker symbol assigned to the asset.  \nA ticker symbol or stock symbol is an abbreviation used to uniquely identify publicly traded shares of a particular stock on a particular stock market\n"
      },
      "AssetCusip": {
        "type": "string",
        "example": "1845402H4",
        "description": "The CUSIP value assigned to the assetId.  CUSIP stands for Committee on Uniform Securities Identification Procedures1. \nThe Cusip is a unique identification number assigned to all stocks and registered bonds in the United States and Canada.\n"
      },
      "AssetMarketValue": {
        "type": "string",
        "pattern": "^-?\\d*\\.?\\d{0,2}$",
        "example": "99.99",
        "description": "The market or principal value of the asset including any accrued income."
      },
      "Period": {
        "type": "string",
        "pattern": "^(?:(?:[1-9][0-9]{0,2})|(?:QTR[1-9][0-9]{0,2})|(?:CMP(?:[1-9]|1[0-2]))|(?:MPP[1-9][0-9]{0,2})|(?:FMP(?:[1-9]|1[0-2]))|(?:APP[1-9][0-9]{0,2})|(?:FAP[1-9][0-9]{0,2})|(?:MTD)|(?:YTD)|(?:FTD)|(?:FQD)|(?:FQD[1-9][0-9]{0,2})|(?:QTD)|(?:QTD[1-9][0-9]{0,2})|(?:ITD)|(?:PTP)|(?:SPD)|(?:ICM))$",
        "default": 1,
        "example": "YTD",
        "description": "A valid period to report on. Valid period values include:\n  - <code>`1-999`</code>\n  - <code>`QTR1-999`</code>\n  - <code>`CMP1-12`</code>\n  - <code>`MPP1-999`</code>\n  - <code>`FMP1-12`</code>\n  - <code>`APP1-999`</code>\n  - <code>`FAP1-999`</code>\n  - <code>`MTD`</code>\n  - <code>`YTD`</code>\n  - <code>`FTD`</code>\n  - <code>`FQD`</code>\n  - <code>`FQD1-999`</code>\n  - <code>`QTD`</code>\n  - <code>`QTD1-999`</code>\n  - <code>`ITD`</code>\n  - <code>`PTP`</code>\n  - <code>`SPD`</code>\n  - <code>`ICM`</code>\n"
      },
      "Segment": {
        "type": "string",
        "pattern": "^[A-Z0-9]{1,4}$",
        "default": "01",
        "example": "01",
        "description": "The identifier of the model sector for the report."
      },
      "RecordLimit": {
        "type": "string",
        "pattern": "^[1-9]\\d*$",
        "example": "10",
        "description": "The maximum number of records to return. Assign 0 for no record limit."
      },
      "SegmentModel": {
        "type": "string",
        "pattern": "^[A-Z0-9]{1,4}$",
        "default": "01",
        "example": "01",
        "description": "The identifier of the model sector for the report."
      },
      "BenchmarkModel": {
        "type": "string",
        "pattern": "^[A-Z0-9]{1,4}$",
        "example": "01",
        "description": "The identifier of the benchmark to compare with the selected model sector."
      },
      "BenchmarkRiskFree": {
        "type": "string",
        "pattern": "^[A-Z0-9]{1,4}$",
        "example": "42",
        "description": "A benchmark representing the risk-free rate of return, used in the Sharpe and Treynor ratio calculations."
      },
      "SegmentInceptionDate": {
        "type": "string",
        "format": "date",
        "example": "2024-01-31",
        "description": "The inception date of the segment in YYYY-MM-DD format."
      },
      "Errors400": {
        "type": "object",
        "required": [
          "code",
          "message"
        ],
        "properties": {
          "code": {
            "type": "integer",
            "enum": [
              200,
              400,
              401,
              402,
              403,
              404,
              429
            ],
            "example": 400,
            "description": "For some errors that could be handled programmatically, a short string indicating the error code reported."
          },
          "name": {
            "type": "string",
            "example": "Bad Request",
            "description": "A short error name or error class or type."
          },
          "message": {
            "type": "string",
            "example": "The request was unacceptable, often due to an incorrect or missing parameter.",
            "description": "A human-readable message providing more details about the error."
          }
        }
      }
    },
    "securitySchemes": {
      "x-api-key": {
        "description": "This Demo API uses a static API key for authorization. \nAn API key is a token that a client provides when making API calls. The key can be sent in the query string:\n",
        "type": "apiKey",
        "in": "query",
        "name": "x-api-key"
      }
    },
    "requestBodies": {
      "CompositeAllocationRequest": {
        "description": "A CompositeAllocationRequest JSON object containing the request parameters.",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "account": {
                  "description": "A unique composite account identifier. All composite accounts begin with either 'AGG' or 'AGE'.",
                  "type": "string",
                  "pattern": "^(AGG|AGE)[A-Z0-9-_.]{1,11}$",
                  "example": "AGGAUTHORSCIEN"
                },
                "asOfDate": {
                  "type": "string",
                  "format": "date",
                  "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
                  "example": "20121031",
                  "description": "The 'as of' date for the reporting period in YYYYMMDD format. For the current processing month use the date of the last data load, otherwise use the end-of-month date."
                }
              },
              "required": [
                "composite",
                "asOfDate"
              ]
            }
          }
        }
      },
      "CompositePerformanceRequest": {
        "description": "A CompositePerformanceRequest JSON object containing the request parameters.",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "account": {
                  "description": "A unique composite account identifier. All composite accounts begin with either 'AGG' or 'AGE'.",
                  "type": "string",
                  "pattern": "^(AGG|AGE)[A-Z0-9-_.]{1,11}$",
                  "example": "AGGAUTHORSCIEN"
                },
                "asOfDate": {
                  "type": "string",
                  "format": "date",
                  "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
                  "example": "20121031",
                  "description": "The 'as of' date for the reporting period in YYYYMMDD format. For the current processing month use the date of the last data load, otherwise use the end-of-month date."
                },
                "periods": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "pattern": "^(?:(?:[1-9][0-9]{0,2})|(?:QTR[1-9][0-9]{0,2})|(?:CMP(?:[1-9]|1[0-2]))|(?:MPP[1-9][0-9]{0,2})|(?:FMP(?:[1-9]|1[0-2]))|(?:APP[1-9][0-9]{0,2})|(?:FAP[1-9][0-9]{0,2})|(?:MTD)|(?:YTD)|(?:FTD)|(?:FQD)|(?:FQD[1-9][0-9]{0,2})|(?:QTD)|(?:QTD[1-9][0-9]{0,2})|(?:ITD)|(?:PTP)|(?:SPD)|(?:ICM)|(?:CON))$"
                  },
                  "default": [
                    "1"
                  ],
                  "example": [
                    "1",
                    "ITD"
                  ],
                  "description": "A list of valid periods to report on. Valid period values include:\n- <code>`1-999`</code>\n- <code>`QTR1-999`</code>\n- <code>`CMP1-12`</code>\n- <code>`MPP1-999`</code>\n- <code>`FMP1-12`</code>\n- <code>`APP1-999`</code>\n- <code>`FAP1-999`</code>\n- <code>`MTD`</code>\n- <code>`YTD`</code>\n- <code>`FTD`</code>\n- <code>`FQD`</code>\n- <code>`FQD1-999`</code>\n- <code>`QTD`</code>\n- <code>`QTD1-999`</code>\n- <code>`ITD`</code>\n- <code>`PTP`</code>\n- <code>`SPD`</code>\n- <code>`ICM`</code>\n- <code>`CON`</code>\n"
                },
                "segments": {
                  "description": "A list of sectors identifiers for which to retrieve data.",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "pattern": "^[A-Z0-9]{1,4}$"
                  },
                  "example": [
                    "EQ",
                    "01"
                  ]
                },
                "benchmarks": {
                  "description": "An optional list of benchmark identifiers.",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "pattern": "^[A-Z0-9]{1,4}$"
                  },
                  "example": [
                    "01",
                    "42"
                  ]
                }
              },
              "required": [
                "account",
                "asOfDate"
              ]
            }
          }
        }
      },
      "DemographicsRequest": {
        "description": "A DemographicsRequest JSON object containing the request parameters.",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "accounts": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "pattern": "^[A-Z0-9-_.]{1,14}$",
                    "example": "AGGAUTHORSCIEN"
                  },
                  "description": "A list of one or more unique account identifiers."
                },
                "asOfDate": {
                  "type": "string",
                  "format": "date",
                  "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
                  "example": "20121031",
                  "description": "The 'as of' date for the reporting period in YYYYMMDD format. For the current processing month use the date of the last data load, otherwise use the end-of-month date."
                },
                "demographics": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "ACCT",
                      "ACCTBASE",
                      "ACCTCURR",
                      "ACCTFLD",
                      "ACECDATE",
                      "ACTIVE",
                      "ADM",
                      "AGGFEATR",
                      "AGGOWNER",
                      "AGGTYP",
                      "APXDATE",
                      "BNK",
                      "CEINDX",
                      "CMPRPIND",
                      "EQINDX",
                      "EQPOL",
                      "FREQX",
                      "FXINDX",
                      "FXPOL",
                      "FYE",
                      "GLOBALFL",
                      "ICPDATED",
                      "ICPDATED_ALT",
                      "INDXPKG",
                      "IPPICP",
                      "MR_IND",
                      "MRACTVRN",
                      "MRLFRPDT",
                      "MRLFRRDT",
                      "MRLPRCDT",
                      "MRLRPDT",
                      "MRRPTFRQ",
                      "MVI_ACC",
                      "NAME",
                      "OBJ",
                      "OFFN",
                      "PCOLOR",
                      "PF_TIER",
                      "PWR",
                      "RCFREQ",
                      "RCTOL",
                      "REPTPKG",
                      "RPTDATE",
                      "RPTINGNAME",
                      "RULEPKG",
                      "SECPKG",
                      "SECTPKG",
                      "SMACPYFR",
                      "SMACPYTO",
                      "SMARPLEV",
                      "SMASORT",
                      "SMASRCE",
                      "STATEID",
                      "STATUS",
                      "TOLERPKG",
                      "TXFDONLY",
                      "TXRATE1",
                      "TXRATE2",
                      "TXRATE3",
                      "TXRATE4",
                      "TXRATE5",
                      "TXRATE6",
                      "TYP",
                      "UDA101",
                      "UDA102",
                      "UDA103",
                      "UDA104",
                      "UDA105",
                      "UDA106",
                      "UDA107",
                      "UDA108",
                      "UDA109",
                      "UDA110",
                      "UDA111",
                      "UDA112",
                      "UDA113",
                      "UDA114",
                      "UDA115",
                      "UDA301",
                      "UDA302",
                      "UDA303",
                      "UDA304",
                      "UDA305",
                      "UDA306",
                      "UDA307",
                      "UDA308",
                      "UDA309",
                      "UDA310",
                      "UDA311",
                      "UDA312",
                      "UDA313",
                      "UDA314",
                      "UDA315",
                      "UDDATE1",
                      "UDDATE2",
                      "UDDATE3",
                      "UDDATE4",
                      "UDDATE5",
                      "UDDATE6",
                      "UDDATE7",
                      "UDDATE8",
                      "UDDATE9",
                      "UDDATE10",
                      "UDDATE11",
                      "UDDATE12",
                      "UDDATE13",
                      "UDDATE14",
                      "UDDATE15",
                      "UDN1",
                      "UDN2",
                      "UDN3",
                      "UDN4",
                      "UDN5",
                      "UDN6",
                      "UDN7",
                      "UDN8",
                      "UDN9",
                      "UDN10",
                      "UDN11",
                      "UDN12",
                      "UDN13",
                      "UDN14",
                      "UDN15",
                      "USERDEF",
                      "USERDEF2",
                      "USERDEF3",
                      "USERDEF4",
                      "WTDINDX"
                    ]
                  },
                  "uniqueItems": true,
                  "default": [
                    "ACCT",
                    "NAME",
                    "MVI_ACC",
                    "ICPDATED",
                    "BNK",
                    "ACCTCURR",
                    "UDA101"
                  ],
                  "example": [
                    "ACCT",
                    "NAME",
                    "MVI_ACC",
                    "ICPDATED",
                    "BNK",
                    "ACCTCURR",
                    "UDA101"
                  ],
                  "description": "A list of demographic field identifiers to retrieve."
                }
              },
              "required": [
                "accounts"
              ]
            }
          }
        }
      },
      "FixedIncomeRequest": {
        "description": "A JSON object containing the request parameters.",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "account": {
                  "type": "string",
                  "pattern": "^[A-Z0-9-_.]{1,14}$",
                  "example": "AGGAUTHORSCIEN",
                  "description": "A unique account identifier."
                },
                "asOfDate": {
                  "type": "string",
                  "format": "date",
                  "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
                  "example": "20121031",
                  "description": "The 'as of' date for the reporting period in YYYYMMDD format. For the current processing month use the date of the last data load, otherwise use the end-of-month date."
                },
                "periods": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "pattern": "^(?:(?:[1-9][0-9]{0,2})|(?:QTR[1-9][0-9]{0,2})|(?:CMP(?:[1-9]|1[0-2]))|(?:MPP[1-9][0-9]{0,2})|(?:FMP(?:[1-9]|1[0-2]))|(?:APP[1-9][0-9]{0,2})|(?:FAP[1-9][0-9]{0,2})|(?:MTD)|(?:YTD)|(?:FTD)|(?:FQD)|(?:FQD[1-9][0-9]{0,2})|(?:QTD)|(?:QTD[1-9][0-9]{0,2})|(?:ITD)|(?:PTP)|(?:SPD)|(?:ICM)|(?:CON))$"
                  },
                  "default": [
                    "1"
                  ],
                  "example": [
                    "1",
                    "ITD"
                  ],
                  "description": "A list of valid periods to report on. Valid period values include:\n- <code>`1-999`</code>\n- <code>`QTR1-999`</code>\n- <code>`CMP1-12`</code>\n- <code>`MPP1-999`</code>\n- <code>`FMP1-12`</code>\n- <code>`APP1-999`</code>\n- <code>`FAP1-999`</code>\n- <code>`MTD`</code>\n- <code>`YTD`</code>\n- <code>`FTD`</code>\n- <code>`FQD`</code>\n- <code>`FQD1-999`</code>\n- <code>`QTD`</code>\n- <code>`QTD1-999`</code>\n- <code>`ITD`</code>\n- <code>`PTP`</code>\n- <code>`SPD`</code>\n- <code>`ICM`</code>\n- <code>`CON`</code>\n"
                }
              },
              "required": [
                "account",
                "asOfDate"
              ]
            }
          }
        }
      },
      "HoldingsRequest": {
        "description": "A FixedIncomeRequest JSON object containing the request parameters.",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "account": {
                  "type": "string",
                  "pattern": "^[A-Z0-9-_.]{1,14}$",
                  "example": "AGGAUTHORSCIEN",
                  "description": "A unique account identifier."
                },
                "asOfDate": {
                  "type": "string",
                  "format": "date",
                  "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
                  "example": "20121031",
                  "description": "The 'as of' date for the reporting period in YYYYMMDD format. For the current processing month use the date of the last data load, otherwise use the end-of-month date."
                },
                "schema": {
                  "type": "string",
                  "enum": [
                    "1",
                    "2",
                    "3"
                  ],
                  "example": "1",
                  "description": "Selects segment schema 1, 2, or 3. Defaults to 1."
                }
              },
              "required": [
                "account",
                "asOfDate"
              ]
            }
          }
        }
      },
      "InvestmentSummaryRequest": {
        "description": "A InvestmentSummaryRequest JSON object containing the request parameters.",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "account": {
                  "type": "string",
                  "pattern": "^[A-Z0-9-_.]{1,14}$",
                  "example": "AGGAUTHORSCIEN",
                  "description": "A unique account identifier."
                },
                "asOfDate": {
                  "type": "string",
                  "format": "date",
                  "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
                  "example": "20121031",
                  "description": "The 'as of' date for the reporting period in YYYYMMDD format. For the current processing month use the date of the last data load, otherwise use the end-of-month date."
                },
                "period": {
                  "type": "string",
                  "pattern": "^(?:(?:[1-9][0-9]{0,2})|(?:QTR[1-9][0-9]{0,2})|(?:CMP(?:[1-9]|1[0-2]))|(?:MPP[1-9][0-9]{0,2})|(?:FMP(?:[1-9]|1[0-2]))|(?:APP[1-9][0-9]{0,2})|(?:FAP[1-9][0-9]{0,2})|(?:MTD)|(?:YTD)|(?:FTD)|(?:FQD)|(?:FQD[1-9][0-9]{0,2})|(?:QTD)|(?:QTD[1-9][0-9]{0,2})|(?:ITD)|(?:PTP)|(?:SPD)|(?:ICM))$",
                  "default": 1,
                  "example": "YTD",
                  "description": "A valid period to report on. Valid period values include:\n  - <code>`1-999`</code>\n  - <code>`QTR1-999`</code>\n  - <code>`CMP1-12`</code>\n  - <code>`MPP1-999`</code>\n  - <code>`FMP1-12`</code>\n  - <code>`APP1-999`</code>\n  - <code>`FAP1-999`</code>\n  - <code>`MTD`</code>\n  - <code>`YTD`</code>\n  - <code>`FTD`</code>\n  - <code>`FQD`</code>\n  - <code>`FQD1-999`</code>\n  - <code>`QTD`</code>\n  - <code>`QTD1-999`</code>\n  - <code>`ITD`</code>\n  - <code>`PTP`</code>\n  - <code>`SPD`</code>\n  - <code>`ICM`</code>\n"
                },
                "segment": {
                  "type": "string",
                  "pattern": "^[A-Z0-9]{1,4}$",
                  "default": "01",
                  "example": "01",
                  "description": "The identifier of the model sector for the report."
                }
              },
              "required": [
                "account",
                "asOfDate"
              ]
            }
          }
        }
      },
      "LargestHoldingsRequest": {
        "description": "A LargestHoldingsRequest JSON object containing the request parameters.",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "account": {
                  "type": "string",
                  "pattern": "^[A-Z0-9-_.]{1,14}$",
                  "example": "AGGAUTHORSCIEN",
                  "description": "A unique account identifier."
                },
                "asOfDate": {
                  "type": "string",
                  "format": "date",
                  "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
                  "example": "20121031",
                  "description": "The 'as of' date for the reporting period in YYYYMMDD format. For the current processing month use the date of the last data load, otherwise use the end-of-month date."
                },
                "period": {
                  "type": "string",
                  "pattern": "^(?:(?:[1-9][0-9]{0,2})|(?:QTR[1-9][0-9]{0,2})|(?:CMP(?:[1-9]|1[0-2]))|(?:MPP[1-9][0-9]{0,2})|(?:FMP(?:[1-9]|1[0-2]))|(?:APP[1-9][0-9]{0,2})|(?:FAP[1-9][0-9]{0,2})|(?:MTD)|(?:YTD)|(?:FTD)|(?:FQD)|(?:FQD[1-9][0-9]{0,2})|(?:QTD)|(?:QTD[1-9][0-9]{0,2})|(?:ITD)|(?:PTP)|(?:SPD)|(?:ICM))$",
                  "default": 1,
                  "example": "YTD",
                  "description": "A valid period to report on. Valid period values include:\n  - <code>`1-999`</code>\n  - <code>`QTR1-999`</code>\n  - <code>`CMP1-12`</code>\n  - <code>`MPP1-999`</code>\n  - <code>`FMP1-12`</code>\n  - <code>`APP1-999`</code>\n  - <code>`FAP1-999`</code>\n  - <code>`MTD`</code>\n  - <code>`YTD`</code>\n  - <code>`FTD`</code>\n  - <code>`FQD`</code>\n  - <code>`FQD1-999`</code>\n  - <code>`QTD`</code>\n  - <code>`QTD1-999`</code>\n  - <code>`ITD`</code>\n  - <code>`PTP`</code>\n  - <code>`SPD`</code>\n  - <code>`ICM`</code>\n"
                },
                "recordLimit": {
                  "default": 10,
                  "type": "string",
                  "pattern": "^[1-9]\\d*$",
                  "example": "10",
                  "description": "The maximum number of records to return. Assign 0 for no record limit."
                }
              },
              "required": [
                "accounts",
                "asOfDate"
              ]
            }
          }
        }
      },
      "RiskStatisticsRequest": {
        "description": "A RiskStatisticsRequest JSON object containing the request parameters.",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "account": {
                  "type": "string",
                  "pattern": "^[A-Z0-9-_.]{1,14}$",
                  "example": "AGGAUTHORSCIEN",
                  "description": "A unique account identifier."
                },
                "asOfDate": {
                  "type": "string",
                  "format": "date",
                  "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
                  "example": "20121031",
                  "description": "The 'as of' date for the reporting period in YYYYMMDD format. For the current processing month use the date of the last data load, otherwise use the end-of-month date."
                },
                "period": {
                  "type": "string",
                  "pattern": "^(?:(?:[1-9][0-9]{0,2})|(?:QTR[1-9][0-9]{0,2})|(?:CMP(?:[1-9]|1[0-2]))|(?:MPP[1-9][0-9]{0,2})|(?:FMP(?:[1-9]|1[0-2]))|(?:APP[1-9][0-9]{0,2})|(?:FAP[1-9][0-9]{0,2})|(?:MTD)|(?:YTD)|(?:FTD)|(?:FQD)|(?:FQD[1-9][0-9]{0,2})|(?:QTD)|(?:QTD[1-9][0-9]{0,2})|(?:ITD)|(?:PTP)|(?:SPD)|(?:ICM))$",
                  "default": 1,
                  "example": "YTD",
                  "description": "A valid period to report on. Valid period values include:\n  - <code>`1-999`</code>\n  - <code>`QTR1-999`</code>\n  - <code>`CMP1-12`</code>\n  - <code>`MPP1-999`</code>\n  - <code>`FMP1-12`</code>\n  - <code>`APP1-999`</code>\n  - <code>`FAP1-999`</code>\n  - <code>`MTD`</code>\n  - <code>`YTD`</code>\n  - <code>`FTD`</code>\n  - <code>`FQD`</code>\n  - <code>`FQD1-999`</code>\n  - <code>`QTD`</code>\n  - <code>`QTD1-999`</code>\n  - <code>`ITD`</code>\n  - <code>`PTP`</code>\n  - <code>`SPD`</code>\n  - <code>`ICM`</code>\n"
                },
                "segment": {
                  "type": "string",
                  "pattern": "^[A-Z0-9]{1,4}$",
                  "default": "01",
                  "example": "01",
                  "description": "The identifier of the model sector for the report."
                },
                "benchmark": {
                  "type": "string",
                  "pattern": "^[A-Z0-9]{1,4}$",
                  "example": "01",
                  "description": "The identifier of the benchmark to compare with the selected model sector."
                },
                "benchmarkRiskFree": {
                  "type": "string",
                  "pattern": "^[A-Z0-9]{1,4}$",
                  "example": "42",
                  "description": "A benchmark representing the risk-free rate of return, used in the Sharpe and Treynor ratio calculations."
                }
              },
              "required": [
                "accounts",
                "asOfDate",
                "segment",
                "benchmark",
                "benchmarkRiskFree"
              ]
            }
          }
        }
      },
      "SectorAllocationRequest": {
        "description": "A SectorAllocationRequest JSON object containing the request parameters.",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "account": {
                  "type": "string",
                  "pattern": "^[A-Z0-9-_.]{1,14}$",
                  "example": "AGGAUTHORSCIEN",
                  "description": "A unique account identifier."
                },
                "asOfDate": {
                  "type": "string",
                  "format": "date",
                  "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
                  "example": "20121031",
                  "description": "The 'as of' date for the reporting period in YYYYMMDD format. For the current processing month use the date of the last data load, otherwise use the end-of-month date."
                },
                "periods": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "pattern": "^(?:(?:[1-9][0-9]{0,2})|(?:QTR[1-9][0-9]{0,2})|(?:CMP(?:[1-9]|1[0-2]))|(?:MPP[1-9][0-9]{0,2})|(?:FMP(?:[1-9]|1[0-2]))|(?:APP[1-9][0-9]{0,2})|(?:FAP[1-9][0-9]{0,2})|(?:MTD)|(?:YTD)|(?:FTD)|(?:FQD)|(?:FQD[1-9][0-9]{0,2})|(?:QTD)|(?:QTD[1-9][0-9]{0,2})|(?:ITD)|(?:PTP)|(?:SPD)|(?:ICM)|(?:CON))$"
                  },
                  "default": [
                    "1"
                  ],
                  "example": [
                    "1",
                    "ITD"
                  ],
                  "description": "A list of valid periods to report on. Valid period values include:\n- <code>`1-999`</code>\n- <code>`QTR1-999`</code>\n- <code>`CMP1-12`</code>\n- <code>`MPP1-999`</code>\n- <code>`FMP1-12`</code>\n- <code>`APP1-999`</code>\n- <code>`FAP1-999`</code>\n- <code>`MTD`</code>\n- <code>`YTD`</code>\n- <code>`FTD`</code>\n- <code>`FQD`</code>\n- <code>`FQD1-999`</code>\n- <code>`QTD`</code>\n- <code>`QTD1-999`</code>\n- <code>`ITD`</code>\n- <code>`PTP`</code>\n- <code>`SPD`</code>\n- <code>`ICM`</code>\n- <code>`CON`</code>\n"
                },
                "segments": {
                  "description": "A list of sectors identifiers for which to retrieve data.",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "pattern": "^[A-Z0-9]{1,4}$"
                  },
                  "example": [
                    "EQ",
                    "01"
                  ]
                }
              },
              "required": [
                "account",
                "asOfDate",
                "segments"
              ]
            }
          }
        }
      },
      "SectorInceptionRequest": {
        "description": "A SectorInceptionRequest JSON object containing the request parameters.",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "account": {
                  "type": "string",
                  "pattern": "^[A-Z0-9-_.]{1,14}$",
                  "example": "AGGAUTHORSCIEN",
                  "description": "A unique account identifier."
                },
                "asOfDate": {
                  "type": "string",
                  "format": "date",
                  "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
                  "example": "20121031",
                  "description": "The 'as of' date for the reporting period in YYYYMMDD format. For the current processing month use the date of the last data load, otherwise use the end-of-month date."
                },
                "periods": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "pattern": "^(?:(?:[1-9][0-9]{0,2})|(?:QTR[1-9][0-9]{0,2})|(?:CMP(?:[1-9]|1[0-2]))|(?:MPP[1-9][0-9]{0,2})|(?:FMP(?:[1-9]|1[0-2]))|(?:APP[1-9][0-9]{0,2})|(?:FAP[1-9][0-9]{0,2})|(?:MTD)|(?:YTD)|(?:FTD)|(?:FQD)|(?:FQD[1-9][0-9]{0,2})|(?:QTD)|(?:QTD[1-9][0-9]{0,2})|(?:ITD)|(?:PTP)|(?:SPD)|(?:ICM)|(?:CON))$"
                  },
                  "default": [
                    "1"
                  ],
                  "example": [
                    "1",
                    "ITD"
                  ],
                  "description": "A list of valid periods to report on. Valid period values include:\n- <code>`1-999`</code>\n- <code>`QTR1-999`</code>\n- <code>`CMP1-12`</code>\n- <code>`MPP1-999`</code>\n- <code>`FMP1-12`</code>\n- <code>`APP1-999`</code>\n- <code>`FAP1-999`</code>\n- <code>`MTD`</code>\n- <code>`YTD`</code>\n- <code>`FTD`</code>\n- <code>`FQD`</code>\n- <code>`FQD1-999`</code>\n- <code>`QTD`</code>\n- <code>`QTD1-999`</code>\n- <code>`ITD`</code>\n- <code>`PTP`</code>\n- <code>`SPD`</code>\n- <code>`ICM`</code>\n- <code>`CON`</code>\n"
                },
                "segments": {
                  "description": "A list of sectors identifiers for which to retrieve data.",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "pattern": "^[A-Z0-9]{1,4}$"
                  },
                  "example": [
                    "EQ",
                    "01"
                  ]
                },
                "benchmarks": {
                  "description": "An optional list of benchmark identifiers.",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "pattern": "^[A-Z0-9]{1,4}$"
                  },
                  "example": [
                    "01",
                    "42"
                  ]
                }
              },
              "required": [
                "account",
                "asOfDate"
              ]
            }
          }
        }
      },
      "TopPerformersRequest": {
        "description": "A TopPerformersRequest JSON object containing the request parameters.",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "account": {
                  "type": "string",
                  "pattern": "^[A-Z0-9-_.]{1,14}$",
                  "example": "AGGAUTHORSCIEN",
                  "description": "A unique account identifier."
                },
                "asOfDate": {
                  "type": "string",
                  "format": "date",
                  "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
                  "example": "20121031",
                  "description": "The 'as of' date for the reporting period in YYYYMMDD format. For the current processing month use the date of the last data load, otherwise use the end-of-month date."
                },
                "period": {
                  "type": "string",
                  "pattern": "^(?:(?:[1-9][0-9]{0,2})|(?:QTR[1-9][0-9]{0,2})|(?:CMP(?:[1-9]|1[0-2]))|(?:MPP[1-9][0-9]{0,2})|(?:FMP(?:[1-9]|1[0-2]))|(?:APP[1-9][0-9]{0,2})|(?:FAP[1-9][0-9]{0,2})|(?:MTD)|(?:YTD)|(?:FTD)|(?:FQD)|(?:FQD[1-9][0-9]{0,2})|(?:QTD)|(?:QTD[1-9][0-9]{0,2})|(?:ITD)|(?:PTP)|(?:SPD)|(?:ICM))$",
                  "default": 1,
                  "example": "YTD",
                  "description": "A valid period to report on. Valid period values include:\n  - <code>`1-999`</code>\n  - <code>`QTR1-999`</code>\n  - <code>`CMP1-12`</code>\n  - <code>`MPP1-999`</code>\n  - <code>`FMP1-12`</code>\n  - <code>`APP1-999`</code>\n  - <code>`FAP1-999`</code>\n  - <code>`MTD`</code>\n  - <code>`YTD`</code>\n  - <code>`FTD`</code>\n  - <code>`FQD`</code>\n  - <code>`FQD1-999`</code>\n  - <code>`QTD`</code>\n  - <code>`QTD1-999`</code>\n  - <code>`ITD`</code>\n  - <code>`PTP`</code>\n  - <code>`SPD`</code>\n  - <code>`ICM`</code>\n"
                },
                "recordLimit": {
                  "default": 10,
                  "type": "string",
                  "pattern": "^[1-9]\\d*$",
                  "example": "10",
                  "description": "The maximum number of records to return. Assign 0 for no record limit."
                }
              },
              "required": [
                "accounts",
                "asOfDate"
              ]
            }
          }
        }
      },
      "TransactionsRequest": {
        "description": "A TransactionsRequest JSON object containing the request parameters.",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "account": {
                  "type": "string",
                  "pattern": "^[A-Z0-9-_.]{1,14}$",
                  "example": "AGGAUTHORSCIEN",
                  "description": "A unique account identifier."
                },
                "asOfDate": {
                  "type": "string",
                  "format": "date",
                  "pattern": "^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])$",
                  "example": "20121031",
                  "description": "The 'as of' date for the reporting period in YYYYMMDD format. For the current processing month use the date of the last data load, otherwise use the end-of-month date."
                },
                "period": {
                  "type": "string",
                  "pattern": "^(?:(?:[1-9][0-9]{0,2})|(?:QTR[1-9][0-9]{0,2})|(?:CMP(?:[1-9]|1[0-2]))|(?:MPP[1-9][0-9]{0,2})|(?:FMP(?:[1-9]|1[0-2]))|(?:APP[1-9][0-9]{0,2})|(?:FAP[1-9][0-9]{0,2})|(?:MTD)|(?:YTD)|(?:FTD)|(?:FQD)|(?:FQD[1-9][0-9]{0,2})|(?:QTD)|(?:QTD[1-9][0-9]{0,2})|(?:ITD)|(?:PTP)|(?:SPD)|(?:ICM))$",
                  "default": 1,
                  "example": "YTD",
                  "description": "A valid period to report on. Valid period values include:\n  - <code>`1-999`</code>\n  - <code>`QTR1-999`</code>\n  - <code>`CMP1-12`</code>\n  - <code>`MPP1-999`</code>\n  - <code>`FMP1-12`</code>\n  - <code>`APP1-999`</code>\n  - <code>`FAP1-999`</code>\n  - <code>`MTD`</code>\n  - <code>`YTD`</code>\n  - <code>`FTD`</code>\n  - <code>`FQD`</code>\n  - <code>`FQD1-999`</code>\n  - <code>`QTD`</code>\n  - <code>`QTD1-999`</code>\n  - <code>`ITD`</code>\n  - <code>`PTP`</code>\n  - <code>`SPD`</code>\n  - <code>`ICM`</code>\n"
                }
              },
              "required": [
                "account",
                "asOfDate"
              ]
            }
          }
        }
      }
    },
    "responses": {
      "BadRequest": {
        "description": "400 The request was unacceptable, often due to missing a required parameter.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 400,
                  "description": "For some errors that could be handled programmatically, a short string indicating the error code reported."
                },
                "name": {
                  "type": "string",
                  "example": "Bad Request",
                  "description": "A short error name or error class or type."
                },
                "message": {
                  "type": "string",
                  "example": "The request was unacceptable, often due to an incorrect or missing parameter.",
                  "description": "A human-readable message providing more details about the error."
                }
              }
            }
          }
        }
      },
      "Unauthorized": {
        "description": "401 Authentication information is missing or invalid",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "code",
                "message"
              ],
              "properties": {
                "code": {
                  "type": "integer",
                  "enum": [
                    200,
                    400,
                    401,
                    402,
                    403,
                    404,
                    429
                  ],
                  "example": 400,
                  "description": "For some errors that could be handled programmatically, a short string indicating the error code reported."
                },
                "name": {
                  "type": "string",
                  "example": "Bad Request",
                  "description": "A short error name or error class or type."
                },
                "message": {
                  "type": "string",
                  "example": "The request was unacceptable, often due to an incorrect or missing parameter.",
                  "description": "A human-readable message providing more details about the error."
                }
              }
            }
          }
        }
      },
      "RequestFailed": {
        "description": "402 The parameters were valid but the request failed.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "code",
                "message"
              ],
              "properties": {
                "code": {
                  "type": "integer",
                  "enum": [
                    200,
                    400,
                    401,
                    402,
                    403,
                    404,
                    429
                  ],
                  "example": 400,
                  "description": "For some errors that could be handled programmatically, a short string indicating the error code reported."
                },
                "name": {
                  "type": "string",
                  "example": "Bad Request",
                  "description": "A short error name or error class or type."
                },
                "message": {
                  "type": "string",
                  "example": "The request was unacceptable, often due to an incorrect or missing parameter.",
                  "description": "A human-readable message providing more details about the error."
                }
              }
            }
          }
        }
      },
      "Forbidden": {
        "description": "403\tForbidden\tThe API key doesn‚Äôt have permissions to perform the request.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "code",
                "message"
              ],
              "properties": {
                "code": {
                  "type": "integer",
                  "enum": [
                    200,
                    400,
                    401,
                    402,
                    403,
                    404,
                    429
                  ],
                  "example": 400,
                  "description": "For some errors that could be handled programmatically, a short string indicating the error code reported."
                },
                "name": {
                  "type": "string",
                  "example": "Bad Request",
                  "description": "A short error name or error class or type."
                },
                "message": {
                  "type": "string",
                  "example": "The request was unacceptable, often due to an incorrect or missing parameter.",
                  "description": "A human-readable message providing more details about the error."
                }
              }
            }
          }
        }
      },
      "NotFound": {
        "description": "404 The specified resource was not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "code",
                "message"
              ],
              "properties": {
                "code": {
                  "type": "integer",
                  "enum": [
                    200,
                    400,
                    401,
                    402,
                    403,
                    404,
                    429
                  ],
                  "example": 400,
                  "description": "For some errors that could be handled programmatically, a short string indicating the error code reported."
                },
                "name": {
                  "type": "string",
                  "example": "Bad Request",
                  "description": "A short error name or error class or type."
                },
                "message": {
                  "type": "string",
                  "example": "The request was unacceptable, often due to an incorrect or missing parameter.",
                  "description": "A human-readable message providing more details about the error."
                }
              }
            }
          }
        }
      }
    }
  }
}